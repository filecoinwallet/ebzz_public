# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/_ebzz_ebzz
pkgincludedir = $(includedir)/_ebzz_ebzz
pkglibdir = $(libdir)/_ebzz_ebzz
pkglibexecdir = $(libexecdir)/_ebzz_ebzz
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
am__append_1 = -I$(srcdir)/leveldb/include \
	-I$(srcdir)/leveldb/helpers/memenv \
	-Wno-deprecated
am__append_2 = $(builddir)/leveldb/libleveldb.a
am__append_3 = $(builddir)/leveldb/libmemenv.a
am__append_4 = $(BDB_CPPFLAGS)
am__append_5 = lib_ebzz_ebzz_wallet.a
am__append_6 = $(LIB_ebzz_ebzz_V8)
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2)
TESTS =

#  bin_PROGRAMS += _ebzz_ebzzd _ebzz_ebzzd						# MCHN
am__append_7 = _ebzz_ebzzd _ebzz_ebzzd-cold					# MCHN

#  bin_PROGRAMS += _ebzz_ebzz-util _ebzz_ebzz-cli _ebzz_ebzz-cli _ebzz_ebzz-tx		# MCHN
am__append_8 = _ebzz_ebzz-util _ebzz_ebzz-cli 		# MCHN
#am__append_9 = compat/glibc_compat.cpp \
#	compat/glibcxx_compat.cpp
am__append_10 = \
    -Wl,--start-group

am__append_11 = \
    -lrt

#am__append_12 = $(top_builddir)/src/v8_win/build/Release/_ebzz_ebzz-v8.lib
am__append_13 = $(LIB_ebzz_ebzz_V8)
#am__append_14 = filters/filter_win.cpp _ebzz_ebzzd-res.rc
am__append_15 = filters/filter.cpp
am__append_16 = $(V8_LIBS)
#
#am__append_17 = _ebzz_ebzzd-cold-res.rc
#
#am__append_18 = _ebzz_ebzz-cli-res.rc
#
#am__append_19 = _ebzz_ebzz-util-res.rc
#am__append_20 = compat/glibc_compat.cpp \
#	compat/glibcxx_compat.cpp
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/build-aux/m4/ax_pthread.m4 \
	$(top_srcdir)/build-aux/m4/_ebzz_ebzz_find_bdb48.m4 \
	$(top_srcdir)/build-aux/m4/_ebzz_ebzz_qt.m4 \
	$(top_srcdir)/build-aux/m4/_ebzz_ebzz_subdir_to_include.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 $(top_srcdir)/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__include_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config/_ebzz_ebzz-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
crypto_lib_ebzz_ebzz_crypto_a_AR = $(AR) $(ARFLAGS)
crypto_lib_ebzz_ebzz_crypto_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_crypto_lib_ebzz_ebzz_crypto_a_OBJECTS =  \
	crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.$(OBJEXT) \
	crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.$(OBJEXT) \
	crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.$(OBJEXT) \
	crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.$(OBJEXT) \
	crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.$(OBJEXT) \
	crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.$(OBJEXT)
crypto_lib_ebzz_ebzz_crypto_a_OBJECTS =  \
	$(am_crypto_lib_ebzz_ebzz_crypto_a_OBJECTS)
lib_ebzz_ebzz_cli_a_AR = $(AR) $(ARFLAGS)
lib_ebzz_ebzz_cli_a_LIBADD =
am__objects_1 =
am_lib_ebzz_ebzz_cli_a_OBJECTS =  \
	rpc/lib_ebzz_ebzz_cli_a-rpcclient.$(OBJEXT) $(am__objects_1)
lib_ebzz_ebzz_cli_a_OBJECTS = $(am_lib_ebzz_ebzz_cli_a_OBJECTS)
lib_ebzz_ebzz_common_a_AR = $(AR) $(ARFLAGS)
lib_ebzz_ebzz_common_a_LIBADD =
am_lib_ebzz_ebzz_common_a_OBJECTS =  \
	utils/lib_ebzz_ebzz_common_a-allocators.$(OBJEXT) \
	structs/lib_ebzz_ebzz_common_a-amount.$(OBJEXT) \
	structs/lib_ebzz_ebzz_common_a-base58.$(OBJEXT) \
	chainparams/lib_ebzz_ebzz_common_a-chainparams.$(OBJEXT) \
	storage/lib_ebzz_ebzz_common_a-coins.$(OBJEXT) \
	utils/lib_ebzz_ebzz_common_a-compressor.$(OBJEXT) \
	primitives/lib_ebzz_ebzz_common_a-block.$(OBJEXT) \
	primitives/lib_ebzz_ebzz_common_a-transaction.$(OBJEXT) \
	utils/lib_ebzz_ebzz_common_a-core_read.$(OBJEXT) \
	utils/lib_ebzz_ebzz_common_a-core_write.$(OBJEXT) \
	structs/lib_ebzz_ebzz_common_a-hash.$(OBJEXT) \
	keys/lib_ebzz_ebzz_common_a-key.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_common_a-keystore.$(OBJEXT) \
	net/lib_ebzz_ebzz_common_a-netbase.$(OBJEXT) \
	protocol/lib_ebzz_ebzz_common_a-netprotocol.$(OBJEXT) \
	keys/lib_ebzz_ebzz_common_a-pubkey.$(OBJEXT) \
	script/lib_ebzz_ebzz_common_a-interpreter.$(OBJEXT) \
	script/lib_ebzz_ebzz_common_a-script.$(OBJEXT) \
	script/lib_ebzz_ebzz_common_a-sign.$(OBJEXT) \
	script/lib_ebzz_ebzz_common_a-standard.$(OBJEXT) \
	script/lib_ebzz_ebzz_common_a-script_error.$(OBJEXT) \
	$(am__objects_1)
lib_ebzz_ebzz_common_a_OBJECTS = $(am_lib_ebzz_ebzz_common_a_OBJECTS)
lib_ebzz_ebzz_community_a_AR = $(AR) $(ARFLAGS)
lib_ebzz_ebzz_community_a_LIBADD =
am_lib_ebzz_ebzz_community_a_OBJECTS =  \
	community/lib_ebzz_ebzz_community_a-community.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_community_a-db.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_community_a-dbwrap_com.$(OBJEXT)
lib_ebzz_ebzz_community_a_OBJECTS = $(am_lib_ebzz_ebzz_community_a_OBJECTS)
lib_ebzz_ebzz_enterprise_a_AR = $(AR) $(ARFLAGS)
lib_ebzz_ebzz_enterprise_a_LIBADD =
am__lib_ebzz_ebzz_enterprise_a_SOURCES_DIST = community/community.cpp \
	wallet/db.cpp wallet/dbwrap_com.cpp
am_lib_ebzz_ebzz_enterprise_a_OBJECTS = community/lib_ebzz_ebzz_enterprise_a-community.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_enterprise_a-db.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.$(OBJEXT)
lib_ebzz_ebzz_enterprise_a_OBJECTS =  \
	$(am_lib_ebzz_ebzz_enterprise_a_OBJECTS)
lib_ebzz_ebzz_server_a_AR = $(AR) $(ARFLAGS)
lib_ebzz_ebzz_server_a_LIBADD =
am_lib_ebzz_ebzz_server_a_OBJECTS =  \
	storage/lib_ebzz_ebzz_server_a-addrman.$(OBJEXT) \
	structs/lib_ebzz_ebzz_server_a-alert.$(OBJEXT) \
	structs/lib_ebzz_ebzz_server_a-bloom.$(OBJEXT) \
	chain/lib_ebzz_ebzz_server_a-chain.$(OBJEXT) \
	chain/lib_ebzz_ebzz_server_a-checkpoints.$(OBJEXT) \
	core/lib_ebzz_ebzz_server_a-init.$(OBJEXT) \
	storage/lib_ebzz_ebzz_server_a-leveldbwrapper.$(OBJEXT) \
	core/lib_ebzz_ebzz_server_a-main.$(OBJEXT) \
	protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.$(OBJEXT) \
	protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.$(OBJEXT) \
	custom/lib_ebzz_ebzz_server_a-custom_server.$(OBJEXT) \
	filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.$(OBJEXT) \
	protocol/lib_ebzz_ebzz_server_a-relay.$(OBJEXT) \
	protocol/lib_ebzz_ebzz_server_a-handshake.$(OBJEXT) \
	chain/lib_ebzz_ebzz_server_a-merkleblock.$(OBJEXT) \
	miner/lib_ebzz_ebzz_server_a-miner.$(OBJEXT) \
	net/lib_ebzz_ebzz_server_a-net.$(OBJEXT) \
	ui/lib_ebzz_ebzz_server_a-noui.$(OBJEXT) \
	chain/lib_ebzz_ebzz_server_a-pow.$(OBJEXT) \
	net/lib_ebzz_ebzz_server_a-rest.$(OBJEXT) \
	utils/lib_ebzz_ebzz_server_a-utilparse.$(OBJEXT) \
	json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcrawdata.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcutils.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpccache.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcchunks.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcdebug.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpchelp.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcblockchain.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcmining.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcmisc.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcnet.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcfeeds.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_server_a-rpcserver.$(OBJEXT) \
	script/lib_ebzz_ebzz_server_a-sigcache.$(OBJEXT) \
	utils/lib_ebzz_ebzz_server_a-timedata.$(OBJEXT) \
	storage/lib_ebzz_ebzz_server_a-txdb.$(OBJEXT) \
	chain/lib_ebzz_ebzz_server_a-txmempool.$(OBJEXT) $(am__objects_1) \
	$(am__objects_1)
lib_ebzz_ebzz_server_a_OBJECTS = $(am_lib_ebzz_ebzz_server_a_OBJECTS)
lib_ebzz_ebzz_util_a_AR = $(AR) $(ARFLAGS)
lib_ebzz_ebzz_util_a_LIBADD =
am__lib_ebzz_ebzz_util_a_SOURCES_DIST = compat/strnlen.cpp \
	compat/glibc_sanity.cpp compat/glibcxx_sanity.cpp \
	chainparams/chainparamsbase.cpp version/clientversion.cpp \
	utils/random.cpp rpc/rpcprotocol.cpp utils/sync.cpp \
	structs/uint256.cpp utils/util.cpp utils/utilstrencodings.cpp \
	utils/utilmoneystr.cpp utils/utiltime.cpp storage/addrman.h \
	structs/alert.h utils/allocators.h structs/amount.h \
	structs/base58.h structs/bloom.h chain/chain.h \
	chainparams/chainparams.h chainparams/chainparamsbase.h \
	chainparams/chainparamsseeds.h chain/checkpoints.h \
	checkqueue.h version/clientversion.h coincontrol.h \
	storage/coins.h utils/compat.h utils/compressor.h \
	primitives/block.h primitives/transaction.h utils/core_io.h \
	wallet/crypter.h wallet/dbflat.h wallet/db.h wallet/dbwrap.h \
	structs/hash.h core/init.h keys/key.h wallet/keystore.h \
	storage/leveldbwrapper.h structs/limitedmap.h core/main.h \
	chain/merkleblock.h miner/miner.h utils/mruset.h net/netbase.h \
	net/net.h ui/noui.h chain/pow.h protocol/netprotocol.h \
	keys/pubkey.h utils/random.h utils/utilparse.h rpc/rpcclient.h \
	rpc/rpcprotocol.h rpc/rpcasio.h rpc/rpcutils.h rpc/rpcwallet.h \
	rpc/rpcserver.h script/interpreter.h script/script.h \
	script/sigcache.h script/sign.h script/standard.h \
	script/script_error.h utils/serialize.h utils/streams.h \
	utils/sync.h utils/threadsafety.h utils/timedata.h \
	utils/tinyformat.h storage/txdb.h chain/txmempool.h \
	ui/ui_interface.h structs/uint256.h chain/undo.h utils/util.h \
	utils/utilstrencodings.h utils/utilmoneystr.h utils/utiltime.h \
	version/bcversion.h wallet/wallet.h wallet/wallettxs.h \
	wallet/wallet_ismine.h wallet/walletdb.h compat/sanity.h \
	compat/glibc_compat.cpp compat/glibcxx_compat.cpp
#am__objects_2 = compat/lib_ebzz_ebzz_util_a-glibc_compat.$(OBJEXT) \
#	compat/lib_ebzz_ebzz_util_a-glibcxx_compat.$(OBJEXT)
am_lib_ebzz_ebzz_util_a_OBJECTS =  \
	compat/lib_ebzz_ebzz_util_a-strnlen.$(OBJEXT) \
	compat/lib_ebzz_ebzz_util_a-glibc_sanity.$(OBJEXT) \
	compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.$(OBJEXT) \
	chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.$(OBJEXT) \
	version/lib_ebzz_ebzz_util_a-clientversion.$(OBJEXT) \
	utils/lib_ebzz_ebzz_util_a-random.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_util_a-rpcprotocol.$(OBJEXT) \
	utils/lib_ebzz_ebzz_util_a-sync.$(OBJEXT) \
	structs/lib_ebzz_ebzz_util_a-uint256.$(OBJEXT) \
	utils/lib_ebzz_ebzz_util_a-util.$(OBJEXT) \
	utils/lib_ebzz_ebzz_util_a-utilstrencodings.$(OBJEXT) \
	utils/lib_ebzz_ebzz_util_a-utilmoneystr.$(OBJEXT) \
	utils/lib_ebzz_ebzz_util_a-utiltime.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2)
nodist_lib_ebzz_ebzz_util_a_OBJECTS =
lib_ebzz_ebzz_util_a_OBJECTS = $(am_lib_ebzz_ebzz_util_a_OBJECTS) \
	$(nodist_lib_ebzz_ebzz_util_a_OBJECTS)
lib_ebzz_ebzz_v8_a_AR = $(AR) $(ARFLAGS)
lib_ebzz_ebzz_v8_a_LIBADD =
am_lib_ebzz_ebzz_v8_a_OBJECTS = v8/lib_ebzz_ebzz_v8_a-v8engine.$(OBJEXT) \
	v8/lib_ebzz_ebzz_v8_a-v8filter.$(OBJEXT) \
	v8/lib_ebzz_ebzz_v8_a-callbacks.$(OBJEXT) \
	v8/lib_ebzz_ebzz_v8_a-v8json_spirit.$(OBJEXT)
lib_ebzz_ebzz_v8_a_OBJECTS = $(am_lib_ebzz_ebzz_v8_a_OBJECTS)
lib_ebzz_ebzz_wallet_a_AR = $(AR) $(ARFLAGS)
lib_ebzz_ebzz_wallet_a_LIBADD =
am_lib_ebzz_ebzz_wallet_a_OBJECTS =  \
	wallet/lib_ebzz_ebzz_wallet_a-dbflat.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_wallet_a-crypter.$(OBJEXT) \
	community/lib_ebzz_ebzz_wallet_a-license.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcdump.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcassets.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpclicense.$(OBJEXT) \
	rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_wallet_a-wallet.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_wallet_a-walletcoins.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_wallet_a-wallettxs.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.$(OBJEXT) \
	wallet/lib_ebzz_ebzz_wallet_a-walletdb.$(OBJEXT) $(am__objects_1)
lib_ebzz_ebzz_wallet_a_OBJECTS = $(am_lib_ebzz_ebzz_wallet_a_OBJECTS)
_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_AR = $(AR) $(ARFLAGS)
_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_LIBADD =
am__ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_OBJECTS =  \
	utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.$(OBJEXT) \
	utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.$(OBJEXT) \
	utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.$(OBJEXT) \
	utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.$(OBJEXT) \
	version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.$(OBJEXT) \
	custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.$(OBJEXT) \
	custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.$(OBJEXT) \
	chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.$(OBJEXT) \
	protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.$(OBJEXT) \
	utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.$(OBJEXT) \
	wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.$(OBJEXT) \
	wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.$(OBJEXT) \
	wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.$(OBJEXT) \
	permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.$(OBJEXT) \
	entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.$(OBJEXT)
_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_OBJECTS =  \
	$(am__ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_OBJECTS)
univalue_lib_ebzz_ebzz_univalue_a_AR = $(AR) $(ARFLAGS)
univalue_lib_ebzz_ebzz_univalue_a_LIBADD =
am_univalue_lib_ebzz_ebzz_univalue_a_OBJECTS =  \
	univalue/univalue.$(OBJEXT) univalue/univalue_read.$(OBJEXT) \
	univalue/univalue_write.$(OBJEXT)
univalue_lib_ebzz_ebzz_univalue_a_OBJECTS =  \
	$(am_univalue_lib_ebzz_ebzz_univalue_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
lib_ebzz_ebzzconsensus_la_DEPENDENCIES =  \
	$(LIBSECP256K1)
am__lib_ebzz_ebzzconsensus_la_SOURCES_DIST = primitives/transaction.cpp \
	crypto/hmac_sha512.cpp crypto/sha1.cpp crypto/sha256.cpp \
	crypto/sha512.cpp crypto/ripemd160.cpp utils/utility.cpp \
	utils/systemdependent.cpp utils/tools.cpp \
	utils/utilwrapper.cpp chainparams/buildgenesis.cpp \
	version/version.cpp custom/custom.cpp \
	custom/custom__ebzz_ebzz.cpp chainparams/chainparams.cpp \
	protocol/_ebzz_ebzzscript.cpp utils/dbwrapper.cpp \
	wallet/wallettxdb.cpp wallet/chunkdb.cpp \
	wallet/chunkcollector.cpp permissions/permission.cpp \
	entities/asset.cpp structs/hash.cpp keys/pubkey.cpp \
	script/script.cpp script/interpreter.cpp \
	script/_ebzz_ebzzconsensus.cpp structs/uint256.cpp \
	utils/utilstrencodings.cpp compat/glibc_compat.cpp \
	compat/glibcxx_compat.cpp
#am__objects_3 = compat/lib_ebzz_ebzzconsensus_la-glibc_compat.lo \
#	compat/lib_ebzz_ebzzconsensus_la-glibcxx_compat.lo
am_lib_ebzz_ebzzconsensus_la_OBJECTS = primitives/lib_ebzz_ebzzconsensus_la-transaction.lo \
	crypto/lib_ebzz_ebzzconsensus_la-hmac_sha512.lo \
	crypto/lib_ebzz_ebzzconsensus_la-sha1.lo \
	crypto/lib_ebzz_ebzzconsensus_la-sha256.lo \
	crypto/lib_ebzz_ebzzconsensus_la-sha512.lo \
	crypto/lib_ebzz_ebzzconsensus_la-ripemd160.lo \
	utils/lib_ebzz_ebzzconsensus_la-utility.lo \
	utils/lib_ebzz_ebzzconsensus_la-systemdependent.lo \
	utils/lib_ebzz_ebzzconsensus_la-tools.lo \
	utils/lib_ebzz_ebzzconsensus_la-utilwrapper.lo \
	chainparams/lib_ebzz_ebzzconsensus_la-buildgenesis.lo \
	version/lib_ebzz_ebzzconsensus_la-version.lo \
	custom/lib_ebzz_ebzzconsensus_la-custom.lo \
	custom/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.lo \
	chainparams/lib_ebzz_ebzzconsensus_la-chainparams.lo \
	protocol/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.lo \
	utils/lib_ebzz_ebzzconsensus_la-dbwrapper.lo \
	wallet/lib_ebzz_ebzzconsensus_la-wallettxdb.lo \
	wallet/lib_ebzz_ebzzconsensus_la-chunkdb.lo \
	wallet/lib_ebzz_ebzzconsensus_la-chunkcollector.lo \
	permissions/lib_ebzz_ebzzconsensus_la-permission.lo \
	entities/lib_ebzz_ebzzconsensus_la-asset.lo \
	structs/lib_ebzz_ebzzconsensus_la-hash.lo \
	keys/lib_ebzz_ebzzconsensus_la-pubkey.lo \
	script/lib_ebzz_ebzzconsensus_la-script.lo \
	script/lib_ebzz_ebzzconsensus_la-interpreter.lo \
	script/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.lo \
	structs/lib_ebzz_ebzzconsensus_la-uint256.lo \
	utils/lib_ebzz_ebzzconsensus_la-utilstrencodings.lo \
	$(am__objects_3)
lib_ebzz_ebzzconsensus_la_OBJECTS = $(am_lib_ebzz_ebzzconsensus_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
lib_ebzz_ebzzconsensus_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(lib_ebzz_ebzzconsensus_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_lib_ebzz_ebzzconsensus_la_rpath = -rpath \
	$(libdir)
am__EXEEXT_1 = _ebzz_ebzzd$(EXEEXT) \
	_ebzz_ebzzd-cold$(EXEEXT)
am__EXEEXT_2 = _ebzz_ebzz-util$(EXEEXT) \
	_ebzz_ebzz-cli$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am___ebzz_ebzz_cli_SOURCES_DIST = _ebzz_ebzz/_ebzz_ebzz-cli.cpp \
	_ebzz_ebzz-cli-res.rc
#am__objects_4 = _ebzz_ebzz-cli-res.$(OBJEXT)
am__ebzz_ebzz_cli_OBJECTS =  \
	_ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.$(OBJEXT) \
	$(am__objects_4)
_ebzz_ebzz_cli_OBJECTS = $(am__ebzz_ebzz_cli_OBJECTS)
am__DEPENDENCIES_1 = $(am__append_2)
am__DEPENDENCIES_2 =
_ebzz_ebzz_cli_DEPENDENCIES = $(LIB_ebzz_ebzz_CLI) $(LIB_ebzz_ebzz_UTIL) \
	$(LIB_ebzz_ebzz__ebzz_ebzz) $(LIB_ebzz_ebzz_CRYPTO) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_2)
_ebzz_ebzz_cli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(_ebzz_ebzz_cli_LDFLAGS) \
	$(LDFLAGS) -o $@
am___ebzz_ebzz_util_SOURCES_DIST = _ebzz_ebzz/_ebzz_ebzz-util.cpp \
	chainparams/buildgenesis.cpp _ebzz_ebzz-util-res.rc
#am__objects_5 = _ebzz_ebzz-util-res.$(OBJEXT)
am__ebzz_ebzz_util_OBJECTS =  \
	_ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.$(OBJEXT) \
	chainparams/_ebzz_ebzz_util-buildgenesis.$(OBJEXT) \
	$(am__objects_5)
_ebzz_ebzz_util_OBJECTS = $(am__ebzz_ebzz_util_OBJECTS)
_ebzz_ebzz_util_DEPENDENCIES = $(LIB_ebzz_ebzz_UNIVALUE) \
	$(LIB_ebzz_ebzz__ebzz_ebzz) $(LIB_ebzz_ebzz_COMMON) \
	$(LIB_ebzz_ebzz_UTIL) $(LIB_ebzz_ebzz_CRYPTO) $(am__DEPENDENCIES_1) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_2)
_ebzz_ebzz_util_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(_ebzz_ebzz_util_LDFLAGS) \
	$(LDFLAGS) -o $@
am___ebzz_ebzzd_SOURCES_DIST = _ebzz_ebzz/_ebzz_ebzzd.cpp \
	rpc/rpclist.cpp chainparams/buildgenesis.cpp \
	filters/filtercallback.cpp filters/watchdog.cpp \
	json/json_spirit_writer.cpp filters/filter_win.cpp \
	_ebzz_ebzzd-res.rc filters/filter.cpp
#am__objects_6 =  \
#	filters/_ebzz_ebzzd-filter_win.$(OBJEXT) \
#	_ebzz_ebzzd-res.$(OBJEXT)
am__objects_7 =  \
	filters/_ebzz_ebzzd-filter.$(OBJEXT)
am__ebzz_ebzzd_OBJECTS = _ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.$(OBJEXT) \
	rpc/_ebzz_ebzzd-rpclist.$(OBJEXT) \
	chainparams/_ebzz_ebzzd-buildgenesis.$(OBJEXT) \
	filters/_ebzz_ebzzd-filtercallback.$(OBJEXT) \
	filters/_ebzz_ebzzd-watchdog.$(OBJEXT) \
	json/_ebzz_ebzzd-json_spirit_writer.$(OBJEXT) $(am__objects_6) \
	$(am__objects_7)
_ebzz_ebzzd_OBJECTS = $(am__ebzz_ebzzd_OBJECTS)
am__DEPENDENCIES_3 = $(am__append_3)
_ebzz_ebzzd_DEPENDENCIES = $(LIB_ebzz_ebzz_SERVER) $(LIB_ebzz_ebzz_COMMON) \
	$(LIB_ebzz_ebzz_UNIVALUE) $(LIB_ebzz_ebzz_WALLET) \
	$(LIB_ebzz_ebzz_ENTERPRISE) $(LIB_ebzz_ebzz__ebzz_ebzz) \
	$(LIB_ebzz_ebzz_UTIL) $(LIB_ebzz_ebzz_CRYPTO) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_3) $(LIBSECP256K1) $(am__append_12) \
	$(am__append_13) $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2)
_ebzz_ebzzd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(_ebzz_ebzzd_LDFLAGS) $(LDFLAGS) -o $@
am___ebzz_ebzzd_cold_SOURCES_DIST = _ebzz_ebzz/_ebzz_ebzzd-cold.cpp \
	core/init-cold.cpp rpc/rpclist-cold.cpp \
	chainparams/buildgenesis.cpp filters/filter_cold.cpp \
	filters/filtercallback_cold.cpp filters/watchdog.cpp \
	json/json_spirit_writer.cpp _ebzz_ebzzd-cold-res.rc
#am__objects_8 = _ebzz_ebzzd-cold-res.$(OBJEXT)
am__ebzz_ebzzd_cold_OBJECTS =  \
	_ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.$(OBJEXT) \
	core/_ebzz_ebzzd_cold-init-cold.$(OBJEXT) \
	rpc/_ebzz_ebzzd_cold-rpclist-cold.$(OBJEXT) \
	chainparams/_ebzz_ebzzd_cold-buildgenesis.$(OBJEXT) \
	filters/_ebzz_ebzzd_cold-filter_cold.$(OBJEXT) \
	filters/_ebzz_ebzzd_cold-filtercallback_cold.$(OBJEXT) \
	filters/_ebzz_ebzzd_cold-watchdog.$(OBJEXT) \
	json/_ebzz_ebzzd_cold-json_spirit_writer.$(OBJEXT) \
	$(am__objects_8)
_ebzz_ebzzd_cold_OBJECTS = $(am__ebzz_ebzzd_cold_OBJECTS)
_ebzz_ebzzd_cold_DEPENDENCIES = $(LIB_ebzz_ebzz_SERVER) \
	$(LIB_ebzz_ebzz_COMMON) $(LIB_ebzz_ebzz_UNIVALUE) \
	$(LIB_ebzz_ebzz_WALLET) $(LIB_ebzz_ebzz_COMMUNITY) \
	$(LIB_ebzz_ebzz__ebzz_ebzz) $(LIB_ebzz_ebzz_UTIL) \
	$(LIB_ebzz_ebzz_CRYPTO) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_3) $(LIBSECP256K1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_2)
_ebzz_ebzzd_cold_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(_ebzz_ebzzd_cold_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/config
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(crypto_lib_ebzz_ebzz_crypto_a_SOURCES) \
	$(lib_ebzz_ebzz_cli_a_SOURCES) $(lib_ebzz_ebzz_common_a_SOURCES) \
	$(lib_ebzz_ebzz_community_a_SOURCES) \
	$(lib_ebzz_ebzz_enterprise_a_SOURCES) \
	$(lib_ebzz_ebzz_server_a_SOURCES) $(lib_ebzz_ebzz_util_a_SOURCES) \
	$(nodist_lib_ebzz_ebzz_util_a_SOURCES) $(lib_ebzz_ebzz_v8_a_SOURCES) \
	$(lib_ebzz_ebzz_wallet_a_SOURCES) \
	$(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_SOURCES) \
	$(univalue_lib_ebzz_ebzz_univalue_a_SOURCES) \
	$(lib_ebzz_ebzzconsensus_la_SOURCES) $(_ebzz_ebzz_cli_SOURCES) \
	$(_ebzz_ebzz_util_SOURCES) $(_ebzz_ebzzd_SOURCES) \
	$(_ebzz_ebzzd_cold_SOURCES)
DIST_SOURCES = $(crypto_lib_ebzz_ebzz_crypto_a_SOURCES) \
	$(lib_ebzz_ebzz_cli_a_SOURCES) $(lib_ebzz_ebzz_common_a_SOURCES) \
	$(lib_ebzz_ebzz_community_a_SOURCES) \
	$(am__lib_ebzz_ebzz_enterprise_a_SOURCES_DIST) \
	$(lib_ebzz_ebzz_server_a_SOURCES) \
	$(am__lib_ebzz_ebzz_util_a_SOURCES_DIST) \
	$(lib_ebzz_ebzz_v8_a_SOURCES) $(lib_ebzz_ebzz_wallet_a_SOURCES) \
	$(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_SOURCES) \
	$(univalue_lib_ebzz_ebzz_univalue_a_SOURCES) \
	$(am__lib_ebzz_ebzzconsensus_la_SOURCES_DIST) \
	$(am___ebzz_ebzz_cli_SOURCES_DIST) \
	$(am___ebzz_ebzz_util_SOURCES_DIST) \
	$(am___ebzz_ebzzd_SOURCES_DIST) \
	$(am___ebzz_ebzzd_cold_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__include_HEADERS_DIST = script/_ebzz_ebzzconsensus.h
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/entMakefile.am \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/maya/_ebzz_ebzz/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /usr/bin/ar
AUTOCONF = ${SHELL} /root/maya/_ebzz_ebzz/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /root/maya/_ebzz_ebzz/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /root/maya/_ebzz_ebzz/build-aux/missing automake-1.15
AWK = gawk
BDB_CPPFLAGS = 
BDB_LIBS = -ldb_cxx-4.8
BOOST_CHRONO_LIB = -lboost_chrono
BOOST_CPPFLAGS = -pthread -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_LIBS = -L/usr/lib/x86_64-linux-gnu -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework
BREW = 
BUILD_QT = 
BUILD_TEST = test
BUILD_TEST_QT = 
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLIENT_VERSION_BUILD = 0
CLIENT_VERSION_IS_RELEASE = true
CLIENT_VERSION_MAJOR = 0
CLIENT_VERSION_MINOR = 10
CLIENT_VERSION_REVISION = 0
COMPARISON_TOOL_REORG_TESTS = 0
COPYRIGHT_YEAR = 2015
CPP = gcc -E
CPPFLAGS =  -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -Wno-deprecated-declarations \
	-Wno-unused-local-typedefs -Wno-unused-result \
	-DBOOST_SYSTEM_NO_DEPRECATED=1
CRYPTO_CFLAGS = 
CRYPTO_LIBS = -lcrypto
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter  -Wstack-protector -fstack-protector-all -fPIE -fvisibility=hidden -std=c++0x
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GCOV = /usr/bin/gcov
GENHTML = 
GENISOIMAGE = 
GIT = /usr/bin/git
GREP = /bin/grep
HEXDUMP = /usr/bin/hexdump
INSTALL = /usr/bin/install -c
INSTALLNAMETOOL = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA = 
JAVA_COMPARISON_TOOL = 
LCOV = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =   -Wl,-z,relro -Wl,-z,now -pie
LEVELDB_CPPFLAGS =  $(am__append_1)
LEVELDB_TARGET_FLAGS = 
LIBLEVELDB =  $(am__append_2)
LIBMEMENV =  $(am__append_3)
LIBOBJS = 
LIBS = -lanl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_APP_LDFLAGS = 
LIPO = 
LN_S = ln -s
LRELEASE = 
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LUPDATE = 
MAINT = 
MAKEINFO = ${SHELL} /root/maya/_ebzz_ebzz/build-aux/missing makeinfo
MAKENSIS = 
MANIFEST_TOOL = :
MINIUPNPC_CPPFLAGS = 
MINIUPNPC_LIBS = 
MKDIR_P = /bin/mkdir -p
MOC = 
MOC_DEFS = -DHAVE_CONFIG_H -I$(srcdir)
NM = /usr/bin/nm -B
NMEDIT = 
OBJCXX = g++
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = -g -O2 -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter  -Wstack-protector -fstack-protector-all -fPIE
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = _ebzz_ebzz
PACKAGE_BUGREPORT = info@_ebzz_ebzz.org
PACKAGE_NAME = _ebzz_ebzz Core
PACKAGE_STRING = _ebzz_ebzz Core 0.10.0
PACKAGE_TARNAME = _ebzz_ebzz
PACKAGE_URL = 
PACKAGE_VERSION = 0.10.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PORT = 
PROTOBUF_CFLAGS = 
PROTOBUF_LIBS = 
PROTOC = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
QR_CFLAGS = 
QR_LIBS = 
QTPLATFORM_CFLAGS = 
QTPLATFORM_LIBS = 
QTPRINT_CFLAGS = 
QTPRINT_LIBS = 
QT_CFLAGS = 
QT_DBUS_CFLAGS = 
QT_DBUS_INCLUDES = 
QT_DBUS_LIBS = 
QT_INCLUDES = 
QT_LDFLAGS = 
QT_LIBS = 
QT_SELECT = qt4
QT_TEST_CFLAGS = 
QT_TEST_INCLUDES = 
QT_TEST_LIBS = 
QT_TRANSLATION_DIR = 
RANLIB = /usr/bin/ranlib
RCC = 
RELDFLAGS = -Wl,--exclude-libs,ALL
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SSL_CFLAGS = 
SSL_LIBS = -lssl
STRIP = /usr/bin/strip
TESTDEFS =  -DBOOST_TEST_DYN_LINK
UIC = 
USE_QRCODE = 
USE_UPNP = 
VERSION = 0.10.0
WINDOWS_BITS = 
WINDRES = 
X11XCB_CFLAGS = 
X11XCB_LIBS = 
XGETTEXT = 
abs_builddir = /root/maya/_ebzz_ebzz/src
abs_srcdir = /root/maya/_ebzz_ebzz/src
abs_top_builddir = /root/maya/_ebzz_ebzz
abs_top_srcdir = /root/maya/_ebzz_ebzz
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJCXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/maya/_ebzz_ebzz/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/secp256k1
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
FwalDIST_SUBDIRS = secp256k1
AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS)
_ebzz_ebzz_CONFIG_INCLUDES = -I$(builddir)/config
_ebzz_ebzz_INCLUDES = -I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) \
	$(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS) \
	-I$(srcdir)/secp256k1/include $(am__append_4)
LIB_ebzz_ebzz_ENTERPRISE = lib_ebzz_ebzz_enterprise.a
LIB_ebzz_ebzz_COMMUNITY = lib_ebzz_ebzz_community.a
LIB_ebzz_ebzz_SERVER = lib_ebzz_ebzz_server.a
LIB_ebzz_ebzz_WALLET = lib_ebzz_ebzz_wallet.a
LIB_ebzz_ebzz_COMMON = lib_ebzz_ebzz_common.a
LIB_ebzz_ebzz_CLI = lib_ebzz_ebzz_cli.a
LIB_ebzz_ebzz_UTIL = lib_ebzz_ebzz_util.a
LIB_ebzz_ebzz_CRYPTO = crypto/lib_ebzz_ebzz_crypto.a
LIB_ebzz_ebzz__ebzz_ebzz = _ebzz_ebzz/lib_ebzz_ebzz__ebzz_ebzz.a
LIB_ebzz_ebzz_UNIVALUE = univalue/lib_ebzz_ebzz_univalue.a
LIB_ebzz_ebzzQT = qt/lib_ebzz_ebzzqt.a
LIBSECP256K1 = secp256k1/libsecp256k1.la
LIB_ebzz_ebzz_V8 = lib_ebzz_ebzz_v8.a

# Make is not made aware of per-object dependencies to avoid limiting building parallelization
# But to build the less dependent modules first, we manually select their order here:
EXTRA_LIBRARIES = crypto/lib_ebzz_ebzz_crypto.a \
	_ebzz_ebzz/lib_ebzz_ebzz__ebzz_ebzz.a lib_ebzz_ebzz_util.a \
	lib_ebzz_ebzz_common.a univalue/lib_ebzz_ebzz_univalue.a \
	lib_ebzz_ebzz_enterprise.a lib_ebzz_ebzz_community.a \
	lib_ebzz_ebzz_server.a lib_ebzz_ebzz_cli.a $(am__append_5) \
	$(am__append_6)
lib_LTLIBRARIES = lib_ebzz_ebzzconsensus.la
#LIB_ebzz_ebzz_CONSENSUS = 
LIB_ebzz_ebzz_CONSENSUS = lib_ebzz_ebzzconsensus.la
# _ebzz_ebzz core #
_ebzz_ebzz_CORE_H = \
  storage/addrman.h \
  structs/alert.h \
  utils/allocators.h \
  structs/amount.h \
  structs/base58.h \
  structs/bloom.h \
  chain/chain.h \
  chainparams/chainparams.h \
  chainparams/chainparamsbase.h \
  chainparams/chainparamsseeds.h \
  chain/checkpoints.h \
  checkqueue.h \
  version/clientversion.h \
  coincontrol.h \
  storage/coins.h \
  utils/compat.h \
  utils/compressor.h \
  primitives/block.h \
  primitives/transaction.h \
  utils/core_io.h \
  wallet/crypter.h \
  wallet/dbflat.h \
  wallet/db.h \
  wallet/dbwrap.h \
  structs/hash.h \
  core/init.h \
  keys/key.h \
  wallet/keystore.h \
  storage/leveldbwrapper.h \
  structs/limitedmap.h \
  core/main.h \
  chain/merkleblock.h \
  miner/miner.h \
  utils/mruset.h \
  net/netbase.h \
  net/net.h \
  ui/noui.h \
  chain/pow.h \
  protocol/netprotocol.h \
  keys/pubkey.h \
  utils/random.h \
  utils/utilparse.h \
  rpc/rpcclient.h \
  rpc/rpcprotocol.h \
  rpc/rpcasio.h \
  rpc/rpcutils.h \
  rpc/rpcwallet.h \
  rpc/rpcserver.h \
  script/interpreter.h \
  script/interpreter.h \
  script/script.h \
  script/sigcache.h \
  script/sign.h \
  script/standard.h \
  script/script_error.h \
  utils/serialize.h \
  utils/streams.h \
  utils/sync.h \
  utils/threadsafety.h \
  utils/timedata.h \
  utils/tinyformat.h \
  storage/txdb.h \
  chain/txmempool.h \
  ui/ui_interface.h \
  structs/uint256.h \
  chain/undo.h \
  utils/util.h \
  utils/utilstrencodings.h \
  utils/utilmoneystr.h \
  utils/utiltime.h \
  version/bcversion.h \
  wallet/wallet.h \
  wallet/wallettxs.h \
  wallet/wallet_ismine.h \
  wallet/walletdb.h \
  compat/sanity.h

JSON_H = \
  json/json_spirit.h \
  json/json_spirit_error_position.h \
  json/json_spirit_reader.h \
  json/json_spirit_reader_template.h \
  json/json_spirit_stream_reader.h \
  json/json_spirit_utils.h \
  json/json_spirit_value.h \
  json/json_spirit_writer.h \
  json/json_spirit_writer_template.h \
  json_spirit_ubjson.h

lib_ebzz_ebzz_community_a_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
lib_ebzz_ebzz_community_a_SOURCES = \
  community/community.cpp \
  wallet/db.cpp \
  wallet/dbwrap_com.cpp

lib_ebzz_ebzz_enterprise_a_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
lib_ebzz_ebzz_enterprise_a_SOURCES = \
  community/community.cpp \
  wallet/db.cpp \
  wallet/dbwrap_com.cpp


# server: shared between _ebzz_ebzzd and _ebzz_ebzz-qt
lib_ebzz_ebzz_server_a_CPPFLAGS = $(_ebzz_ebzz_INCLUDES) $(MINIUPNPC_CPPFLAGS)
lib_ebzz_ebzz_server_a_SOURCES = \
  storage/addrman.cpp \
  structs/alert.cpp \
  structs/bloom.cpp \
  chain/chain.cpp \
  chain/checkpoints.cpp \
  core/init.cpp \
  storage/leveldbwrapper.cpp \
  core/main.cpp \
  protocol/_ebzz_ebzztx.cpp \
  protocol/_ebzz_ebzzblock.cpp \
  custom/custom_server.cpp \
  filters/_ebzz_ebzzfilter.cpp \
  protocol/relay.cpp \
  protocol/handshake.cpp \
  chain/merkleblock.cpp \
  miner/miner.cpp \
  net/net.cpp \
  ui/noui.cpp \
  chain/pow.cpp \
  net/rest.cpp \
  utils/utilparse.cpp \
  json/json_spirit_ubjson.cpp \
  rpc/rpcrawdata.cpp \
  rpc/rpcutils.cpp \
  rpc/rpccache.cpp \
  rpc/rpcchunks.cpp \
  rpc/rpcdebug.cpp \
  rpc/rpchelp.cpp \
  rpc/rpcblockchain.cpp \
  rpc/rpcmining.cpp \
  rpc/rpcmisc.cpp \
  rpc/rpcnet.cpp \
  rpc/rpcrawtransaction.cpp \
  rpc/rpcfeeds.cpp \
  rpc/rpcserver.cpp \
  script/sigcache.cpp \
  utils/timedata.cpp \
  storage/txdb.cpp \
  chain/txmempool.cpp \
  $(JSON_H) \
  $(_ebzz_ebzz_CORE_H)


# wallet: shared between _ebzz_ebzzd and _ebzz_ebzz-qt, but only linked
# when wallet enabled
lib_ebzz_ebzz_wallet_a_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
lib_ebzz_ebzz_wallet_a_SOURCES = \
  wallet/dbflat.cpp \
  wallet/crypter.cpp \
  community/license.cpp \
  rpc/rpcdump.cpp \
  rpc/rpcwallet.cpp \
  rpc/rpcwalletutils.cpp \
  rpc/rpcwallettxs.cpp \
  rpc/rpcexchange.cpp \
  rpc/rpcwalletsend.cpp \
  rpc/rpcpermissions.cpp \
  rpc/rpcassets.cpp \
  rpc/rpcstreams.cpp \
  rpc/rpcupgrades.cpp \
  rpc/rpcfilters.cpp \
  rpc/rpcvariables.cpp \
  rpc/rpclibraries.cpp \
  rpc/rpclicense.cpp \
  rpc/rpcexplorer.cpp \
  wallet/wallet.cpp \
  wallet/walletcoins.cpp \
  wallet/wallettxs.cpp \
  wallet/wallet_ismine.cpp \
  wallet/walletdb.cpp \
  $(_ebzz_ebzz_CORE_H)


# crypto primitives library
crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS = $(_ebzz_ebzz_CONFIG_INCLUDES)
crypto_lib_ebzz_ebzz_crypto_a_SOURCES = \
  crypto/sha1.cpp \
  crypto/sha256.cpp \
  crypto/sha512.cpp \
  crypto/hmac_sha256.cpp \
  crypto/hmac_sha512.cpp \
  crypto/ripemd160.cpp \
  crypto/common.h \
  crypto/sha256.h \
  crypto/sha512.h \
  crypto/hmac_sha256.h \
  crypto/hmac_sha512.h \
  crypto/sha1.h \
  crypto/ripemd160.h


# _ebzz_ebzz library
_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS = $(_ebzz_ebzz_CONFIG_INCLUDES)
_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_SOURCES = \
  utils/utility.cpp \
  utils/systemdependent.cpp \
  utils/tools.cpp \
  utils/utilwrapper.cpp \
  version/version.cpp \
  custom/custom.cpp \
  custom/custom__ebzz_ebzz.cpp \
  chainparams/params.cpp \
  protocol/_ebzz_ebzzscript.cpp \
  utils/dbwrapper.cpp \
  wallet/wallettxdb.cpp \
  wallet/chunkdb.cpp \
  wallet/chunkcollector.cpp \
  permissions/permission.cpp \
  entities/asset.cpp


# univalue JSON library
univalue_lib_ebzz_ebzz_univalue_a_SOURCES = \
  univalue/univalue.cpp \
  univalue/univalue_read.cpp \
  univalue/univalue_write.cpp \
  univalue/univalue_escapes.h \
  univalue/univalue.h


# common: shared between _ebzz_ebzzd, and _ebzz_ebzz-qt and non-server tools
lib_ebzz_ebzz_common_a_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
lib_ebzz_ebzz_common_a_SOURCES = \
  utils/allocators.cpp \
  structs/amount.cpp \
  structs/base58.cpp \
  chainparams/chainparams.cpp \
  storage/coins.cpp \
  utils/compressor.cpp \
  primitives/block.cpp \
  primitives/transaction.cpp \
  utils/core_read.cpp \
  utils/core_write.cpp \
  structs/hash.cpp \
  keys/key.cpp \
  wallet/keystore.cpp \
  net/netbase.cpp \
  protocol/netprotocol.cpp \
  keys/pubkey.cpp \
  script/interpreter.cpp \
  script/script.cpp \
  script/sign.cpp \
  script/standard.cpp \
  script/script_error.cpp \
  $(_ebzz_ebzz_CORE_H)


# util: shared between all executables.
# This library *must* be included to make sure that the glibc
# backward-compatibility objects and their sanity checks are linked.
lib_ebzz_ebzz_util_a_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
lib_ebzz_ebzz_util_a_SOURCES = compat/strnlen.cpp compat/glibc_sanity.cpp \
	compat/glibcxx_sanity.cpp chainparams/chainparamsbase.cpp \
	version/clientversion.cpp utils/random.cpp rpc/rpcprotocol.cpp \
	utils/sync.cpp structs/uint256.cpp utils/util.cpp \
	utils/utilstrencodings.cpp utils/utilmoneystr.cpp \
	utils/utiltime.cpp $(_ebzz_ebzz_CORE_H) $(am__append_9)

# cli: shared between _ebzz_ebzz-cli and _ebzz_ebzz-qt
lib_ebzz_ebzz_cli_a_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
lib_ebzz_ebzz_cli_a_SOURCES = \
  rpc/rpcclient.cpp \
  $(_ebzz_ebzz_CORE_H)

nodist_lib_ebzz_ebzz_util_a_SOURCES = $(srcdir)/obj/build.h
#

# _ebzz_ebzzd binary #
#_ebzz_ebzzd_LDADD = \
#  $(LIB_ebzz_ebzz_SERVER) \
#  $(LIB_ebzz_ebzz_COMMON) \
#  $(LIB_ebzz_ebzz_UNIVALUE) \
#  $(LIB_ebzz_ebzz_WALLET) \
#  $(LIB_ebzz_ebzz__ebzz_ebzz) \
#  $(LIB_ebzz_ebzz_UTIL) \
#  $(LIB_ebzz_ebzz_CRYPTO) \
#  $(LIBLEVELDB) \
#  $(LIBMEMENV) \
#  $(LIBSECP256K1)

#if ENABLE_WALLET
#_ebzz_ebzzd_LDADD += lib_ebzz_ebzz_wallet.a
#endif
#_ebzz_ebzzd_LDADD += _ebzz_ebzz/lib_ebzz_ebzz__ebzz_ebzz.a
#_ebzz_ebzzd_SOURCES = _ebzz_ebzzd.cpp chainparams/buildgenesis.cpp
#

#_ebzz_ebzzd_SOURCES += _ebzz_ebzzd-res.rc

#_ebzz_ebzzd_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)
#_ebzz_ebzzd_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
#_ebzz_ebzzd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)

# _ebzz_ebzz-cli binary #
#_ebzz_ebzz_cli_LDADD = \
#  $(LIB_ebzz_ebzz_CLI) \
#  $(LIB_ebzz_ebzz_UTIL) \
#  $(LIB_ebzz_ebzz__ebzz_ebzz) \
#  $(LIB_ebzz_ebzz_CRYPTO) \
#  $(LIBLEVELDB) \
#  $(BOOST_LIBS) \
#  $(SSL_LIBS) \
#  $(CRYPTO_LIBS)

#_ebzz_ebzz_cli_SOURCES = \
#  _ebzz_ebzz-cli.cpp

#_ebzz_ebzz_cli_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
#

# _ebzz_ebzz-tx binary #
#_ebzz_ebzz_tx_LDADD = \
#  $(LIB_ebzz_ebzz_COMMON) \
#  $(LIB_ebzz_ebzz_UNIVALUE) \
#  $(LIB_ebzz_ebzz__ebzz_ebzz) \
#  $(LIB_ebzz_ebzz_UTIL) \
#  $(LIB_ebzz_ebzz_CRYPTO) \
#  $(LIBLEVELDB) \
#  $(LIBSECP256K1) \
#  $(BOOST_LIBS) \
#  $(CRYPTO_LIBS)

#_ebzz_ebzz_tx_SOURCES = _ebzz_ebzz-tx.cpp
#_ebzz_ebzz_tx_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
#
#_ebzz_ebzz_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)

#_ebzz_ebzz_cli_SOURCES += _ebzz_ebzz-cli-res.rc
#_ebzz_ebzz_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)

# MCHN START
V8_ROOT = $(top_builddir)/v8build/v8
V8_INCLUDE = -I$(V8_ROOT)/include
V8_LIB_DIR = $(V8_ROOT)/out.gn/x64.release/obj
V8_LIBS = -L$(V8_LIB_DIR) -L$(V8_LIB_DIR)/third_party/icu \
	$(am__append_10) -lv8_libbase -lv8_libplatform -lv8_base \
	-lv8_external_snapshot -lv8_libsampler -licuuc -licui18n \
	-lv8_data -ldl $(am__append_11)
lib_ebzz_ebzz_v8_a_SOURCES = \
  v8/v8engine.cpp \
  v8/v8filter.cpp \
  v8/callbacks.cpp \
  v8/v8json_spirit.cpp


#if TARGET_WINDOWS
#lib_ebzz_ebzz_v8_a_SOURCES += v8/callbacks_win.cpp v8/v8blob.dpp
#endif
lib_ebzz_ebzz_v8_a_CPPFLAGS = $(_ebzz_ebzz_INCLUDES) $(V8_INCLUDE)

# _ebzz_ebzzd binary #
_ebzz_ebzzd_LDADD = $(LIB_ebzz_ebzz_SERVER) $(LIB_ebzz_ebzz_COMMON) \
	$(LIB_ebzz_ebzz_UNIVALUE) $(LIB_ebzz_ebzz_WALLET) \
	$(LIB_ebzz_ebzz_ENTERPRISE) $(LIB_ebzz_ebzz__ebzz_ebzz) \
	$(LIB_ebzz_ebzz_UTIL) $(LIB_ebzz_ebzz_CRYPTO) $(LIBLEVELDB) \
	$(LIBMEMENV) $(LIBSECP256K1) $(am__append_12) $(am__append_13) \
	$(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) \
	$(MINIUPNPC_LIBS)

#if ENABLE_WALLET
#_ebzz_ebzzd_LDADD += lib_ebzz_ebzz_wallet.a
#endif
_ebzz_ebzzd_SOURCES = _ebzz_ebzz/_ebzz_ebzzd.cpp rpc/rpclist.cpp \
	chainparams/buildgenesis.cpp filters/filtercallback.cpp \
	filters/watchdog.cpp json/json_spirit_writer.cpp \
	$(am__append_14) $(am__append_15)
_ebzz_ebzzd_CPPFLAGS = $(_ebzz_ebzz_INCLUDES) $(V8_INCLUDE)
_ebzz_ebzzd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) \
	$(LIBTOOL_APP_LDFLAGS) -pthread $(am__append_16)

# _ebzz_ebzzd-cold binary #
_ebzz_ebzzd_cold_LDADD = $(LIB_ebzz_ebzz_SERVER) $(LIB_ebzz_ebzz_COMMON) \
	$(LIB_ebzz_ebzz_UNIVALUE) $(LIB_ebzz_ebzz_WALLET) \
	$(LIB_ebzz_ebzz_COMMUNITY) $(LIB_ebzz_ebzz__ebzz_ebzz) \
	$(LIB_ebzz_ebzz_UTIL) $(LIB_ebzz_ebzz_CRYPTO) $(LIBLEVELDB) \
	$(LIBMEMENV) $(LIBSECP256K1) $(BOOST_LIBS) $(BDB_LIBS) \
	$(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)

#if ENABLE_WALLET
#_ebzz_ebzzd_cold_LDADD += lib_ebzz_ebzz_wallet.a
#endif
_ebzz_ebzzd_cold_SOURCES = _ebzz_ebzz/_ebzz_ebzzd-cold.cpp \
	core/init-cold.cpp rpc/rpclist-cold.cpp \
	chainparams/buildgenesis.cpp filters/filter_cold.cpp \
	filters/filtercallback_cold.cpp filters/watchdog.cpp \
	json/json_spirit_writer.cpp $(am__append_17)
_ebzz_ebzzd_cold_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
_ebzz_ebzzd_cold_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -pthread

# _ebzz_ebzz-cli binary #
_ebzz_ebzz_cli_LDADD = \
  $(LIB_ebzz_ebzz_CLI) \
  $(LIB_ebzz_ebzz_UTIL) \
  $(LIB_ebzz_ebzz__ebzz_ebzz) \
  $(LIB_ebzz_ebzz_CRYPTO) \
  $(LIBLEVELDB) \
  $(BOOST_LIBS) \
  $(SSL_LIBS) \
  $(CRYPTO_LIBS)

_ebzz_ebzz_cli_SOURCES = _ebzz_ebzz/_ebzz_ebzz-cli.cpp \
	$(am__append_18)
_ebzz_ebzz_cli_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
_ebzz_ebzz_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)

# _ebzz_ebzz-util binary #
_ebzz_ebzz_util_LDADD = \
  $(LIB_ebzz_ebzz_UNIVALUE) \
  $(LIB_ebzz_ebzz__ebzz_ebzz) \
  $(LIB_ebzz_ebzz_COMMON) \
  $(LIB_ebzz_ebzz_UTIL) \
  $(LIB_ebzz_ebzz_CRYPTO) \
  $(LIBLEVELDB) \
  $(LIBSECP256K1) \
  $(BOOST_LIBS) \
  $(CRYPTO_LIBS)

_ebzz_ebzz_util_SOURCES = _ebzz_ebzz/_ebzz_ebzz-util.cpp \
	chainparams/buildgenesis.cpp $(am__append_19)
_ebzz_ebzz_util_CPPFLAGS = $(_ebzz_ebzz_INCLUDES)
_ebzz_ebzz_util_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)

# MCHN END
include_HEADERS = script/_ebzz_ebzzconsensus.h
lib_ebzz_ebzzconsensus_la_SOURCES =  \
	primitives/transaction.cpp \
	crypto/hmac_sha512.cpp \
	crypto/sha1.cpp crypto/sha256.cpp \
	crypto/sha512.cpp \
	crypto/ripemd160.cpp \
	utils/utility.cpp \
	utils/systemdependent.cpp \
	utils/tools.cpp utils/utilwrapper.cpp \
	chainparams/buildgenesis.cpp \
	version/version.cpp custom/custom.cpp \
	custom/custom__ebzz_ebzz.cpp \
	chainparams/chainparams.cpp \
	protocol/_ebzz_ebzzscript.cpp \
	utils/dbwrapper.cpp \
	wallet/wallettxdb.cpp \
	wallet/chunkdb.cpp \
	wallet/chunkcollector.cpp \
	permissions/permission.cpp \
	entities/asset.cpp structs/hash.cpp \
	keys/pubkey.cpp script/script.cpp \
	script/interpreter.cpp \
	script/_ebzz_ebzzconsensus.cpp \
	structs/uint256.cpp \
	utils/utilstrencodings.cpp \
	$(am__append_20)
lib_ebzz_ebzzconsensus_la_LDFLAGS = -no-undefined $(RELDFLAGS)
lib_ebzz_ebzzconsensus_la_LIBADD = $(LIBSECP256K1)
lib_ebzz_ebzzconsensus_la_CPPFLAGS = -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD__ebzz_ebzz_INTERNAL
CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno
DISTCLEANFILES = obj/build.h
EXTRA_DIST = leveldb
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .log .mm .o .obj .rc .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/entMakefile.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/entMakefile.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
crypto/$(am__dirstamp):
	@$(MKDIR_P) crypto
	@: > crypto/$(am__dirstamp)
crypto/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto/$(DEPDIR)
	@: > crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/lib_ebzz_ebzz_crypto.a: $(crypto_lib_ebzz_ebzz_crypto_a_OBJECTS) $(crypto_lib_ebzz_ebzz_crypto_a_DEPENDENCIES) $(EXTRA_crypto_lib_ebzz_ebzz_crypto_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/lib_ebzz_ebzz_crypto.a
	$(AM_V_AR)$(crypto_lib_ebzz_ebzz_crypto_a_AR) crypto/lib_ebzz_ebzz_crypto.a $(crypto_lib_ebzz_ebzz_crypto_a_OBJECTS) $(crypto_lib_ebzz_ebzz_crypto_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/lib_ebzz_ebzz_crypto.a
rpc/$(am__dirstamp):
	@$(MKDIR_P) rpc
	@: > rpc/$(am__dirstamp)
rpc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) rpc/$(DEPDIR)
	@: > rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_cli_a-rpcclient.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)

lib_ebzz_ebzz_cli.a: $(lib_ebzz_ebzz_cli_a_OBJECTS) $(lib_ebzz_ebzz_cli_a_DEPENDENCIES) $(EXTRA_lib_ebzz_ebzz_cli_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f lib_ebzz_ebzz_cli.a
	$(AM_V_AR)$(lib_ebzz_ebzz_cli_a_AR) lib_ebzz_ebzz_cli.a $(lib_ebzz_ebzz_cli_a_OBJECTS) $(lib_ebzz_ebzz_cli_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib_ebzz_ebzz_cli.a
utils/$(am__dirstamp):
	@$(MKDIR_P) utils
	@: > utils/$(am__dirstamp)
utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) utils/$(DEPDIR)
	@: > utils/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_common_a-allocators.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
structs/$(am__dirstamp):
	@$(MKDIR_P) structs
	@: > structs/$(am__dirstamp)
structs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) structs/$(DEPDIR)
	@: > structs/$(DEPDIR)/$(am__dirstamp)
structs/lib_ebzz_ebzz_common_a-amount.$(OBJEXT): structs/$(am__dirstamp) \
	structs/$(DEPDIR)/$(am__dirstamp)
structs/lib_ebzz_ebzz_common_a-base58.$(OBJEXT): structs/$(am__dirstamp) \
	structs/$(DEPDIR)/$(am__dirstamp)
chainparams/$(am__dirstamp):
	@$(MKDIR_P) chainparams
	@: > chainparams/$(am__dirstamp)
chainparams/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) chainparams/$(DEPDIR)
	@: > chainparams/$(DEPDIR)/$(am__dirstamp)
chainparams/lib_ebzz_ebzz_common_a-chainparams.$(OBJEXT):  \
	chainparams/$(am__dirstamp) \
	chainparams/$(DEPDIR)/$(am__dirstamp)
storage/$(am__dirstamp):
	@$(MKDIR_P) storage
	@: > storage/$(am__dirstamp)
storage/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) storage/$(DEPDIR)
	@: > storage/$(DEPDIR)/$(am__dirstamp)
storage/lib_ebzz_ebzz_common_a-coins.$(OBJEXT): storage/$(am__dirstamp) \
	storage/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_common_a-compressor.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
primitives/$(am__dirstamp):
	@$(MKDIR_P) primitives
	@: > primitives/$(am__dirstamp)
primitives/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) primitives/$(DEPDIR)
	@: > primitives/$(DEPDIR)/$(am__dirstamp)
primitives/lib_ebzz_ebzz_common_a-block.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/lib_ebzz_ebzz_common_a-transaction.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_common_a-core_read.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_common_a-core_write.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
structs/lib_ebzz_ebzz_common_a-hash.$(OBJEXT): structs/$(am__dirstamp) \
	structs/$(DEPDIR)/$(am__dirstamp)
keys/$(am__dirstamp):
	@$(MKDIR_P) keys
	@: > keys/$(am__dirstamp)
keys/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) keys/$(DEPDIR)
	@: > keys/$(DEPDIR)/$(am__dirstamp)
keys/lib_ebzz_ebzz_common_a-key.$(OBJEXT): keys/$(am__dirstamp) \
	keys/$(DEPDIR)/$(am__dirstamp)
wallet/$(am__dirstamp):
	@$(MKDIR_P) wallet
	@: > wallet/$(am__dirstamp)
wallet/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/$(DEPDIR)
	@: > wallet/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_common_a-keystore.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
net/$(am__dirstamp):
	@$(MKDIR_P) net
	@: > net/$(am__dirstamp)
net/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) net/$(DEPDIR)
	@: > net/$(DEPDIR)/$(am__dirstamp)
net/lib_ebzz_ebzz_common_a-netbase.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
protocol/$(am__dirstamp):
	@$(MKDIR_P) protocol
	@: > protocol/$(am__dirstamp)
protocol/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) protocol/$(DEPDIR)
	@: > protocol/$(DEPDIR)/$(am__dirstamp)
protocol/lib_ebzz_ebzz_common_a-netprotocol.$(OBJEXT):  \
	protocol/$(am__dirstamp) protocol/$(DEPDIR)/$(am__dirstamp)
keys/lib_ebzz_ebzz_common_a-pubkey.$(OBJEXT): keys/$(am__dirstamp) \
	keys/$(DEPDIR)/$(am__dirstamp)
script/$(am__dirstamp):
	@$(MKDIR_P) script
	@: > script/$(am__dirstamp)
script/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) script/$(DEPDIR)
	@: > script/$(DEPDIR)/$(am__dirstamp)
script/lib_ebzz_ebzz_common_a-interpreter.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/lib_ebzz_ebzz_common_a-script.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/lib_ebzz_ebzz_common_a-sign.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/lib_ebzz_ebzz_common_a-standard.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/lib_ebzz_ebzz_common_a-script_error.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)

lib_ebzz_ebzz_common.a: $(lib_ebzz_ebzz_common_a_OBJECTS) $(lib_ebzz_ebzz_common_a_DEPENDENCIES) $(EXTRA_lib_ebzz_ebzz_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f lib_ebzz_ebzz_common.a
	$(AM_V_AR)$(lib_ebzz_ebzz_common_a_AR) lib_ebzz_ebzz_common.a $(lib_ebzz_ebzz_common_a_OBJECTS) $(lib_ebzz_ebzz_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib_ebzz_ebzz_common.a
community/$(am__dirstamp):
	@$(MKDIR_P) community
	@: > community/$(am__dirstamp)
community/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) community/$(DEPDIR)
	@: > community/$(DEPDIR)/$(am__dirstamp)
community/lib_ebzz_ebzz_community_a-community.$(OBJEXT):  \
	community/$(am__dirstamp) community/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_community_a-db.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_community_a-dbwrap_com.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)

lib_ebzz_ebzz_community.a: $(lib_ebzz_ebzz_community_a_OBJECTS) $(lib_ebzz_ebzz_community_a_DEPENDENCIES) $(EXTRA_lib_ebzz_ebzz_community_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f lib_ebzz_ebzz_community.a
	$(AM_V_AR)$(lib_ebzz_ebzz_community_a_AR) lib_ebzz_ebzz_community.a $(lib_ebzz_ebzz_community_a_OBJECTS) $(lib_ebzz_ebzz_community_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib_ebzz_ebzz_community.a
community/lib_ebzz_ebzz_enterprise_a-community.$(OBJEXT):  \
	community/$(am__dirstamp) community/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_enterprise_a-db.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)

lib_ebzz_ebzz_enterprise.a: $(lib_ebzz_ebzz_enterprise_a_OBJECTS) $(lib_ebzz_ebzz_enterprise_a_DEPENDENCIES) $(EXTRA_lib_ebzz_ebzz_enterprise_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f lib_ebzz_ebzz_enterprise.a
	$(AM_V_AR)$(lib_ebzz_ebzz_enterprise_a_AR) lib_ebzz_ebzz_enterprise.a $(lib_ebzz_ebzz_enterprise_a_OBJECTS) $(lib_ebzz_ebzz_enterprise_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib_ebzz_ebzz_enterprise.a
storage/lib_ebzz_ebzz_server_a-addrman.$(OBJEXT):  \
	storage/$(am__dirstamp) storage/$(DEPDIR)/$(am__dirstamp)
structs/lib_ebzz_ebzz_server_a-alert.$(OBJEXT): structs/$(am__dirstamp) \
	structs/$(DEPDIR)/$(am__dirstamp)
structs/lib_ebzz_ebzz_server_a-bloom.$(OBJEXT): structs/$(am__dirstamp) \
	structs/$(DEPDIR)/$(am__dirstamp)
chain/$(am__dirstamp):
	@$(MKDIR_P) chain
	@: > chain/$(am__dirstamp)
chain/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) chain/$(DEPDIR)
	@: > chain/$(DEPDIR)/$(am__dirstamp)
chain/lib_ebzz_ebzz_server_a-chain.$(OBJEXT): chain/$(am__dirstamp) \
	chain/$(DEPDIR)/$(am__dirstamp)
chain/lib_ebzz_ebzz_server_a-checkpoints.$(OBJEXT):  \
	chain/$(am__dirstamp) chain/$(DEPDIR)/$(am__dirstamp)
core/$(am__dirstamp):
	@$(MKDIR_P) core
	@: > core/$(am__dirstamp)
core/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) core/$(DEPDIR)
	@: > core/$(DEPDIR)/$(am__dirstamp)
core/lib_ebzz_ebzz_server_a-init.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
storage/lib_ebzz_ebzz_server_a-leveldbwrapper.$(OBJEXT):  \
	storage/$(am__dirstamp) storage/$(DEPDIR)/$(am__dirstamp)
core/lib_ebzz_ebzz_server_a-main.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.$(OBJEXT):  \
	protocol/$(am__dirstamp) protocol/$(DEPDIR)/$(am__dirstamp)
protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.$(OBJEXT):  \
	protocol/$(am__dirstamp) protocol/$(DEPDIR)/$(am__dirstamp)
custom/$(am__dirstamp):
	@$(MKDIR_P) custom
	@: > custom/$(am__dirstamp)
custom/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) custom/$(DEPDIR)
	@: > custom/$(DEPDIR)/$(am__dirstamp)
custom/lib_ebzz_ebzz_server_a-custom_server.$(OBJEXT):  \
	custom/$(am__dirstamp) custom/$(DEPDIR)/$(am__dirstamp)
filters/$(am__dirstamp):
	@$(MKDIR_P) filters
	@: > filters/$(am__dirstamp)
filters/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) filters/$(DEPDIR)
	@: > filters/$(DEPDIR)/$(am__dirstamp)
filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.$(OBJEXT):  \
	filters/$(am__dirstamp) filters/$(DEPDIR)/$(am__dirstamp)
protocol/lib_ebzz_ebzz_server_a-relay.$(OBJEXT):  \
	protocol/$(am__dirstamp) protocol/$(DEPDIR)/$(am__dirstamp)
protocol/lib_ebzz_ebzz_server_a-handshake.$(OBJEXT):  \
	protocol/$(am__dirstamp) protocol/$(DEPDIR)/$(am__dirstamp)
chain/lib_ebzz_ebzz_server_a-merkleblock.$(OBJEXT):  \
	chain/$(am__dirstamp) chain/$(DEPDIR)/$(am__dirstamp)
miner/$(am__dirstamp):
	@$(MKDIR_P) miner
	@: > miner/$(am__dirstamp)
miner/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) miner/$(DEPDIR)
	@: > miner/$(DEPDIR)/$(am__dirstamp)
miner/lib_ebzz_ebzz_server_a-miner.$(OBJEXT): miner/$(am__dirstamp) \
	miner/$(DEPDIR)/$(am__dirstamp)
net/lib_ebzz_ebzz_server_a-net.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
ui/$(am__dirstamp):
	@$(MKDIR_P) ui
	@: > ui/$(am__dirstamp)
ui/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/$(DEPDIR)
	@: > ui/$(DEPDIR)/$(am__dirstamp)
ui/lib_ebzz_ebzz_server_a-noui.$(OBJEXT): ui/$(am__dirstamp) \
	ui/$(DEPDIR)/$(am__dirstamp)
chain/lib_ebzz_ebzz_server_a-pow.$(OBJEXT): chain/$(am__dirstamp) \
	chain/$(DEPDIR)/$(am__dirstamp)
net/lib_ebzz_ebzz_server_a-rest.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_server_a-utilparse.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
json/$(am__dirstamp):
	@$(MKDIR_P) json
	@: > json/$(am__dirstamp)
json/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) json/$(DEPDIR)
	@: > json/$(DEPDIR)/$(am__dirstamp)
json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.$(OBJEXT):  \
	json/$(am__dirstamp) json/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcrawdata.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcutils.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpccache.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcchunks.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcdebug.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpchelp.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcblockchain.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcmining.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcmisc.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcnet.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.$(OBJEXT):  \
	rpc/$(am__dirstamp) rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcfeeds.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_server_a-rpcserver.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
script/lib_ebzz_ebzz_server_a-sigcache.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_server_a-timedata.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
storage/lib_ebzz_ebzz_server_a-txdb.$(OBJEXT): storage/$(am__dirstamp) \
	storage/$(DEPDIR)/$(am__dirstamp)
chain/lib_ebzz_ebzz_server_a-txmempool.$(OBJEXT): chain/$(am__dirstamp) \
	chain/$(DEPDIR)/$(am__dirstamp)

lib_ebzz_ebzz_server.a: $(lib_ebzz_ebzz_server_a_OBJECTS) $(lib_ebzz_ebzz_server_a_DEPENDENCIES) $(EXTRA_lib_ebzz_ebzz_server_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f lib_ebzz_ebzz_server.a
	$(AM_V_AR)$(lib_ebzz_ebzz_server_a_AR) lib_ebzz_ebzz_server.a $(lib_ebzz_ebzz_server_a_OBJECTS) $(lib_ebzz_ebzz_server_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib_ebzz_ebzz_server.a
compat/$(am__dirstamp):
	@$(MKDIR_P) compat
	@: > compat/$(am__dirstamp)
compat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) compat/$(DEPDIR)
	@: > compat/$(DEPDIR)/$(am__dirstamp)
compat/lib_ebzz_ebzz_util_a-strnlen.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/lib_ebzz_ebzz_util_a-glibc_sanity.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.$(OBJEXT):  \
	chainparams/$(am__dirstamp) \
	chainparams/$(DEPDIR)/$(am__dirstamp)
version/$(am__dirstamp):
	@$(MKDIR_P) version
	@: > version/$(am__dirstamp)
version/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) version/$(DEPDIR)
	@: > version/$(DEPDIR)/$(am__dirstamp)
version/lib_ebzz_ebzz_util_a-clientversion.$(OBJEXT):  \
	version/$(am__dirstamp) version/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_util_a-random.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_util_a-rpcprotocol.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_util_a-sync.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
structs/lib_ebzz_ebzz_util_a-uint256.$(OBJEXT): structs/$(am__dirstamp) \
	structs/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_util_a-util.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_util_a-utilstrencodings.$(OBJEXT):  \
	utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_util_a-utilmoneystr.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzz_util_a-utiltime.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
compat/lib_ebzz_ebzz_util_a-glibc_compat.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/lib_ebzz_ebzz_util_a-glibcxx_compat.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)

lib_ebzz_ebzz_util.a: $(lib_ebzz_ebzz_util_a_OBJECTS) $(lib_ebzz_ebzz_util_a_DEPENDENCIES) $(EXTRA_lib_ebzz_ebzz_util_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f lib_ebzz_ebzz_util.a
	$(AM_V_AR)$(lib_ebzz_ebzz_util_a_AR) lib_ebzz_ebzz_util.a $(lib_ebzz_ebzz_util_a_OBJECTS) $(lib_ebzz_ebzz_util_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib_ebzz_ebzz_util.a
v8/$(am__dirstamp):
	@$(MKDIR_P) v8
	@: > v8/$(am__dirstamp)
v8/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) v8/$(DEPDIR)
	@: > v8/$(DEPDIR)/$(am__dirstamp)
v8/lib_ebzz_ebzz_v8_a-v8engine.$(OBJEXT): v8/$(am__dirstamp) \
	v8/$(DEPDIR)/$(am__dirstamp)
v8/lib_ebzz_ebzz_v8_a-v8filter.$(OBJEXT): v8/$(am__dirstamp) \
	v8/$(DEPDIR)/$(am__dirstamp)
v8/lib_ebzz_ebzz_v8_a-callbacks.$(OBJEXT): v8/$(am__dirstamp) \
	v8/$(DEPDIR)/$(am__dirstamp)
v8/lib_ebzz_ebzz_v8_a-v8json_spirit.$(OBJEXT): v8/$(am__dirstamp) \
	v8/$(DEPDIR)/$(am__dirstamp)

lib_ebzz_ebzz_v8.a: $(lib_ebzz_ebzz_v8_a_OBJECTS) $(lib_ebzz_ebzz_v8_a_DEPENDENCIES) $(EXTRA_lib_ebzz_ebzz_v8_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f lib_ebzz_ebzz_v8.a
	$(AM_V_AR)$(lib_ebzz_ebzz_v8_a_AR) lib_ebzz_ebzz_v8.a $(lib_ebzz_ebzz_v8_a_OBJECTS) $(lib_ebzz_ebzz_v8_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib_ebzz_ebzz_v8.a
wallet/lib_ebzz_ebzz_wallet_a-dbflat.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_wallet_a-crypter.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
community/lib_ebzz_ebzz_wallet_a-license.$(OBJEXT):  \
	community/$(am__dirstamp) community/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcdump.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcassets.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpclicense.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_wallet_a-wallet.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_wallet_a-walletcoins.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_wallet_a-wallettxs.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzz_wallet_a-walletdb.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)

lib_ebzz_ebzz_wallet.a: $(lib_ebzz_ebzz_wallet_a_OBJECTS) $(lib_ebzz_ebzz_wallet_a_DEPENDENCIES) $(EXTRA_lib_ebzz_ebzz_wallet_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f lib_ebzz_ebzz_wallet.a
	$(AM_V_AR)$(lib_ebzz_ebzz_wallet_a_AR) lib_ebzz_ebzz_wallet.a $(lib_ebzz_ebzz_wallet_a_OBJECTS) $(lib_ebzz_ebzz_wallet_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib_ebzz_ebzz_wallet.a
utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.$(OBJEXT):  \
	utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.$(OBJEXT):  \
	utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.$(OBJEXT):  \
	utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.$(OBJEXT):  \
	utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.$(OBJEXT):  \
	version/$(am__dirstamp) version/$(DEPDIR)/$(am__dirstamp)
custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.$(OBJEXT):  \
	custom/$(am__dirstamp) custom/$(DEPDIR)/$(am__dirstamp)
custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.$(OBJEXT):  \
	custom/$(am__dirstamp) custom/$(DEPDIR)/$(am__dirstamp)
chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.$(OBJEXT):  \
	chainparams/$(am__dirstamp) \
	chainparams/$(DEPDIR)/$(am__dirstamp)
protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.$(OBJEXT):  \
	protocol/$(am__dirstamp) protocol/$(DEPDIR)/$(am__dirstamp)
utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.$(OBJEXT):  \
	utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
permissions/$(am__dirstamp):
	@$(MKDIR_P) permissions
	@: > permissions/$(am__dirstamp)
permissions/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) permissions/$(DEPDIR)
	@: > permissions/$(DEPDIR)/$(am__dirstamp)
permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.$(OBJEXT):  \
	permissions/$(am__dirstamp) \
	permissions/$(DEPDIR)/$(am__dirstamp)
entities/$(am__dirstamp):
	@$(MKDIR_P) entities
	@: > entities/$(am__dirstamp)
entities/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) entities/$(DEPDIR)
	@: > entities/$(DEPDIR)/$(am__dirstamp)
entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.$(OBJEXT):  \
	entities/$(am__dirstamp) entities/$(DEPDIR)/$(am__dirstamp)
_ebzz_ebzz/$(am__dirstamp):
	@$(MKDIR_P) _ebzz_ebzz
	@: > _ebzz_ebzz/$(am__dirstamp)

_ebzz_ebzz/lib_ebzz_ebzz__ebzz_ebzz.a: $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_OBJECTS) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_DEPENDENCIES) $(EXTRA__ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_DEPENDENCIES) _ebzz_ebzz/$(am__dirstamp)
	$(AM_V_at)-rm -f _ebzz_ebzz/lib_ebzz_ebzz__ebzz_ebzz.a
	$(AM_V_AR)$(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_AR) _ebzz_ebzz/lib_ebzz_ebzz__ebzz_ebzz.a $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_OBJECTS) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_LIBADD)
	$(AM_V_at)$(RANLIB) _ebzz_ebzz/lib_ebzz_ebzz__ebzz_ebzz.a
univalue/$(am__dirstamp):
	@$(MKDIR_P) univalue
	@: > univalue/$(am__dirstamp)
univalue/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) univalue/$(DEPDIR)
	@: > univalue/$(DEPDIR)/$(am__dirstamp)
univalue/univalue.$(OBJEXT): univalue/$(am__dirstamp) \
	univalue/$(DEPDIR)/$(am__dirstamp)
univalue/univalue_read.$(OBJEXT): univalue/$(am__dirstamp) \
	univalue/$(DEPDIR)/$(am__dirstamp)
univalue/univalue_write.$(OBJEXT): univalue/$(am__dirstamp) \
	univalue/$(DEPDIR)/$(am__dirstamp)

univalue/lib_ebzz_ebzz_univalue.a: $(univalue_lib_ebzz_ebzz_univalue_a_OBJECTS) $(univalue_lib_ebzz_ebzz_univalue_a_DEPENDENCIES) $(EXTRA_univalue_lib_ebzz_ebzz_univalue_a_DEPENDENCIES) univalue/$(am__dirstamp)
	$(AM_V_at)-rm -f univalue/lib_ebzz_ebzz_univalue.a
	$(AM_V_AR)$(univalue_lib_ebzz_ebzz_univalue_a_AR) univalue/lib_ebzz_ebzz_univalue.a $(univalue_lib_ebzz_ebzz_univalue_a_OBJECTS) $(univalue_lib_ebzz_ebzz_univalue_a_LIBADD)
	$(AM_V_at)$(RANLIB) univalue/lib_ebzz_ebzz_univalue.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
primitives/lib_ebzz_ebzzconsensus_la-transaction.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
crypto/lib_ebzz_ebzzconsensus_la-hmac_sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/lib_ebzz_ebzzconsensus_la-sha1.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/lib_ebzz_ebzzconsensus_la-sha256.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/lib_ebzz_ebzzconsensus_la-sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/lib_ebzz_ebzzconsensus_la-ripemd160.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzzconsensus_la-utility.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzzconsensus_la-systemdependent.lo:  \
	utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzzconsensus_la-tools.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzzconsensus_la-utilwrapper.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
chainparams/lib_ebzz_ebzzconsensus_la-buildgenesis.lo:  \
	chainparams/$(am__dirstamp) \
	chainparams/$(DEPDIR)/$(am__dirstamp)
version/lib_ebzz_ebzzconsensus_la-version.lo: version/$(am__dirstamp) \
	version/$(DEPDIR)/$(am__dirstamp)
custom/lib_ebzz_ebzzconsensus_la-custom.lo: custom/$(am__dirstamp) \
	custom/$(DEPDIR)/$(am__dirstamp)
custom/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.lo:  \
	custom/$(am__dirstamp) custom/$(DEPDIR)/$(am__dirstamp)
chainparams/lib_ebzz_ebzzconsensus_la-chainparams.lo:  \
	chainparams/$(am__dirstamp) \
	chainparams/$(DEPDIR)/$(am__dirstamp)
protocol/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.lo:  \
	protocol/$(am__dirstamp) protocol/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzzconsensus_la-dbwrapper.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzzconsensus_la-wallettxdb.lo: wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzzconsensus_la-chunkdb.lo: wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/lib_ebzz_ebzzconsensus_la-chunkcollector.lo:  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
permissions/lib_ebzz_ebzzconsensus_la-permission.lo:  \
	permissions/$(am__dirstamp) \
	permissions/$(DEPDIR)/$(am__dirstamp)
entities/lib_ebzz_ebzzconsensus_la-asset.lo: entities/$(am__dirstamp) \
	entities/$(DEPDIR)/$(am__dirstamp)
structs/lib_ebzz_ebzzconsensus_la-hash.lo: structs/$(am__dirstamp) \
	structs/$(DEPDIR)/$(am__dirstamp)
keys/lib_ebzz_ebzzconsensus_la-pubkey.lo: keys/$(am__dirstamp) \
	keys/$(DEPDIR)/$(am__dirstamp)
script/lib_ebzz_ebzzconsensus_la-script.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/lib_ebzz_ebzzconsensus_la-interpreter.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.lo:  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
structs/lib_ebzz_ebzzconsensus_la-uint256.lo: structs/$(am__dirstamp) \
	structs/$(DEPDIR)/$(am__dirstamp)
utils/lib_ebzz_ebzzconsensus_la-utilstrencodings.lo:  \
	utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
compat/lib_ebzz_ebzzconsensus_la-glibc_compat.lo: compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/lib_ebzz_ebzzconsensus_la-glibcxx_compat.lo:  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)

lib_ebzz_ebzzconsensus.la: $(lib_ebzz_ebzzconsensus_la_OBJECTS) $(lib_ebzz_ebzzconsensus_la_DEPENDENCIES) $(EXTRA_lib_ebzz_ebzzconsensus_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(lib_ebzz_ebzzconsensus_la_LINK) $(am_lib_ebzz_ebzzconsensus_la_rpath) $(lib_ebzz_ebzzconsensus_la_OBJECTS) $(lib_ebzz_ebzzconsensus_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
_ebzz_ebzz/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) _ebzz_ebzz/$(DEPDIR)
	@: > _ebzz_ebzz/$(DEPDIR)/$(am__dirstamp)
_ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.$(OBJEXT):  \
	_ebzz_ebzz/$(am__dirstamp) \
	_ebzz_ebzz/$(DEPDIR)/$(am__dirstamp)

_ebzz_ebzz-cli$(EXEEXT): $(_ebzz_ebzz_cli_OBJECTS) $(_ebzz_ebzz_cli_DEPENDENCIES) $(EXTRA__ebzz_ebzz_cli_DEPENDENCIES) 
	@rm -f _ebzz_ebzz-cli$(EXEEXT)
	$(AM_V_CXXLD)$(_ebzz_ebzz_cli_LINK) $(_ebzz_ebzz_cli_OBJECTS) $(_ebzz_ebzz_cli_LDADD) $(LIBS)
_ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.$(OBJEXT):  \
	_ebzz_ebzz/$(am__dirstamp) \
	_ebzz_ebzz/$(DEPDIR)/$(am__dirstamp)
chainparams/_ebzz_ebzz_util-buildgenesis.$(OBJEXT):  \
	chainparams/$(am__dirstamp) \
	chainparams/$(DEPDIR)/$(am__dirstamp)

_ebzz_ebzz-util$(EXEEXT): $(_ebzz_ebzz_util_OBJECTS) $(_ebzz_ebzz_util_DEPENDENCIES) $(EXTRA__ebzz_ebzz_util_DEPENDENCIES) 
	@rm -f _ebzz_ebzz-util$(EXEEXT)
	$(AM_V_CXXLD)$(_ebzz_ebzz_util_LINK) $(_ebzz_ebzz_util_OBJECTS) $(_ebzz_ebzz_util_LDADD) $(LIBS)
_ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.$(OBJEXT):  \
	_ebzz_ebzz/$(am__dirstamp) \
	_ebzz_ebzz/$(DEPDIR)/$(am__dirstamp)
rpc/_ebzz_ebzzd-rpclist.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
chainparams/_ebzz_ebzzd-buildgenesis.$(OBJEXT):  \
	chainparams/$(am__dirstamp) \
	chainparams/$(DEPDIR)/$(am__dirstamp)
filters/_ebzz_ebzzd-filtercallback.$(OBJEXT): filters/$(am__dirstamp) \
	filters/$(DEPDIR)/$(am__dirstamp)
filters/_ebzz_ebzzd-watchdog.$(OBJEXT): filters/$(am__dirstamp) \
	filters/$(DEPDIR)/$(am__dirstamp)
json/_ebzz_ebzzd-json_spirit_writer.$(OBJEXT): json/$(am__dirstamp) \
	json/$(DEPDIR)/$(am__dirstamp)
filters/_ebzz_ebzzd-filter_win.$(OBJEXT): filters/$(am__dirstamp) \
	filters/$(DEPDIR)/$(am__dirstamp)
filters/_ebzz_ebzzd-filter.$(OBJEXT): filters/$(am__dirstamp) \
	filters/$(DEPDIR)/$(am__dirstamp)

_ebzz_ebzzd$(EXEEXT): $(_ebzz_ebzzd_OBJECTS) $(_ebzz_ebzzd_DEPENDENCIES) $(EXTRA__ebzz_ebzzd_DEPENDENCIES) 
	@rm -f _ebzz_ebzzd$(EXEEXT)
	$(AM_V_CXXLD)$(_ebzz_ebzzd_LINK) $(_ebzz_ebzzd_OBJECTS) $(_ebzz_ebzzd_LDADD) $(LIBS)
_ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.$(OBJEXT):  \
	_ebzz_ebzz/$(am__dirstamp) \
	_ebzz_ebzz/$(DEPDIR)/$(am__dirstamp)
core/_ebzz_ebzzd_cold-init-cold.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
rpc/_ebzz_ebzzd_cold-rpclist-cold.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
chainparams/_ebzz_ebzzd_cold-buildgenesis.$(OBJEXT):  \
	chainparams/$(am__dirstamp) \
	chainparams/$(DEPDIR)/$(am__dirstamp)
filters/_ebzz_ebzzd_cold-filter_cold.$(OBJEXT):  \
	filters/$(am__dirstamp) filters/$(DEPDIR)/$(am__dirstamp)
filters/_ebzz_ebzzd_cold-filtercallback_cold.$(OBJEXT):  \
	filters/$(am__dirstamp) filters/$(DEPDIR)/$(am__dirstamp)
filters/_ebzz_ebzzd_cold-watchdog.$(OBJEXT): filters/$(am__dirstamp) \
	filters/$(DEPDIR)/$(am__dirstamp)
json/_ebzz_ebzzd_cold-json_spirit_writer.$(OBJEXT):  \
	json/$(am__dirstamp) json/$(DEPDIR)/$(am__dirstamp)

_ebzz_ebzzd-cold$(EXEEXT): $(_ebzz_ebzzd_cold_OBJECTS) $(_ebzz_ebzzd_cold_DEPENDENCIES) $(EXTRA__ebzz_ebzzd_cold_DEPENDENCIES) 
	@rm -f _ebzz_ebzzd-cold$(EXEEXT)
	$(AM_V_CXXLD)$(_ebzz_ebzzd_cold_LINK) $(_ebzz_ebzzd_cold_OBJECTS) $(_ebzz_ebzzd_cold_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f chain/*.$(OBJEXT)
	-rm -f chainparams/*.$(OBJEXT)
	-rm -f chainparams/*.lo
	-rm -f community/*.$(OBJEXT)
	-rm -f compat/*.$(OBJEXT)
	-rm -f compat/*.lo
	-rm -f core/*.$(OBJEXT)
	-rm -f crypto/*.$(OBJEXT)
	-rm -f crypto/*.lo
	-rm -f custom/*.$(OBJEXT)
	-rm -f custom/*.lo
	-rm -f entities/*.$(OBJEXT)
	-rm -f entities/*.lo
	-rm -f filters/*.$(OBJEXT)
	-rm -f json/*.$(OBJEXT)
	-rm -f keys/*.$(OBJEXT)
	-rm -f keys/*.lo
	-rm -f miner/*.$(OBJEXT)
	-rm -f _ebzz_ebzz/*.$(OBJEXT)
	-rm -f net/*.$(OBJEXT)
	-rm -f permissions/*.$(OBJEXT)
	-rm -f permissions/*.lo
	-rm -f primitives/*.$(OBJEXT)
	-rm -f primitives/*.lo
	-rm -f protocol/*.$(OBJEXT)
	-rm -f protocol/*.lo
	-rm -f rpc/*.$(OBJEXT)
	-rm -f script/*.$(OBJEXT)
	-rm -f script/*.lo
	-rm -f storage/*.$(OBJEXT)
	-rm -f structs/*.$(OBJEXT)
	-rm -f structs/*.lo
	-rm -f ui/*.$(OBJEXT)
	-rm -f univalue/*.$(OBJEXT)
	-rm -f utils/*.$(OBJEXT)
	-rm -f utils/*.lo
	-rm -f v8/*.$(OBJEXT)
	-rm -f version/*.$(OBJEXT)
	-rm -f version/*.lo
	-rm -f wallet/*.$(OBJEXT)
	-rm -f wallet/*.lo

distclean-compile:
	-rm -f *.tab.c

include chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-chain.Po
include chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-checkpoints.Po
include chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-merkleblock.Po
include chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-pow.Po
include chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-txmempool.Po
include chainparams/$(DEPDIR)/lib_ebzz_ebzz_common_a-chainparams.Po
include chainparams/$(DEPDIR)/lib_ebzz_ebzz_util_a-chainparamsbase.Po
include chainparams/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-buildgenesis.Plo
include chainparams/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chainparams.Plo
include chainparams/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.Po
include chainparams/$(DEPDIR)/_ebzz_ebzz_util-buildgenesis.Po
include chainparams/$(DEPDIR)/_ebzz_ebzzd-buildgenesis.Po
include chainparams/$(DEPDIR)/_ebzz_ebzzd_cold-buildgenesis.Po
include community/$(DEPDIR)/lib_ebzz_ebzz_community_a-community.Po
include community/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-community.Po
include community/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-license.Po
include compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_compat.Po
include compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_sanity.Po
include compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_compat.Po
include compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_sanity.Po
include compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-strnlen.Po
include compat/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-glibc_compat.Plo
include compat/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-glibcxx_compat.Plo
include core/$(DEPDIR)/lib_ebzz_ebzz_server_a-init.Po
include core/$(DEPDIR)/lib_ebzz_ebzz_server_a-main.Po
include core/$(DEPDIR)/_ebzz_ebzzd_cold-init-cold.Po
include crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.Po
include crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.Po
include crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.Po
include crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha1.Po
include crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha256.Po
include crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha512.Po
include crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-hmac_sha512.Plo
include crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-ripemd160.Plo
include crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha1.Plo
include crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha256.Plo
include crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha512.Plo
include custom/$(DEPDIR)/lib_ebzz_ebzz_server_a-custom_server.Po
include custom/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-custom.Plo
include custom/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.Plo
include custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.Po
include custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.Po
include entities/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-asset.Plo
include entities/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.Po
include filters/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.Po
include filters/$(DEPDIR)/_ebzz_ebzzd-filter.Po
include filters/$(DEPDIR)/_ebzz_ebzzd-filter_win.Po
include filters/$(DEPDIR)/_ebzz_ebzzd-filtercallback.Po
include filters/$(DEPDIR)/_ebzz_ebzzd-watchdog.Po
include filters/$(DEPDIR)/_ebzz_ebzzd_cold-filter_cold.Po
include filters/$(DEPDIR)/_ebzz_ebzzd_cold-filtercallback_cold.Po
include filters/$(DEPDIR)/_ebzz_ebzzd_cold-watchdog.Po
include json/$(DEPDIR)/lib_ebzz_ebzz_server_a-json_spirit_ubjson.Po
include json/$(DEPDIR)/_ebzz_ebzzd-json_spirit_writer.Po
include json/$(DEPDIR)/_ebzz_ebzzd_cold-json_spirit_writer.Po
include keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-key.Po
include keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-pubkey.Po
include keys/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-pubkey.Plo
include miner/$(DEPDIR)/lib_ebzz_ebzz_server_a-miner.Po
include _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_cli-_ebzz_ebzz-cli.Po
include _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_util-_ebzz_ebzz-util.Po
include _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd-_ebzz_ebzzd.Po
include _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.Po
include net/$(DEPDIR)/lib_ebzz_ebzz_common_a-netbase.Po
include net/$(DEPDIR)/lib_ebzz_ebzz_server_a-net.Po
include net/$(DEPDIR)/lib_ebzz_ebzz_server_a-rest.Po
include permissions/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-permission.Plo
include permissions/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.Po
include primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-block.Po
include primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-transaction.Po
include primitives/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-transaction.Plo
include protocol/$(DEPDIR)/lib_ebzz_ebzz_common_a-netprotocol.Po
include protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-handshake.Po
include protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.Po
include protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.Po
include protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-relay.Po
include protocol/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.Plo
include protocol/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_cli_a-rpcclient.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcblockchain.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpccache.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcchunks.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcdebug.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcfeeds.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpchelp.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmining.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmisc.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcnet.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawdata.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawtransaction.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcserver.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcutils.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_util_a-rpcprotocol.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcassets.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcdump.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexchange.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexplorer.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcfilters.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclibraries.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclicense.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcpermissions.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcstreams.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcupgrades.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcvariables.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallet.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletsend.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallettxs.Po
include rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletutils.Po
include rpc/$(DEPDIR)/_ebzz_ebzzd-rpclist.Po
include rpc/$(DEPDIR)/_ebzz_ebzzd_cold-rpclist-cold.Po
include script/$(DEPDIR)/lib_ebzz_ebzz_common_a-interpreter.Po
include script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script.Po
include script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script_error.Po
include script/$(DEPDIR)/lib_ebzz_ebzz_common_a-sign.Po
include script/$(DEPDIR)/lib_ebzz_ebzz_common_a-standard.Po
include script/$(DEPDIR)/lib_ebzz_ebzz_server_a-sigcache.Po
include script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.Plo
include script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-interpreter.Plo
include script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-script.Plo
include storage/$(DEPDIR)/lib_ebzz_ebzz_common_a-coins.Po
include storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-addrman.Po
include storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-leveldbwrapper.Po
include storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-txdb.Po
include structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-amount.Po
include structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-base58.Po
include structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-hash.Po
include structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-alert.Po
include structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-bloom.Po
include structs/$(DEPDIR)/lib_ebzz_ebzz_util_a-uint256.Po
include structs/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-hash.Plo
include structs/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-uint256.Plo
include ui/$(DEPDIR)/lib_ebzz_ebzz_server_a-noui.Po
include univalue/$(DEPDIR)/univalue.Po
include univalue/$(DEPDIR)/univalue_read.Po
include univalue/$(DEPDIR)/univalue_write.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-allocators.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-compressor.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_read.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_write.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-timedata.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-utilparse.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-random.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-sync.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-util.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilmoneystr.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilstrencodings.Po
include utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utiltime.Po
include utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-dbwrapper.Plo
include utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-systemdependent.Plo
include utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-tools.Plo
include utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utility.Plo
include utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utilstrencodings.Plo
include utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utilwrapper.Plo
include utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.Po
include utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.Po
include utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.Po
include utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.Po
include utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.Po
include v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-callbacks.Po
include v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8engine.Po
include v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8filter.Po
include v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8json_spirit.Po
include version/$(DEPDIR)/lib_ebzz_ebzz_util_a-clientversion.Po
include version/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-version.Plo
include version/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_common_a-keystore.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-db.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-dbwrap_com.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-db.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-dbwrap_com.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-crypter.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-dbflat.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet_ismine.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletcoins.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletdb.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallettxs.Po
include wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chunkcollector.Plo
include wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chunkdb.Plo
include wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-wallettxdb.Plo
include wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.Po
include wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.Po
include wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.Po

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.o: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.o -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha1.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha1.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.obj: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha1.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha1.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`

crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.o: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.o -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha256.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha256.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.obj: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha256.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha256.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`

crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.o: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.o -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha512.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha512.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.obj: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha512.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha512.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`

crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.o: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.o -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.Po
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.obj: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.Po
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`

crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.o: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.o -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.obj: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`

crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.o: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.o -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.obj: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.Tpo -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.Tpo crypto/$(DEPDIR)/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_lib_ebzz_ebzz_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_lib_ebzz_ebzz_crypto_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`

rpc/lib_ebzz_ebzz_cli_a-rpcclient.o: rpc/rpcclient.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_cli_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_cli_a-rpcclient.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_cli_a-rpcclient.Tpo -c -o rpc/lib_ebzz_ebzz_cli_a-rpcclient.o `test -f 'rpc/rpcclient.cpp' || echo '$(srcdir)/'`rpc/rpcclient.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_cli_a-rpcclient.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_cli_a-rpcclient.Po
#	$(AM_V_CXX)source='rpc/rpcclient.cpp' object='rpc/lib_ebzz_ebzz_cli_a-rpcclient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_cli_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_cli_a-rpcclient.o `test -f 'rpc/rpcclient.cpp' || echo '$(srcdir)/'`rpc/rpcclient.cpp

rpc/lib_ebzz_ebzz_cli_a-rpcclient.obj: rpc/rpcclient.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_cli_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_cli_a-rpcclient.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_cli_a-rpcclient.Tpo -c -o rpc/lib_ebzz_ebzz_cli_a-rpcclient.obj `if test -f 'rpc/rpcclient.cpp'; then $(CYGPATH_W) 'rpc/rpcclient.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcclient.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_cli_a-rpcclient.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_cli_a-rpcclient.Po
#	$(AM_V_CXX)source='rpc/rpcclient.cpp' object='rpc/lib_ebzz_ebzz_cli_a-rpcclient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_cli_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_cli_a-rpcclient.obj `if test -f 'rpc/rpcclient.cpp'; then $(CYGPATH_W) 'rpc/rpcclient.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcclient.cpp'; fi`

utils/lib_ebzz_ebzz_common_a-allocators.o: utils/allocators.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_common_a-allocators.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-allocators.Tpo -c -o utils/lib_ebzz_ebzz_common_a-allocators.o `test -f 'utils/allocators.cpp' || echo '$(srcdir)/'`utils/allocators.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-allocators.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-allocators.Po
#	$(AM_V_CXX)source='utils/allocators.cpp' object='utils/lib_ebzz_ebzz_common_a-allocators.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_common_a-allocators.o `test -f 'utils/allocators.cpp' || echo '$(srcdir)/'`utils/allocators.cpp

utils/lib_ebzz_ebzz_common_a-allocators.obj: utils/allocators.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_common_a-allocators.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-allocators.Tpo -c -o utils/lib_ebzz_ebzz_common_a-allocators.obj `if test -f 'utils/allocators.cpp'; then $(CYGPATH_W) 'utils/allocators.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/allocators.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-allocators.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-allocators.Po
#	$(AM_V_CXX)source='utils/allocators.cpp' object='utils/lib_ebzz_ebzz_common_a-allocators.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_common_a-allocators.obj `if test -f 'utils/allocators.cpp'; then $(CYGPATH_W) 'utils/allocators.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/allocators.cpp'; fi`

structs/lib_ebzz_ebzz_common_a-amount.o: structs/amount.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_common_a-amount.o -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-amount.Tpo -c -o structs/lib_ebzz_ebzz_common_a-amount.o `test -f 'structs/amount.cpp' || echo '$(srcdir)/'`structs/amount.cpp
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-amount.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-amount.Po
#	$(AM_V_CXX)source='structs/amount.cpp' object='structs/lib_ebzz_ebzz_common_a-amount.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_common_a-amount.o `test -f 'structs/amount.cpp' || echo '$(srcdir)/'`structs/amount.cpp

structs/lib_ebzz_ebzz_common_a-amount.obj: structs/amount.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_common_a-amount.obj -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-amount.Tpo -c -o structs/lib_ebzz_ebzz_common_a-amount.obj `if test -f 'structs/amount.cpp'; then $(CYGPATH_W) 'structs/amount.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/amount.cpp'; fi`
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-amount.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-amount.Po
#	$(AM_V_CXX)source='structs/amount.cpp' object='structs/lib_ebzz_ebzz_common_a-amount.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_common_a-amount.obj `if test -f 'structs/amount.cpp'; then $(CYGPATH_W) 'structs/amount.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/amount.cpp'; fi`

structs/lib_ebzz_ebzz_common_a-base58.o: structs/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_common_a-base58.o -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-base58.Tpo -c -o structs/lib_ebzz_ebzz_common_a-base58.o `test -f 'structs/base58.cpp' || echo '$(srcdir)/'`structs/base58.cpp
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-base58.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-base58.Po
#	$(AM_V_CXX)source='structs/base58.cpp' object='structs/lib_ebzz_ebzz_common_a-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_common_a-base58.o `test -f 'structs/base58.cpp' || echo '$(srcdir)/'`structs/base58.cpp

structs/lib_ebzz_ebzz_common_a-base58.obj: structs/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_common_a-base58.obj -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-base58.Tpo -c -o structs/lib_ebzz_ebzz_common_a-base58.obj `if test -f 'structs/base58.cpp'; then $(CYGPATH_W) 'structs/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-base58.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-base58.Po
#	$(AM_V_CXX)source='structs/base58.cpp' object='structs/lib_ebzz_ebzz_common_a-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_common_a-base58.obj `if test -f 'structs/base58.cpp'; then $(CYGPATH_W) 'structs/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/base58.cpp'; fi`

chainparams/lib_ebzz_ebzz_common_a-chainparams.o: chainparams/chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/lib_ebzz_ebzz_common_a-chainparams.o -MD -MP -MF chainparams/$(DEPDIR)/lib_ebzz_ebzz_common_a-chainparams.Tpo -c -o chainparams/lib_ebzz_ebzz_common_a-chainparams.o `test -f 'chainparams/chainparams.cpp' || echo '$(srcdir)/'`chainparams/chainparams.cpp
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/lib_ebzz_ebzz_common_a-chainparams.Tpo chainparams/$(DEPDIR)/lib_ebzz_ebzz_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams/chainparams.cpp' object='chainparams/lib_ebzz_ebzz_common_a-chainparams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/lib_ebzz_ebzz_common_a-chainparams.o `test -f 'chainparams/chainparams.cpp' || echo '$(srcdir)/'`chainparams/chainparams.cpp

chainparams/lib_ebzz_ebzz_common_a-chainparams.obj: chainparams/chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/lib_ebzz_ebzz_common_a-chainparams.obj -MD -MP -MF chainparams/$(DEPDIR)/lib_ebzz_ebzz_common_a-chainparams.Tpo -c -o chainparams/lib_ebzz_ebzz_common_a-chainparams.obj `if test -f 'chainparams/chainparams.cpp'; then $(CYGPATH_W) 'chainparams/chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/chainparams.cpp'; fi`
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/lib_ebzz_ebzz_common_a-chainparams.Tpo chainparams/$(DEPDIR)/lib_ebzz_ebzz_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams/chainparams.cpp' object='chainparams/lib_ebzz_ebzz_common_a-chainparams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/lib_ebzz_ebzz_common_a-chainparams.obj `if test -f 'chainparams/chainparams.cpp'; then $(CYGPATH_W) 'chainparams/chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/chainparams.cpp'; fi`

storage/lib_ebzz_ebzz_common_a-coins.o: storage/coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT storage/lib_ebzz_ebzz_common_a-coins.o -MD -MP -MF storage/$(DEPDIR)/lib_ebzz_ebzz_common_a-coins.Tpo -c -o storage/lib_ebzz_ebzz_common_a-coins.o `test -f 'storage/coins.cpp' || echo '$(srcdir)/'`storage/coins.cpp
	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/lib_ebzz_ebzz_common_a-coins.Tpo storage/$(DEPDIR)/lib_ebzz_ebzz_common_a-coins.Po
#	$(AM_V_CXX)source='storage/coins.cpp' object='storage/lib_ebzz_ebzz_common_a-coins.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o storage/lib_ebzz_ebzz_common_a-coins.o `test -f 'storage/coins.cpp' || echo '$(srcdir)/'`storage/coins.cpp

storage/lib_ebzz_ebzz_common_a-coins.obj: storage/coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT storage/lib_ebzz_ebzz_common_a-coins.obj -MD -MP -MF storage/$(DEPDIR)/lib_ebzz_ebzz_common_a-coins.Tpo -c -o storage/lib_ebzz_ebzz_common_a-coins.obj `if test -f 'storage/coins.cpp'; then $(CYGPATH_W) 'storage/coins.cpp'; else $(CYGPATH_W) '$(srcdir)/storage/coins.cpp'; fi`
	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/lib_ebzz_ebzz_common_a-coins.Tpo storage/$(DEPDIR)/lib_ebzz_ebzz_common_a-coins.Po
#	$(AM_V_CXX)source='storage/coins.cpp' object='storage/lib_ebzz_ebzz_common_a-coins.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o storage/lib_ebzz_ebzz_common_a-coins.obj `if test -f 'storage/coins.cpp'; then $(CYGPATH_W) 'storage/coins.cpp'; else $(CYGPATH_W) '$(srcdir)/storage/coins.cpp'; fi`

utils/lib_ebzz_ebzz_common_a-compressor.o: utils/compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_common_a-compressor.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-compressor.Tpo -c -o utils/lib_ebzz_ebzz_common_a-compressor.o `test -f 'utils/compressor.cpp' || echo '$(srcdir)/'`utils/compressor.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-compressor.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-compressor.Po
#	$(AM_V_CXX)source='utils/compressor.cpp' object='utils/lib_ebzz_ebzz_common_a-compressor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_common_a-compressor.o `test -f 'utils/compressor.cpp' || echo '$(srcdir)/'`utils/compressor.cpp

utils/lib_ebzz_ebzz_common_a-compressor.obj: utils/compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_common_a-compressor.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-compressor.Tpo -c -o utils/lib_ebzz_ebzz_common_a-compressor.obj `if test -f 'utils/compressor.cpp'; then $(CYGPATH_W) 'utils/compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/compressor.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-compressor.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-compressor.Po
#	$(AM_V_CXX)source='utils/compressor.cpp' object='utils/lib_ebzz_ebzz_common_a-compressor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_common_a-compressor.obj `if test -f 'utils/compressor.cpp'; then $(CYGPATH_W) 'utils/compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/compressor.cpp'; fi`

primitives/lib_ebzz_ebzz_common_a-block.o: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT primitives/lib_ebzz_ebzz_common_a-block.o -MD -MP -MF primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-block.Tpo -c -o primitives/lib_ebzz_ebzz_common_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-block.Tpo primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/lib_ebzz_ebzz_common_a-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o primitives/lib_ebzz_ebzz_common_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/lib_ebzz_ebzz_common_a-block.obj: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT primitives/lib_ebzz_ebzz_common_a-block.obj -MD -MP -MF primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-block.Tpo -c -o primitives/lib_ebzz_ebzz_common_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-block.Tpo primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/lib_ebzz_ebzz_common_a-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o primitives/lib_ebzz_ebzz_common_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`

primitives/lib_ebzz_ebzz_common_a-transaction.o: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT primitives/lib_ebzz_ebzz_common_a-transaction.o -MD -MP -MF primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-transaction.Tpo -c -o primitives/lib_ebzz_ebzz_common_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-transaction.Tpo primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/lib_ebzz_ebzz_common_a-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o primitives/lib_ebzz_ebzz_common_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

primitives/lib_ebzz_ebzz_common_a-transaction.obj: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT primitives/lib_ebzz_ebzz_common_a-transaction.obj -MD -MP -MF primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-transaction.Tpo -c -o primitives/lib_ebzz_ebzz_common_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-transaction.Tpo primitives/$(DEPDIR)/lib_ebzz_ebzz_common_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/lib_ebzz_ebzz_common_a-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o primitives/lib_ebzz_ebzz_common_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`

utils/lib_ebzz_ebzz_common_a-core_read.o: utils/core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_common_a-core_read.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_read.Tpo -c -o utils/lib_ebzz_ebzz_common_a-core_read.o `test -f 'utils/core_read.cpp' || echo '$(srcdir)/'`utils/core_read.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_read.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_read.Po
#	$(AM_V_CXX)source='utils/core_read.cpp' object='utils/lib_ebzz_ebzz_common_a-core_read.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_common_a-core_read.o `test -f 'utils/core_read.cpp' || echo '$(srcdir)/'`utils/core_read.cpp

utils/lib_ebzz_ebzz_common_a-core_read.obj: utils/core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_common_a-core_read.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_read.Tpo -c -o utils/lib_ebzz_ebzz_common_a-core_read.obj `if test -f 'utils/core_read.cpp'; then $(CYGPATH_W) 'utils/core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/core_read.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_read.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_read.Po
#	$(AM_V_CXX)source='utils/core_read.cpp' object='utils/lib_ebzz_ebzz_common_a-core_read.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_common_a-core_read.obj `if test -f 'utils/core_read.cpp'; then $(CYGPATH_W) 'utils/core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/core_read.cpp'; fi`

utils/lib_ebzz_ebzz_common_a-core_write.o: utils/core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_common_a-core_write.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_write.Tpo -c -o utils/lib_ebzz_ebzz_common_a-core_write.o `test -f 'utils/core_write.cpp' || echo '$(srcdir)/'`utils/core_write.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_write.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_write.Po
#	$(AM_V_CXX)source='utils/core_write.cpp' object='utils/lib_ebzz_ebzz_common_a-core_write.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_common_a-core_write.o `test -f 'utils/core_write.cpp' || echo '$(srcdir)/'`utils/core_write.cpp

utils/lib_ebzz_ebzz_common_a-core_write.obj: utils/core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_common_a-core_write.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_write.Tpo -c -o utils/lib_ebzz_ebzz_common_a-core_write.obj `if test -f 'utils/core_write.cpp'; then $(CYGPATH_W) 'utils/core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/core_write.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_write.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_common_a-core_write.Po
#	$(AM_V_CXX)source='utils/core_write.cpp' object='utils/lib_ebzz_ebzz_common_a-core_write.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_common_a-core_write.obj `if test -f 'utils/core_write.cpp'; then $(CYGPATH_W) 'utils/core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/core_write.cpp'; fi`

structs/lib_ebzz_ebzz_common_a-hash.o: structs/hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_common_a-hash.o -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-hash.Tpo -c -o structs/lib_ebzz_ebzz_common_a-hash.o `test -f 'structs/hash.cpp' || echo '$(srcdir)/'`structs/hash.cpp
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-hash.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-hash.Po
#	$(AM_V_CXX)source='structs/hash.cpp' object='structs/lib_ebzz_ebzz_common_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_common_a-hash.o `test -f 'structs/hash.cpp' || echo '$(srcdir)/'`structs/hash.cpp

structs/lib_ebzz_ebzz_common_a-hash.obj: structs/hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_common_a-hash.obj -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-hash.Tpo -c -o structs/lib_ebzz_ebzz_common_a-hash.obj `if test -f 'structs/hash.cpp'; then $(CYGPATH_W) 'structs/hash.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/hash.cpp'; fi`
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-hash.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_common_a-hash.Po
#	$(AM_V_CXX)source='structs/hash.cpp' object='structs/lib_ebzz_ebzz_common_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_common_a-hash.obj `if test -f 'structs/hash.cpp'; then $(CYGPATH_W) 'structs/hash.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/hash.cpp'; fi`

keys/lib_ebzz_ebzz_common_a-key.o: keys/key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keys/lib_ebzz_ebzz_common_a-key.o -MD -MP -MF keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-key.Tpo -c -o keys/lib_ebzz_ebzz_common_a-key.o `test -f 'keys/key.cpp' || echo '$(srcdir)/'`keys/key.cpp
	$(AM_V_at)$(am__mv) keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-key.Tpo keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-key.Po
#	$(AM_V_CXX)source='keys/key.cpp' object='keys/lib_ebzz_ebzz_common_a-key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keys/lib_ebzz_ebzz_common_a-key.o `test -f 'keys/key.cpp' || echo '$(srcdir)/'`keys/key.cpp

keys/lib_ebzz_ebzz_common_a-key.obj: keys/key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keys/lib_ebzz_ebzz_common_a-key.obj -MD -MP -MF keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-key.Tpo -c -o keys/lib_ebzz_ebzz_common_a-key.obj `if test -f 'keys/key.cpp'; then $(CYGPATH_W) 'keys/key.cpp'; else $(CYGPATH_W) '$(srcdir)/keys/key.cpp'; fi`
	$(AM_V_at)$(am__mv) keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-key.Tpo keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-key.Po
#	$(AM_V_CXX)source='keys/key.cpp' object='keys/lib_ebzz_ebzz_common_a-key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keys/lib_ebzz_ebzz_common_a-key.obj `if test -f 'keys/key.cpp'; then $(CYGPATH_W) 'keys/key.cpp'; else $(CYGPATH_W) '$(srcdir)/keys/key.cpp'; fi`

wallet/lib_ebzz_ebzz_common_a-keystore.o: wallet/keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_common_a-keystore.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_common_a-keystore.Tpo -c -o wallet/lib_ebzz_ebzz_common_a-keystore.o `test -f 'wallet/keystore.cpp' || echo '$(srcdir)/'`wallet/keystore.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_common_a-keystore.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_common_a-keystore.Po
#	$(AM_V_CXX)source='wallet/keystore.cpp' object='wallet/lib_ebzz_ebzz_common_a-keystore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_common_a-keystore.o `test -f 'wallet/keystore.cpp' || echo '$(srcdir)/'`wallet/keystore.cpp

wallet/lib_ebzz_ebzz_common_a-keystore.obj: wallet/keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_common_a-keystore.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_common_a-keystore.Tpo -c -o wallet/lib_ebzz_ebzz_common_a-keystore.obj `if test -f 'wallet/keystore.cpp'; then $(CYGPATH_W) 'wallet/keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/keystore.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_common_a-keystore.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_common_a-keystore.Po
#	$(AM_V_CXX)source='wallet/keystore.cpp' object='wallet/lib_ebzz_ebzz_common_a-keystore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_common_a-keystore.obj `if test -f 'wallet/keystore.cpp'; then $(CYGPATH_W) 'wallet/keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/keystore.cpp'; fi`

net/lib_ebzz_ebzz_common_a-netbase.o: net/netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT net/lib_ebzz_ebzz_common_a-netbase.o -MD -MP -MF net/$(DEPDIR)/lib_ebzz_ebzz_common_a-netbase.Tpo -c -o net/lib_ebzz_ebzz_common_a-netbase.o `test -f 'net/netbase.cpp' || echo '$(srcdir)/'`net/netbase.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/lib_ebzz_ebzz_common_a-netbase.Tpo net/$(DEPDIR)/lib_ebzz_ebzz_common_a-netbase.Po
#	$(AM_V_CXX)source='net/netbase.cpp' object='net/lib_ebzz_ebzz_common_a-netbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net/lib_ebzz_ebzz_common_a-netbase.o `test -f 'net/netbase.cpp' || echo '$(srcdir)/'`net/netbase.cpp

net/lib_ebzz_ebzz_common_a-netbase.obj: net/netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT net/lib_ebzz_ebzz_common_a-netbase.obj -MD -MP -MF net/$(DEPDIR)/lib_ebzz_ebzz_common_a-netbase.Tpo -c -o net/lib_ebzz_ebzz_common_a-netbase.obj `if test -f 'net/netbase.cpp'; then $(CYGPATH_W) 'net/netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/net/netbase.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/lib_ebzz_ebzz_common_a-netbase.Tpo net/$(DEPDIR)/lib_ebzz_ebzz_common_a-netbase.Po
#	$(AM_V_CXX)source='net/netbase.cpp' object='net/lib_ebzz_ebzz_common_a-netbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net/lib_ebzz_ebzz_common_a-netbase.obj `if test -f 'net/netbase.cpp'; then $(CYGPATH_W) 'net/netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/net/netbase.cpp'; fi`

protocol/lib_ebzz_ebzz_common_a-netprotocol.o: protocol/netprotocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzz_common_a-netprotocol.o -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzz_common_a-netprotocol.Tpo -c -o protocol/lib_ebzz_ebzz_common_a-netprotocol.o `test -f 'protocol/netprotocol.cpp' || echo '$(srcdir)/'`protocol/netprotocol.cpp
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzz_common_a-netprotocol.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzz_common_a-netprotocol.Po
#	$(AM_V_CXX)source='protocol/netprotocol.cpp' object='protocol/lib_ebzz_ebzz_common_a-netprotocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzz_common_a-netprotocol.o `test -f 'protocol/netprotocol.cpp' || echo '$(srcdir)/'`protocol/netprotocol.cpp

protocol/lib_ebzz_ebzz_common_a-netprotocol.obj: protocol/netprotocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzz_common_a-netprotocol.obj -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzz_common_a-netprotocol.Tpo -c -o protocol/lib_ebzz_ebzz_common_a-netprotocol.obj `if test -f 'protocol/netprotocol.cpp'; then $(CYGPATH_W) 'protocol/netprotocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/netprotocol.cpp'; fi`
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzz_common_a-netprotocol.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzz_common_a-netprotocol.Po
#	$(AM_V_CXX)source='protocol/netprotocol.cpp' object='protocol/lib_ebzz_ebzz_common_a-netprotocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzz_common_a-netprotocol.obj `if test -f 'protocol/netprotocol.cpp'; then $(CYGPATH_W) 'protocol/netprotocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/netprotocol.cpp'; fi`

keys/lib_ebzz_ebzz_common_a-pubkey.o: keys/pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keys/lib_ebzz_ebzz_common_a-pubkey.o -MD -MP -MF keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-pubkey.Tpo -c -o keys/lib_ebzz_ebzz_common_a-pubkey.o `test -f 'keys/pubkey.cpp' || echo '$(srcdir)/'`keys/pubkey.cpp
	$(AM_V_at)$(am__mv) keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-pubkey.Tpo keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-pubkey.Po
#	$(AM_V_CXX)source='keys/pubkey.cpp' object='keys/lib_ebzz_ebzz_common_a-pubkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keys/lib_ebzz_ebzz_common_a-pubkey.o `test -f 'keys/pubkey.cpp' || echo '$(srcdir)/'`keys/pubkey.cpp

keys/lib_ebzz_ebzz_common_a-pubkey.obj: keys/pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keys/lib_ebzz_ebzz_common_a-pubkey.obj -MD -MP -MF keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-pubkey.Tpo -c -o keys/lib_ebzz_ebzz_common_a-pubkey.obj `if test -f 'keys/pubkey.cpp'; then $(CYGPATH_W) 'keys/pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/keys/pubkey.cpp'; fi`
	$(AM_V_at)$(am__mv) keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-pubkey.Tpo keys/$(DEPDIR)/lib_ebzz_ebzz_common_a-pubkey.Po
#	$(AM_V_CXX)source='keys/pubkey.cpp' object='keys/lib_ebzz_ebzz_common_a-pubkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keys/lib_ebzz_ebzz_common_a-pubkey.obj `if test -f 'keys/pubkey.cpp'; then $(CYGPATH_W) 'keys/pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/keys/pubkey.cpp'; fi`

script/lib_ebzz_ebzz_common_a-interpreter.o: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_common_a-interpreter.o -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_common_a-interpreter.Tpo -c -o script/lib_ebzz_ebzz_common_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_common_a-interpreter.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_common_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/lib_ebzz_ebzz_common_a-interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_common_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/lib_ebzz_ebzz_common_a-interpreter.obj: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_common_a-interpreter.obj -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_common_a-interpreter.Tpo -c -o script/lib_ebzz_ebzz_common_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_common_a-interpreter.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_common_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/lib_ebzz_ebzz_common_a-interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_common_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`

script/lib_ebzz_ebzz_common_a-script.o: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_common_a-script.o -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script.Tpo -c -o script/lib_ebzz_ebzz_common_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/lib_ebzz_ebzz_common_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_common_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/lib_ebzz_ebzz_common_a-script.obj: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_common_a-script.obj -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script.Tpo -c -o script/lib_ebzz_ebzz_common_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/lib_ebzz_ebzz_common_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_common_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`

script/lib_ebzz_ebzz_common_a-sign.o: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_common_a-sign.o -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_common_a-sign.Tpo -c -o script/lib_ebzz_ebzz_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_common_a-sign.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/lib_ebzz_ebzz_common_a-sign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp

script/lib_ebzz_ebzz_common_a-sign.obj: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_common_a-sign.obj -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_common_a-sign.Tpo -c -o script/lib_ebzz_ebzz_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_common_a-sign.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/lib_ebzz_ebzz_common_a-sign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`

script/lib_ebzz_ebzz_common_a-standard.o: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_common_a-standard.o -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_common_a-standard.Tpo -c -o script/lib_ebzz_ebzz_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_common_a-standard.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/lib_ebzz_ebzz_common_a-standard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp

script/lib_ebzz_ebzz_common_a-standard.obj: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_common_a-standard.obj -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_common_a-standard.Tpo -c -o script/lib_ebzz_ebzz_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_common_a-standard.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/lib_ebzz_ebzz_common_a-standard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`

script/lib_ebzz_ebzz_common_a-script_error.o: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_common_a-script_error.o -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script_error.Tpo -c -o script/lib_ebzz_ebzz_common_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script_error.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/lib_ebzz_ebzz_common_a-script_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_common_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

script/lib_ebzz_ebzz_common_a-script_error.obj: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_common_a-script_error.obj -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script_error.Tpo -c -o script/lib_ebzz_ebzz_common_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script_error.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_common_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/lib_ebzz_ebzz_common_a-script_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_common_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`

community/lib_ebzz_ebzz_community_a-community.o: community/community.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT community/lib_ebzz_ebzz_community_a-community.o -MD -MP -MF community/$(DEPDIR)/lib_ebzz_ebzz_community_a-community.Tpo -c -o community/lib_ebzz_ebzz_community_a-community.o `test -f 'community/community.cpp' || echo '$(srcdir)/'`community/community.cpp
	$(AM_V_at)$(am__mv) community/$(DEPDIR)/lib_ebzz_ebzz_community_a-community.Tpo community/$(DEPDIR)/lib_ebzz_ebzz_community_a-community.Po
#	$(AM_V_CXX)source='community/community.cpp' object='community/lib_ebzz_ebzz_community_a-community.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o community/lib_ebzz_ebzz_community_a-community.o `test -f 'community/community.cpp' || echo '$(srcdir)/'`community/community.cpp

community/lib_ebzz_ebzz_community_a-community.obj: community/community.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT community/lib_ebzz_ebzz_community_a-community.obj -MD -MP -MF community/$(DEPDIR)/lib_ebzz_ebzz_community_a-community.Tpo -c -o community/lib_ebzz_ebzz_community_a-community.obj `if test -f 'community/community.cpp'; then $(CYGPATH_W) 'community/community.cpp'; else $(CYGPATH_W) '$(srcdir)/community/community.cpp'; fi`
	$(AM_V_at)$(am__mv) community/$(DEPDIR)/lib_ebzz_ebzz_community_a-community.Tpo community/$(DEPDIR)/lib_ebzz_ebzz_community_a-community.Po
#	$(AM_V_CXX)source='community/community.cpp' object='community/lib_ebzz_ebzz_community_a-community.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o community/lib_ebzz_ebzz_community_a-community.obj `if test -f 'community/community.cpp'; then $(CYGPATH_W) 'community/community.cpp'; else $(CYGPATH_W) '$(srcdir)/community/community.cpp'; fi`

wallet/lib_ebzz_ebzz_community_a-db.o: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_community_a-db.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-db.Tpo -c -o wallet/lib_ebzz_ebzz_community_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-db.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/lib_ebzz_ebzz_community_a-db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_community_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp

wallet/lib_ebzz_ebzz_community_a-db.obj: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_community_a-db.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-db.Tpo -c -o wallet/lib_ebzz_ebzz_community_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-db.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/lib_ebzz_ebzz_community_a-db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_community_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`

wallet/lib_ebzz_ebzz_community_a-dbwrap_com.o: wallet/dbwrap_com.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_community_a-dbwrap_com.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-dbwrap_com.Tpo -c -o wallet/lib_ebzz_ebzz_community_a-dbwrap_com.o `test -f 'wallet/dbwrap_com.cpp' || echo '$(srcdir)/'`wallet/dbwrap_com.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-dbwrap_com.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-dbwrap_com.Po
#	$(AM_V_CXX)source='wallet/dbwrap_com.cpp' object='wallet/lib_ebzz_ebzz_community_a-dbwrap_com.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_community_a-dbwrap_com.o `test -f 'wallet/dbwrap_com.cpp' || echo '$(srcdir)/'`wallet/dbwrap_com.cpp

wallet/lib_ebzz_ebzz_community_a-dbwrap_com.obj: wallet/dbwrap_com.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_community_a-dbwrap_com.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-dbwrap_com.Tpo -c -o wallet/lib_ebzz_ebzz_community_a-dbwrap_com.obj `if test -f 'wallet/dbwrap_com.cpp'; then $(CYGPATH_W) 'wallet/dbwrap_com.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/dbwrap_com.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-dbwrap_com.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_community_a-dbwrap_com.Po
#	$(AM_V_CXX)source='wallet/dbwrap_com.cpp' object='wallet/lib_ebzz_ebzz_community_a-dbwrap_com.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_community_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_community_a-dbwrap_com.obj `if test -f 'wallet/dbwrap_com.cpp'; then $(CYGPATH_W) 'wallet/dbwrap_com.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/dbwrap_com.cpp'; fi`

community/lib_ebzz_ebzz_enterprise_a-community.o: community/community.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT community/lib_ebzz_ebzz_enterprise_a-community.o -MD -MP -MF community/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-community.Tpo -c -o community/lib_ebzz_ebzz_enterprise_a-community.o `test -f 'community/community.cpp' || echo '$(srcdir)/'`community/community.cpp
	$(AM_V_at)$(am__mv) community/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-community.Tpo community/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-community.Po
#	$(AM_V_CXX)source='community/community.cpp' object='community/lib_ebzz_ebzz_enterprise_a-community.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o community/lib_ebzz_ebzz_enterprise_a-community.o `test -f 'community/community.cpp' || echo '$(srcdir)/'`community/community.cpp

community/lib_ebzz_ebzz_enterprise_a-community.obj: community/community.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT community/lib_ebzz_ebzz_enterprise_a-community.obj -MD -MP -MF community/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-community.Tpo -c -o community/lib_ebzz_ebzz_enterprise_a-community.obj `if test -f 'community/community.cpp'; then $(CYGPATH_W) 'community/community.cpp'; else $(CYGPATH_W) '$(srcdir)/community/community.cpp'; fi`
	$(AM_V_at)$(am__mv) community/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-community.Tpo community/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-community.Po
#	$(AM_V_CXX)source='community/community.cpp' object='community/lib_ebzz_ebzz_enterprise_a-community.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o community/lib_ebzz_ebzz_enterprise_a-community.obj `if test -f 'community/community.cpp'; then $(CYGPATH_W) 'community/community.cpp'; else $(CYGPATH_W) '$(srcdir)/community/community.cpp'; fi`

wallet/lib_ebzz_ebzz_enterprise_a-db.o: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_enterprise_a-db.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-db.Tpo -c -o wallet/lib_ebzz_ebzz_enterprise_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-db.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/lib_ebzz_ebzz_enterprise_a-db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_enterprise_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp

wallet/lib_ebzz_ebzz_enterprise_a-db.obj: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_enterprise_a-db.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-db.Tpo -c -o wallet/lib_ebzz_ebzz_enterprise_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-db.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/lib_ebzz_ebzz_enterprise_a-db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_enterprise_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`

wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.o: wallet/dbwrap_com.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-dbwrap_com.Tpo -c -o wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.o `test -f 'wallet/dbwrap_com.cpp' || echo '$(srcdir)/'`wallet/dbwrap_com.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-dbwrap_com.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-dbwrap_com.Po
#	$(AM_V_CXX)source='wallet/dbwrap_com.cpp' object='wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.o `test -f 'wallet/dbwrap_com.cpp' || echo '$(srcdir)/'`wallet/dbwrap_com.cpp

wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.obj: wallet/dbwrap_com.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-dbwrap_com.Tpo -c -o wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.obj `if test -f 'wallet/dbwrap_com.cpp'; then $(CYGPATH_W) 'wallet/dbwrap_com.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/dbwrap_com.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-dbwrap_com.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_enterprise_a-dbwrap_com.Po
#	$(AM_V_CXX)source='wallet/dbwrap_com.cpp' object='wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_enterprise_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_enterprise_a-dbwrap_com.obj `if test -f 'wallet/dbwrap_com.cpp'; then $(CYGPATH_W) 'wallet/dbwrap_com.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/dbwrap_com.cpp'; fi`

storage/lib_ebzz_ebzz_server_a-addrman.o: storage/addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT storage/lib_ebzz_ebzz_server_a-addrman.o -MD -MP -MF storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-addrman.Tpo -c -o storage/lib_ebzz_ebzz_server_a-addrman.o `test -f 'storage/addrman.cpp' || echo '$(srcdir)/'`storage/addrman.cpp
	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-addrman.Tpo storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-addrman.Po
#	$(AM_V_CXX)source='storage/addrman.cpp' object='storage/lib_ebzz_ebzz_server_a-addrman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o storage/lib_ebzz_ebzz_server_a-addrman.o `test -f 'storage/addrman.cpp' || echo '$(srcdir)/'`storage/addrman.cpp

storage/lib_ebzz_ebzz_server_a-addrman.obj: storage/addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT storage/lib_ebzz_ebzz_server_a-addrman.obj -MD -MP -MF storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-addrman.Tpo -c -o storage/lib_ebzz_ebzz_server_a-addrman.obj `if test -f 'storage/addrman.cpp'; then $(CYGPATH_W) 'storage/addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/storage/addrman.cpp'; fi`
	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-addrman.Tpo storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-addrman.Po
#	$(AM_V_CXX)source='storage/addrman.cpp' object='storage/lib_ebzz_ebzz_server_a-addrman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o storage/lib_ebzz_ebzz_server_a-addrman.obj `if test -f 'storage/addrman.cpp'; then $(CYGPATH_W) 'storage/addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/storage/addrman.cpp'; fi`

structs/lib_ebzz_ebzz_server_a-alert.o: structs/alert.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_server_a-alert.o -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-alert.Tpo -c -o structs/lib_ebzz_ebzz_server_a-alert.o `test -f 'structs/alert.cpp' || echo '$(srcdir)/'`structs/alert.cpp
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-alert.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-alert.Po
#	$(AM_V_CXX)source='structs/alert.cpp' object='structs/lib_ebzz_ebzz_server_a-alert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_server_a-alert.o `test -f 'structs/alert.cpp' || echo '$(srcdir)/'`structs/alert.cpp

structs/lib_ebzz_ebzz_server_a-alert.obj: structs/alert.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_server_a-alert.obj -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-alert.Tpo -c -o structs/lib_ebzz_ebzz_server_a-alert.obj `if test -f 'structs/alert.cpp'; then $(CYGPATH_W) 'structs/alert.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/alert.cpp'; fi`
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-alert.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-alert.Po
#	$(AM_V_CXX)source='structs/alert.cpp' object='structs/lib_ebzz_ebzz_server_a-alert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_server_a-alert.obj `if test -f 'structs/alert.cpp'; then $(CYGPATH_W) 'structs/alert.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/alert.cpp'; fi`

structs/lib_ebzz_ebzz_server_a-bloom.o: structs/bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_server_a-bloom.o -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-bloom.Tpo -c -o structs/lib_ebzz_ebzz_server_a-bloom.o `test -f 'structs/bloom.cpp' || echo '$(srcdir)/'`structs/bloom.cpp
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-bloom.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-bloom.Po
#	$(AM_V_CXX)source='structs/bloom.cpp' object='structs/lib_ebzz_ebzz_server_a-bloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_server_a-bloom.o `test -f 'structs/bloom.cpp' || echo '$(srcdir)/'`structs/bloom.cpp

structs/lib_ebzz_ebzz_server_a-bloom.obj: structs/bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_server_a-bloom.obj -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-bloom.Tpo -c -o structs/lib_ebzz_ebzz_server_a-bloom.obj `if test -f 'structs/bloom.cpp'; then $(CYGPATH_W) 'structs/bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/bloom.cpp'; fi`
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-bloom.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_server_a-bloom.Po
#	$(AM_V_CXX)source='structs/bloom.cpp' object='structs/lib_ebzz_ebzz_server_a-bloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_server_a-bloom.obj `if test -f 'structs/bloom.cpp'; then $(CYGPATH_W) 'structs/bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/bloom.cpp'; fi`

chain/lib_ebzz_ebzz_server_a-chain.o: chain/chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chain/lib_ebzz_ebzz_server_a-chain.o -MD -MP -MF chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-chain.Tpo -c -o chain/lib_ebzz_ebzz_server_a-chain.o `test -f 'chain/chain.cpp' || echo '$(srcdir)/'`chain/chain.cpp
	$(AM_V_at)$(am__mv) chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-chain.Tpo chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-chain.Po
#	$(AM_V_CXX)source='chain/chain.cpp' object='chain/lib_ebzz_ebzz_server_a-chain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chain/lib_ebzz_ebzz_server_a-chain.o `test -f 'chain/chain.cpp' || echo '$(srcdir)/'`chain/chain.cpp

chain/lib_ebzz_ebzz_server_a-chain.obj: chain/chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chain/lib_ebzz_ebzz_server_a-chain.obj -MD -MP -MF chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-chain.Tpo -c -o chain/lib_ebzz_ebzz_server_a-chain.obj `if test -f 'chain/chain.cpp'; then $(CYGPATH_W) 'chain/chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain/chain.cpp'; fi`
	$(AM_V_at)$(am__mv) chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-chain.Tpo chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-chain.Po
#	$(AM_V_CXX)source='chain/chain.cpp' object='chain/lib_ebzz_ebzz_server_a-chain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chain/lib_ebzz_ebzz_server_a-chain.obj `if test -f 'chain/chain.cpp'; then $(CYGPATH_W) 'chain/chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain/chain.cpp'; fi`

chain/lib_ebzz_ebzz_server_a-checkpoints.o: chain/checkpoints.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chain/lib_ebzz_ebzz_server_a-checkpoints.o -MD -MP -MF chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-checkpoints.Tpo -c -o chain/lib_ebzz_ebzz_server_a-checkpoints.o `test -f 'chain/checkpoints.cpp' || echo '$(srcdir)/'`chain/checkpoints.cpp
	$(AM_V_at)$(am__mv) chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-checkpoints.Tpo chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-checkpoints.Po
#	$(AM_V_CXX)source='chain/checkpoints.cpp' object='chain/lib_ebzz_ebzz_server_a-checkpoints.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chain/lib_ebzz_ebzz_server_a-checkpoints.o `test -f 'chain/checkpoints.cpp' || echo '$(srcdir)/'`chain/checkpoints.cpp

chain/lib_ebzz_ebzz_server_a-checkpoints.obj: chain/checkpoints.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chain/lib_ebzz_ebzz_server_a-checkpoints.obj -MD -MP -MF chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-checkpoints.Tpo -c -o chain/lib_ebzz_ebzz_server_a-checkpoints.obj `if test -f 'chain/checkpoints.cpp'; then $(CYGPATH_W) 'chain/checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/chain/checkpoints.cpp'; fi`
	$(AM_V_at)$(am__mv) chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-checkpoints.Tpo chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-checkpoints.Po
#	$(AM_V_CXX)source='chain/checkpoints.cpp' object='chain/lib_ebzz_ebzz_server_a-checkpoints.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chain/lib_ebzz_ebzz_server_a-checkpoints.obj `if test -f 'chain/checkpoints.cpp'; then $(CYGPATH_W) 'chain/checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/chain/checkpoints.cpp'; fi`

core/lib_ebzz_ebzz_server_a-init.o: core/init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/lib_ebzz_ebzz_server_a-init.o -MD -MP -MF core/$(DEPDIR)/lib_ebzz_ebzz_server_a-init.Tpo -c -o core/lib_ebzz_ebzz_server_a-init.o `test -f 'core/init.cpp' || echo '$(srcdir)/'`core/init.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/lib_ebzz_ebzz_server_a-init.Tpo core/$(DEPDIR)/lib_ebzz_ebzz_server_a-init.Po
#	$(AM_V_CXX)source='core/init.cpp' object='core/lib_ebzz_ebzz_server_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/lib_ebzz_ebzz_server_a-init.o `test -f 'core/init.cpp' || echo '$(srcdir)/'`core/init.cpp

core/lib_ebzz_ebzz_server_a-init.obj: core/init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/lib_ebzz_ebzz_server_a-init.obj -MD -MP -MF core/$(DEPDIR)/lib_ebzz_ebzz_server_a-init.Tpo -c -o core/lib_ebzz_ebzz_server_a-init.obj `if test -f 'core/init.cpp'; then $(CYGPATH_W) 'core/init.cpp'; else $(CYGPATH_W) '$(srcdir)/core/init.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/lib_ebzz_ebzz_server_a-init.Tpo core/$(DEPDIR)/lib_ebzz_ebzz_server_a-init.Po
#	$(AM_V_CXX)source='core/init.cpp' object='core/lib_ebzz_ebzz_server_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/lib_ebzz_ebzz_server_a-init.obj `if test -f 'core/init.cpp'; then $(CYGPATH_W) 'core/init.cpp'; else $(CYGPATH_W) '$(srcdir)/core/init.cpp'; fi`

storage/lib_ebzz_ebzz_server_a-leveldbwrapper.o: storage/leveldbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT storage/lib_ebzz_ebzz_server_a-leveldbwrapper.o -MD -MP -MF storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-leveldbwrapper.Tpo -c -o storage/lib_ebzz_ebzz_server_a-leveldbwrapper.o `test -f 'storage/leveldbwrapper.cpp' || echo '$(srcdir)/'`storage/leveldbwrapper.cpp
	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-leveldbwrapper.Tpo storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-leveldbwrapper.Po
#	$(AM_V_CXX)source='storage/leveldbwrapper.cpp' object='storage/lib_ebzz_ebzz_server_a-leveldbwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o storage/lib_ebzz_ebzz_server_a-leveldbwrapper.o `test -f 'storage/leveldbwrapper.cpp' || echo '$(srcdir)/'`storage/leveldbwrapper.cpp

storage/lib_ebzz_ebzz_server_a-leveldbwrapper.obj: storage/leveldbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT storage/lib_ebzz_ebzz_server_a-leveldbwrapper.obj -MD -MP -MF storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-leveldbwrapper.Tpo -c -o storage/lib_ebzz_ebzz_server_a-leveldbwrapper.obj `if test -f 'storage/leveldbwrapper.cpp'; then $(CYGPATH_W) 'storage/leveldbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/storage/leveldbwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-leveldbwrapper.Tpo storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-leveldbwrapper.Po
#	$(AM_V_CXX)source='storage/leveldbwrapper.cpp' object='storage/lib_ebzz_ebzz_server_a-leveldbwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o storage/lib_ebzz_ebzz_server_a-leveldbwrapper.obj `if test -f 'storage/leveldbwrapper.cpp'; then $(CYGPATH_W) 'storage/leveldbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/storage/leveldbwrapper.cpp'; fi`

core/lib_ebzz_ebzz_server_a-main.o: core/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/lib_ebzz_ebzz_server_a-main.o -MD -MP -MF core/$(DEPDIR)/lib_ebzz_ebzz_server_a-main.Tpo -c -o core/lib_ebzz_ebzz_server_a-main.o `test -f 'core/main.cpp' || echo '$(srcdir)/'`core/main.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/lib_ebzz_ebzz_server_a-main.Tpo core/$(DEPDIR)/lib_ebzz_ebzz_server_a-main.Po
#	$(AM_V_CXX)source='core/main.cpp' object='core/lib_ebzz_ebzz_server_a-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/lib_ebzz_ebzz_server_a-main.o `test -f 'core/main.cpp' || echo '$(srcdir)/'`core/main.cpp

core/lib_ebzz_ebzz_server_a-main.obj: core/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/lib_ebzz_ebzz_server_a-main.obj -MD -MP -MF core/$(DEPDIR)/lib_ebzz_ebzz_server_a-main.Tpo -c -o core/lib_ebzz_ebzz_server_a-main.obj `if test -f 'core/main.cpp'; then $(CYGPATH_W) 'core/main.cpp'; else $(CYGPATH_W) '$(srcdir)/core/main.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/lib_ebzz_ebzz_server_a-main.Tpo core/$(DEPDIR)/lib_ebzz_ebzz_server_a-main.Po
#	$(AM_V_CXX)source='core/main.cpp' object='core/lib_ebzz_ebzz_server_a-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/lib_ebzz_ebzz_server_a-main.obj `if test -f 'core/main.cpp'; then $(CYGPATH_W) 'core/main.cpp'; else $(CYGPATH_W) '$(srcdir)/core/main.cpp'; fi`

protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.o: protocol/_ebzz_ebzztx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.o -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.Tpo -c -o protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.o `test -f 'protocol/_ebzz_ebzztx.cpp' || echo '$(srcdir)/'`protocol/_ebzz_ebzztx.cpp
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.Po
#	$(AM_V_CXX)source='protocol/_ebzz_ebzztx.cpp' object='protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.o `test -f 'protocol/_ebzz_ebzztx.cpp' || echo '$(srcdir)/'`protocol/_ebzz_ebzztx.cpp

protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.obj: protocol/_ebzz_ebzztx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.obj -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.Tpo -c -o protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.obj `if test -f 'protocol/_ebzz_ebzztx.cpp'; then $(CYGPATH_W) 'protocol/_ebzz_ebzztx.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/_ebzz_ebzztx.cpp'; fi`
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.Po
#	$(AM_V_CXX)source='protocol/_ebzz_ebzztx.cpp' object='protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzztx.obj `if test -f 'protocol/_ebzz_ebzztx.cpp'; then $(CYGPATH_W) 'protocol/_ebzz_ebzztx.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/_ebzz_ebzztx.cpp'; fi`

protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.o: protocol/_ebzz_ebzzblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.o -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.Tpo -c -o protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.o `test -f 'protocol/_ebzz_ebzzblock.cpp' || echo '$(srcdir)/'`protocol/_ebzz_ebzzblock.cpp
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.Po
#	$(AM_V_CXX)source='protocol/_ebzz_ebzzblock.cpp' object='protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.o `test -f 'protocol/_ebzz_ebzzblock.cpp' || echo '$(srcdir)/'`protocol/_ebzz_ebzzblock.cpp

protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.obj: protocol/_ebzz_ebzzblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.obj -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.Tpo -c -o protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.obj `if test -f 'protocol/_ebzz_ebzzblock.cpp'; then $(CYGPATH_W) 'protocol/_ebzz_ebzzblock.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/_ebzz_ebzzblock.cpp'; fi`
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.Po
#	$(AM_V_CXX)source='protocol/_ebzz_ebzzblock.cpp' object='protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzz_server_a-_ebzz_ebzzblock.obj `if test -f 'protocol/_ebzz_ebzzblock.cpp'; then $(CYGPATH_W) 'protocol/_ebzz_ebzzblock.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/_ebzz_ebzzblock.cpp'; fi`

custom/lib_ebzz_ebzz_server_a-custom_server.o: custom/custom_server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT custom/lib_ebzz_ebzz_server_a-custom_server.o -MD -MP -MF custom/$(DEPDIR)/lib_ebzz_ebzz_server_a-custom_server.Tpo -c -o custom/lib_ebzz_ebzz_server_a-custom_server.o `test -f 'custom/custom_server.cpp' || echo '$(srcdir)/'`custom/custom_server.cpp
	$(AM_V_at)$(am__mv) custom/$(DEPDIR)/lib_ebzz_ebzz_server_a-custom_server.Tpo custom/$(DEPDIR)/lib_ebzz_ebzz_server_a-custom_server.Po
#	$(AM_V_CXX)source='custom/custom_server.cpp' object='custom/lib_ebzz_ebzz_server_a-custom_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o custom/lib_ebzz_ebzz_server_a-custom_server.o `test -f 'custom/custom_server.cpp' || echo '$(srcdir)/'`custom/custom_server.cpp

custom/lib_ebzz_ebzz_server_a-custom_server.obj: custom/custom_server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT custom/lib_ebzz_ebzz_server_a-custom_server.obj -MD -MP -MF custom/$(DEPDIR)/lib_ebzz_ebzz_server_a-custom_server.Tpo -c -o custom/lib_ebzz_ebzz_server_a-custom_server.obj `if test -f 'custom/custom_server.cpp'; then $(CYGPATH_W) 'custom/custom_server.cpp'; else $(CYGPATH_W) '$(srcdir)/custom/custom_server.cpp'; fi`
	$(AM_V_at)$(am__mv) custom/$(DEPDIR)/lib_ebzz_ebzz_server_a-custom_server.Tpo custom/$(DEPDIR)/lib_ebzz_ebzz_server_a-custom_server.Po
#	$(AM_V_CXX)source='custom/custom_server.cpp' object='custom/lib_ebzz_ebzz_server_a-custom_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o custom/lib_ebzz_ebzz_server_a-custom_server.obj `if test -f 'custom/custom_server.cpp'; then $(CYGPATH_W) 'custom/custom_server.cpp'; else $(CYGPATH_W) '$(srcdir)/custom/custom_server.cpp'; fi`

filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.o: filters/_ebzz_ebzzfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.o -MD -MP -MF filters/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.Tpo -c -o filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.o `test -f 'filters/_ebzz_ebzzfilter.cpp' || echo '$(srcdir)/'`filters/_ebzz_ebzzfilter.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.Tpo filters/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.Po
#	$(AM_V_CXX)source='filters/_ebzz_ebzzfilter.cpp' object='filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.o `test -f 'filters/_ebzz_ebzzfilter.cpp' || echo '$(srcdir)/'`filters/_ebzz_ebzzfilter.cpp

filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.obj: filters/_ebzz_ebzzfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.obj -MD -MP -MF filters/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.Tpo -c -o filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.obj `if test -f 'filters/_ebzz_ebzzfilter.cpp'; then $(CYGPATH_W) 'filters/_ebzz_ebzzfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/_ebzz_ebzzfilter.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.Tpo filters/$(DEPDIR)/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.Po
#	$(AM_V_CXX)source='filters/_ebzz_ebzzfilter.cpp' object='filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/lib_ebzz_ebzz_server_a-_ebzz_ebzzfilter.obj `if test -f 'filters/_ebzz_ebzzfilter.cpp'; then $(CYGPATH_W) 'filters/_ebzz_ebzzfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/_ebzz_ebzzfilter.cpp'; fi`

protocol/lib_ebzz_ebzz_server_a-relay.o: protocol/relay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzz_server_a-relay.o -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-relay.Tpo -c -o protocol/lib_ebzz_ebzz_server_a-relay.o `test -f 'protocol/relay.cpp' || echo '$(srcdir)/'`protocol/relay.cpp
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-relay.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-relay.Po
#	$(AM_V_CXX)source='protocol/relay.cpp' object='protocol/lib_ebzz_ebzz_server_a-relay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzz_server_a-relay.o `test -f 'protocol/relay.cpp' || echo '$(srcdir)/'`protocol/relay.cpp

protocol/lib_ebzz_ebzz_server_a-relay.obj: protocol/relay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzz_server_a-relay.obj -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-relay.Tpo -c -o protocol/lib_ebzz_ebzz_server_a-relay.obj `if test -f 'protocol/relay.cpp'; then $(CYGPATH_W) 'protocol/relay.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/relay.cpp'; fi`
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-relay.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-relay.Po
#	$(AM_V_CXX)source='protocol/relay.cpp' object='protocol/lib_ebzz_ebzz_server_a-relay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzz_server_a-relay.obj `if test -f 'protocol/relay.cpp'; then $(CYGPATH_W) 'protocol/relay.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/relay.cpp'; fi`

protocol/lib_ebzz_ebzz_server_a-handshake.o: protocol/handshake.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzz_server_a-handshake.o -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-handshake.Tpo -c -o protocol/lib_ebzz_ebzz_server_a-handshake.o `test -f 'protocol/handshake.cpp' || echo '$(srcdir)/'`protocol/handshake.cpp
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-handshake.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-handshake.Po
#	$(AM_V_CXX)source='protocol/handshake.cpp' object='protocol/lib_ebzz_ebzz_server_a-handshake.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzz_server_a-handshake.o `test -f 'protocol/handshake.cpp' || echo '$(srcdir)/'`protocol/handshake.cpp

protocol/lib_ebzz_ebzz_server_a-handshake.obj: protocol/handshake.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzz_server_a-handshake.obj -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-handshake.Tpo -c -o protocol/lib_ebzz_ebzz_server_a-handshake.obj `if test -f 'protocol/handshake.cpp'; then $(CYGPATH_W) 'protocol/handshake.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/handshake.cpp'; fi`
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-handshake.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzz_server_a-handshake.Po
#	$(AM_V_CXX)source='protocol/handshake.cpp' object='protocol/lib_ebzz_ebzz_server_a-handshake.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzz_server_a-handshake.obj `if test -f 'protocol/handshake.cpp'; then $(CYGPATH_W) 'protocol/handshake.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/handshake.cpp'; fi`

chain/lib_ebzz_ebzz_server_a-merkleblock.o: chain/merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chain/lib_ebzz_ebzz_server_a-merkleblock.o -MD -MP -MF chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-merkleblock.Tpo -c -o chain/lib_ebzz_ebzz_server_a-merkleblock.o `test -f 'chain/merkleblock.cpp' || echo '$(srcdir)/'`chain/merkleblock.cpp
	$(AM_V_at)$(am__mv) chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-merkleblock.Tpo chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-merkleblock.Po
#	$(AM_V_CXX)source='chain/merkleblock.cpp' object='chain/lib_ebzz_ebzz_server_a-merkleblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chain/lib_ebzz_ebzz_server_a-merkleblock.o `test -f 'chain/merkleblock.cpp' || echo '$(srcdir)/'`chain/merkleblock.cpp

chain/lib_ebzz_ebzz_server_a-merkleblock.obj: chain/merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chain/lib_ebzz_ebzz_server_a-merkleblock.obj -MD -MP -MF chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-merkleblock.Tpo -c -o chain/lib_ebzz_ebzz_server_a-merkleblock.obj `if test -f 'chain/merkleblock.cpp'; then $(CYGPATH_W) 'chain/merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/chain/merkleblock.cpp'; fi`
	$(AM_V_at)$(am__mv) chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-merkleblock.Tpo chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-merkleblock.Po
#	$(AM_V_CXX)source='chain/merkleblock.cpp' object='chain/lib_ebzz_ebzz_server_a-merkleblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chain/lib_ebzz_ebzz_server_a-merkleblock.obj `if test -f 'chain/merkleblock.cpp'; then $(CYGPATH_W) 'chain/merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/chain/merkleblock.cpp'; fi`

miner/lib_ebzz_ebzz_server_a-miner.o: miner/miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT miner/lib_ebzz_ebzz_server_a-miner.o -MD -MP -MF miner/$(DEPDIR)/lib_ebzz_ebzz_server_a-miner.Tpo -c -o miner/lib_ebzz_ebzz_server_a-miner.o `test -f 'miner/miner.cpp' || echo '$(srcdir)/'`miner/miner.cpp
	$(AM_V_at)$(am__mv) miner/$(DEPDIR)/lib_ebzz_ebzz_server_a-miner.Tpo miner/$(DEPDIR)/lib_ebzz_ebzz_server_a-miner.Po
#	$(AM_V_CXX)source='miner/miner.cpp' object='miner/lib_ebzz_ebzz_server_a-miner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o miner/lib_ebzz_ebzz_server_a-miner.o `test -f 'miner/miner.cpp' || echo '$(srcdir)/'`miner/miner.cpp

miner/lib_ebzz_ebzz_server_a-miner.obj: miner/miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT miner/lib_ebzz_ebzz_server_a-miner.obj -MD -MP -MF miner/$(DEPDIR)/lib_ebzz_ebzz_server_a-miner.Tpo -c -o miner/lib_ebzz_ebzz_server_a-miner.obj `if test -f 'miner/miner.cpp'; then $(CYGPATH_W) 'miner/miner.cpp'; else $(CYGPATH_W) '$(srcdir)/miner/miner.cpp'; fi`
	$(AM_V_at)$(am__mv) miner/$(DEPDIR)/lib_ebzz_ebzz_server_a-miner.Tpo miner/$(DEPDIR)/lib_ebzz_ebzz_server_a-miner.Po
#	$(AM_V_CXX)source='miner/miner.cpp' object='miner/lib_ebzz_ebzz_server_a-miner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o miner/lib_ebzz_ebzz_server_a-miner.obj `if test -f 'miner/miner.cpp'; then $(CYGPATH_W) 'miner/miner.cpp'; else $(CYGPATH_W) '$(srcdir)/miner/miner.cpp'; fi`

net/lib_ebzz_ebzz_server_a-net.o: net/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT net/lib_ebzz_ebzz_server_a-net.o -MD -MP -MF net/$(DEPDIR)/lib_ebzz_ebzz_server_a-net.Tpo -c -o net/lib_ebzz_ebzz_server_a-net.o `test -f 'net/net.cpp' || echo '$(srcdir)/'`net/net.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/lib_ebzz_ebzz_server_a-net.Tpo net/$(DEPDIR)/lib_ebzz_ebzz_server_a-net.Po
#	$(AM_V_CXX)source='net/net.cpp' object='net/lib_ebzz_ebzz_server_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net/lib_ebzz_ebzz_server_a-net.o `test -f 'net/net.cpp' || echo '$(srcdir)/'`net/net.cpp

net/lib_ebzz_ebzz_server_a-net.obj: net/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT net/lib_ebzz_ebzz_server_a-net.obj -MD -MP -MF net/$(DEPDIR)/lib_ebzz_ebzz_server_a-net.Tpo -c -o net/lib_ebzz_ebzz_server_a-net.obj `if test -f 'net/net.cpp'; then $(CYGPATH_W) 'net/net.cpp'; else $(CYGPATH_W) '$(srcdir)/net/net.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/lib_ebzz_ebzz_server_a-net.Tpo net/$(DEPDIR)/lib_ebzz_ebzz_server_a-net.Po
#	$(AM_V_CXX)source='net/net.cpp' object='net/lib_ebzz_ebzz_server_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net/lib_ebzz_ebzz_server_a-net.obj `if test -f 'net/net.cpp'; then $(CYGPATH_W) 'net/net.cpp'; else $(CYGPATH_W) '$(srcdir)/net/net.cpp'; fi`

ui/lib_ebzz_ebzz_server_a-noui.o: ui/noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui/lib_ebzz_ebzz_server_a-noui.o -MD -MP -MF ui/$(DEPDIR)/lib_ebzz_ebzz_server_a-noui.Tpo -c -o ui/lib_ebzz_ebzz_server_a-noui.o `test -f 'ui/noui.cpp' || echo '$(srcdir)/'`ui/noui.cpp
	$(AM_V_at)$(am__mv) ui/$(DEPDIR)/lib_ebzz_ebzz_server_a-noui.Tpo ui/$(DEPDIR)/lib_ebzz_ebzz_server_a-noui.Po
#	$(AM_V_CXX)source='ui/noui.cpp' object='ui/lib_ebzz_ebzz_server_a-noui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui/lib_ebzz_ebzz_server_a-noui.o `test -f 'ui/noui.cpp' || echo '$(srcdir)/'`ui/noui.cpp

ui/lib_ebzz_ebzz_server_a-noui.obj: ui/noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui/lib_ebzz_ebzz_server_a-noui.obj -MD -MP -MF ui/$(DEPDIR)/lib_ebzz_ebzz_server_a-noui.Tpo -c -o ui/lib_ebzz_ebzz_server_a-noui.obj `if test -f 'ui/noui.cpp'; then $(CYGPATH_W) 'ui/noui.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/noui.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/$(DEPDIR)/lib_ebzz_ebzz_server_a-noui.Tpo ui/$(DEPDIR)/lib_ebzz_ebzz_server_a-noui.Po
#	$(AM_V_CXX)source='ui/noui.cpp' object='ui/lib_ebzz_ebzz_server_a-noui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui/lib_ebzz_ebzz_server_a-noui.obj `if test -f 'ui/noui.cpp'; then $(CYGPATH_W) 'ui/noui.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/noui.cpp'; fi`

chain/lib_ebzz_ebzz_server_a-pow.o: chain/pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chain/lib_ebzz_ebzz_server_a-pow.o -MD -MP -MF chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-pow.Tpo -c -o chain/lib_ebzz_ebzz_server_a-pow.o `test -f 'chain/pow.cpp' || echo '$(srcdir)/'`chain/pow.cpp
	$(AM_V_at)$(am__mv) chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-pow.Tpo chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-pow.Po
#	$(AM_V_CXX)source='chain/pow.cpp' object='chain/lib_ebzz_ebzz_server_a-pow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chain/lib_ebzz_ebzz_server_a-pow.o `test -f 'chain/pow.cpp' || echo '$(srcdir)/'`chain/pow.cpp

chain/lib_ebzz_ebzz_server_a-pow.obj: chain/pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chain/lib_ebzz_ebzz_server_a-pow.obj -MD -MP -MF chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-pow.Tpo -c -o chain/lib_ebzz_ebzz_server_a-pow.obj `if test -f 'chain/pow.cpp'; then $(CYGPATH_W) 'chain/pow.cpp'; else $(CYGPATH_W) '$(srcdir)/chain/pow.cpp'; fi`
	$(AM_V_at)$(am__mv) chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-pow.Tpo chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-pow.Po
#	$(AM_V_CXX)source='chain/pow.cpp' object='chain/lib_ebzz_ebzz_server_a-pow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chain/lib_ebzz_ebzz_server_a-pow.obj `if test -f 'chain/pow.cpp'; then $(CYGPATH_W) 'chain/pow.cpp'; else $(CYGPATH_W) '$(srcdir)/chain/pow.cpp'; fi`

net/lib_ebzz_ebzz_server_a-rest.o: net/rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT net/lib_ebzz_ebzz_server_a-rest.o -MD -MP -MF net/$(DEPDIR)/lib_ebzz_ebzz_server_a-rest.Tpo -c -o net/lib_ebzz_ebzz_server_a-rest.o `test -f 'net/rest.cpp' || echo '$(srcdir)/'`net/rest.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/lib_ebzz_ebzz_server_a-rest.Tpo net/$(DEPDIR)/lib_ebzz_ebzz_server_a-rest.Po
#	$(AM_V_CXX)source='net/rest.cpp' object='net/lib_ebzz_ebzz_server_a-rest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net/lib_ebzz_ebzz_server_a-rest.o `test -f 'net/rest.cpp' || echo '$(srcdir)/'`net/rest.cpp

net/lib_ebzz_ebzz_server_a-rest.obj: net/rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT net/lib_ebzz_ebzz_server_a-rest.obj -MD -MP -MF net/$(DEPDIR)/lib_ebzz_ebzz_server_a-rest.Tpo -c -o net/lib_ebzz_ebzz_server_a-rest.obj `if test -f 'net/rest.cpp'; then $(CYGPATH_W) 'net/rest.cpp'; else $(CYGPATH_W) '$(srcdir)/net/rest.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/lib_ebzz_ebzz_server_a-rest.Tpo net/$(DEPDIR)/lib_ebzz_ebzz_server_a-rest.Po
#	$(AM_V_CXX)source='net/rest.cpp' object='net/lib_ebzz_ebzz_server_a-rest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net/lib_ebzz_ebzz_server_a-rest.obj `if test -f 'net/rest.cpp'; then $(CYGPATH_W) 'net/rest.cpp'; else $(CYGPATH_W) '$(srcdir)/net/rest.cpp'; fi`

utils/lib_ebzz_ebzz_server_a-utilparse.o: utils/utilparse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_server_a-utilparse.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-utilparse.Tpo -c -o utils/lib_ebzz_ebzz_server_a-utilparse.o `test -f 'utils/utilparse.cpp' || echo '$(srcdir)/'`utils/utilparse.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-utilparse.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-utilparse.Po
#	$(AM_V_CXX)source='utils/utilparse.cpp' object='utils/lib_ebzz_ebzz_server_a-utilparse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_server_a-utilparse.o `test -f 'utils/utilparse.cpp' || echo '$(srcdir)/'`utils/utilparse.cpp

utils/lib_ebzz_ebzz_server_a-utilparse.obj: utils/utilparse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_server_a-utilparse.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-utilparse.Tpo -c -o utils/lib_ebzz_ebzz_server_a-utilparse.obj `if test -f 'utils/utilparse.cpp'; then $(CYGPATH_W) 'utils/utilparse.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utilparse.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-utilparse.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-utilparse.Po
#	$(AM_V_CXX)source='utils/utilparse.cpp' object='utils/lib_ebzz_ebzz_server_a-utilparse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_server_a-utilparse.obj `if test -f 'utils/utilparse.cpp'; then $(CYGPATH_W) 'utils/utilparse.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utilparse.cpp'; fi`

json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.o: json/json_spirit_ubjson.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.o -MD -MP -MF json/$(DEPDIR)/lib_ebzz_ebzz_server_a-json_spirit_ubjson.Tpo -c -o json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.o `test -f 'json/json_spirit_ubjson.cpp' || echo '$(srcdir)/'`json/json_spirit_ubjson.cpp
	$(AM_V_at)$(am__mv) json/$(DEPDIR)/lib_ebzz_ebzz_server_a-json_spirit_ubjson.Tpo json/$(DEPDIR)/lib_ebzz_ebzz_server_a-json_spirit_ubjson.Po
#	$(AM_V_CXX)source='json/json_spirit_ubjson.cpp' object='json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.o `test -f 'json/json_spirit_ubjson.cpp' || echo '$(srcdir)/'`json/json_spirit_ubjson.cpp

json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.obj: json/json_spirit_ubjson.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.obj -MD -MP -MF json/$(DEPDIR)/lib_ebzz_ebzz_server_a-json_spirit_ubjson.Tpo -c -o json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.obj `if test -f 'json/json_spirit_ubjson.cpp'; then $(CYGPATH_W) 'json/json_spirit_ubjson.cpp'; else $(CYGPATH_W) '$(srcdir)/json/json_spirit_ubjson.cpp'; fi`
	$(AM_V_at)$(am__mv) json/$(DEPDIR)/lib_ebzz_ebzz_server_a-json_spirit_ubjson.Tpo json/$(DEPDIR)/lib_ebzz_ebzz_server_a-json_spirit_ubjson.Po
#	$(AM_V_CXX)source='json/json_spirit_ubjson.cpp' object='json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o json/lib_ebzz_ebzz_server_a-json_spirit_ubjson.obj `if test -f 'json/json_spirit_ubjson.cpp'; then $(CYGPATH_W) 'json/json_spirit_ubjson.cpp'; else $(CYGPATH_W) '$(srcdir)/json/json_spirit_ubjson.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcrawdata.o: rpc/rpcrawdata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcrawdata.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawdata.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcrawdata.o `test -f 'rpc/rpcrawdata.cpp' || echo '$(srcdir)/'`rpc/rpcrawdata.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawdata.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawdata.Po
#	$(AM_V_CXX)source='rpc/rpcrawdata.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcrawdata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcrawdata.o `test -f 'rpc/rpcrawdata.cpp' || echo '$(srcdir)/'`rpc/rpcrawdata.cpp

rpc/lib_ebzz_ebzz_server_a-rpcrawdata.obj: rpc/rpcrawdata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcrawdata.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawdata.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcrawdata.obj `if test -f 'rpc/rpcrawdata.cpp'; then $(CYGPATH_W) 'rpc/rpcrawdata.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcrawdata.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawdata.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawdata.Po
#	$(AM_V_CXX)source='rpc/rpcrawdata.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcrawdata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcrawdata.obj `if test -f 'rpc/rpcrawdata.cpp'; then $(CYGPATH_W) 'rpc/rpcrawdata.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcrawdata.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcutils.o: rpc/rpcutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcutils.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcutils.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcutils.o `test -f 'rpc/rpcutils.cpp' || echo '$(srcdir)/'`rpc/rpcutils.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcutils.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcutils.Po
#	$(AM_V_CXX)source='rpc/rpcutils.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcutils.o `test -f 'rpc/rpcutils.cpp' || echo '$(srcdir)/'`rpc/rpcutils.cpp

rpc/lib_ebzz_ebzz_server_a-rpcutils.obj: rpc/rpcutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcutils.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcutils.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcutils.obj `if test -f 'rpc/rpcutils.cpp'; then $(CYGPATH_W) 'rpc/rpcutils.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcutils.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcutils.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcutils.Po
#	$(AM_V_CXX)source='rpc/rpcutils.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcutils.obj `if test -f 'rpc/rpcutils.cpp'; then $(CYGPATH_W) 'rpc/rpcutils.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcutils.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpccache.o: rpc/rpccache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpccache.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpccache.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpccache.o `test -f 'rpc/rpccache.cpp' || echo '$(srcdir)/'`rpc/rpccache.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpccache.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpccache.Po
#	$(AM_V_CXX)source='rpc/rpccache.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpccache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpccache.o `test -f 'rpc/rpccache.cpp' || echo '$(srcdir)/'`rpc/rpccache.cpp

rpc/lib_ebzz_ebzz_server_a-rpccache.obj: rpc/rpccache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpccache.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpccache.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpccache.obj `if test -f 'rpc/rpccache.cpp'; then $(CYGPATH_W) 'rpc/rpccache.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpccache.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpccache.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpccache.Po
#	$(AM_V_CXX)source='rpc/rpccache.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpccache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpccache.obj `if test -f 'rpc/rpccache.cpp'; then $(CYGPATH_W) 'rpc/rpccache.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpccache.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcchunks.o: rpc/rpcchunks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcchunks.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcchunks.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcchunks.o `test -f 'rpc/rpcchunks.cpp' || echo '$(srcdir)/'`rpc/rpcchunks.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcchunks.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcchunks.Po
#	$(AM_V_CXX)source='rpc/rpcchunks.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcchunks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcchunks.o `test -f 'rpc/rpcchunks.cpp' || echo '$(srcdir)/'`rpc/rpcchunks.cpp

rpc/lib_ebzz_ebzz_server_a-rpcchunks.obj: rpc/rpcchunks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcchunks.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcchunks.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcchunks.obj `if test -f 'rpc/rpcchunks.cpp'; then $(CYGPATH_W) 'rpc/rpcchunks.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcchunks.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcchunks.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcchunks.Po
#	$(AM_V_CXX)source='rpc/rpcchunks.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcchunks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcchunks.obj `if test -f 'rpc/rpcchunks.cpp'; then $(CYGPATH_W) 'rpc/rpcchunks.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcchunks.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcdebug.o: rpc/rpcdebug.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcdebug.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcdebug.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcdebug.o `test -f 'rpc/rpcdebug.cpp' || echo '$(srcdir)/'`rpc/rpcdebug.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcdebug.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcdebug.Po
#	$(AM_V_CXX)source='rpc/rpcdebug.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcdebug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcdebug.o `test -f 'rpc/rpcdebug.cpp' || echo '$(srcdir)/'`rpc/rpcdebug.cpp

rpc/lib_ebzz_ebzz_server_a-rpcdebug.obj: rpc/rpcdebug.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcdebug.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcdebug.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcdebug.obj `if test -f 'rpc/rpcdebug.cpp'; then $(CYGPATH_W) 'rpc/rpcdebug.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcdebug.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcdebug.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcdebug.Po
#	$(AM_V_CXX)source='rpc/rpcdebug.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcdebug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcdebug.obj `if test -f 'rpc/rpcdebug.cpp'; then $(CYGPATH_W) 'rpc/rpcdebug.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcdebug.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpchelp.o: rpc/rpchelp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpchelp.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpchelp.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpchelp.o `test -f 'rpc/rpchelp.cpp' || echo '$(srcdir)/'`rpc/rpchelp.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpchelp.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpchelp.Po
#	$(AM_V_CXX)source='rpc/rpchelp.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpchelp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpchelp.o `test -f 'rpc/rpchelp.cpp' || echo '$(srcdir)/'`rpc/rpchelp.cpp

rpc/lib_ebzz_ebzz_server_a-rpchelp.obj: rpc/rpchelp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpchelp.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpchelp.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpchelp.obj `if test -f 'rpc/rpchelp.cpp'; then $(CYGPATH_W) 'rpc/rpchelp.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpchelp.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpchelp.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpchelp.Po
#	$(AM_V_CXX)source='rpc/rpchelp.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpchelp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpchelp.obj `if test -f 'rpc/rpchelp.cpp'; then $(CYGPATH_W) 'rpc/rpchelp.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpchelp.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcblockchain.o: rpc/rpcblockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcblockchain.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcblockchain.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcblockchain.o `test -f 'rpc/rpcblockchain.cpp' || echo '$(srcdir)/'`rpc/rpcblockchain.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcblockchain.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcblockchain.Po
#	$(AM_V_CXX)source='rpc/rpcblockchain.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcblockchain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcblockchain.o `test -f 'rpc/rpcblockchain.cpp' || echo '$(srcdir)/'`rpc/rpcblockchain.cpp

rpc/lib_ebzz_ebzz_server_a-rpcblockchain.obj: rpc/rpcblockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcblockchain.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcblockchain.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcblockchain.obj `if test -f 'rpc/rpcblockchain.cpp'; then $(CYGPATH_W) 'rpc/rpcblockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcblockchain.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcblockchain.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcblockchain.Po
#	$(AM_V_CXX)source='rpc/rpcblockchain.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcblockchain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcblockchain.obj `if test -f 'rpc/rpcblockchain.cpp'; then $(CYGPATH_W) 'rpc/rpcblockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcblockchain.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcmining.o: rpc/rpcmining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcmining.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmining.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcmining.o `test -f 'rpc/rpcmining.cpp' || echo '$(srcdir)/'`rpc/rpcmining.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmining.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmining.Po
#	$(AM_V_CXX)source='rpc/rpcmining.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcmining.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcmining.o `test -f 'rpc/rpcmining.cpp' || echo '$(srcdir)/'`rpc/rpcmining.cpp

rpc/lib_ebzz_ebzz_server_a-rpcmining.obj: rpc/rpcmining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcmining.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmining.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcmining.obj `if test -f 'rpc/rpcmining.cpp'; then $(CYGPATH_W) 'rpc/rpcmining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcmining.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmining.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmining.Po
#	$(AM_V_CXX)source='rpc/rpcmining.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcmining.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcmining.obj `if test -f 'rpc/rpcmining.cpp'; then $(CYGPATH_W) 'rpc/rpcmining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcmining.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcmisc.o: rpc/rpcmisc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcmisc.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmisc.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcmisc.o `test -f 'rpc/rpcmisc.cpp' || echo '$(srcdir)/'`rpc/rpcmisc.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmisc.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmisc.Po
#	$(AM_V_CXX)source='rpc/rpcmisc.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcmisc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcmisc.o `test -f 'rpc/rpcmisc.cpp' || echo '$(srcdir)/'`rpc/rpcmisc.cpp

rpc/lib_ebzz_ebzz_server_a-rpcmisc.obj: rpc/rpcmisc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcmisc.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmisc.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcmisc.obj `if test -f 'rpc/rpcmisc.cpp'; then $(CYGPATH_W) 'rpc/rpcmisc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcmisc.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmisc.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcmisc.Po
#	$(AM_V_CXX)source='rpc/rpcmisc.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcmisc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcmisc.obj `if test -f 'rpc/rpcmisc.cpp'; then $(CYGPATH_W) 'rpc/rpcmisc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcmisc.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcnet.o: rpc/rpcnet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcnet.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcnet.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcnet.o `test -f 'rpc/rpcnet.cpp' || echo '$(srcdir)/'`rpc/rpcnet.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcnet.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcnet.Po
#	$(AM_V_CXX)source='rpc/rpcnet.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcnet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcnet.o `test -f 'rpc/rpcnet.cpp' || echo '$(srcdir)/'`rpc/rpcnet.cpp

rpc/lib_ebzz_ebzz_server_a-rpcnet.obj: rpc/rpcnet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcnet.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcnet.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcnet.obj `if test -f 'rpc/rpcnet.cpp'; then $(CYGPATH_W) 'rpc/rpcnet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcnet.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcnet.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcnet.Po
#	$(AM_V_CXX)source='rpc/rpcnet.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcnet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcnet.obj `if test -f 'rpc/rpcnet.cpp'; then $(CYGPATH_W) 'rpc/rpcnet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcnet.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.o: rpc/rpcrawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawtransaction.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.o `test -f 'rpc/rpcrawtransaction.cpp' || echo '$(srcdir)/'`rpc/rpcrawtransaction.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawtransaction.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawtransaction.Po
#	$(AM_V_CXX)source='rpc/rpcrawtransaction.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.o `test -f 'rpc/rpcrawtransaction.cpp' || echo '$(srcdir)/'`rpc/rpcrawtransaction.cpp

rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.obj: rpc/rpcrawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawtransaction.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.obj `if test -f 'rpc/rpcrawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rpcrawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcrawtransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawtransaction.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcrawtransaction.Po
#	$(AM_V_CXX)source='rpc/rpcrawtransaction.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcrawtransaction.obj `if test -f 'rpc/rpcrawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rpcrawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcrawtransaction.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcfeeds.o: rpc/rpcfeeds.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcfeeds.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcfeeds.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcfeeds.o `test -f 'rpc/rpcfeeds.cpp' || echo '$(srcdir)/'`rpc/rpcfeeds.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcfeeds.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcfeeds.Po
#	$(AM_V_CXX)source='rpc/rpcfeeds.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcfeeds.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcfeeds.o `test -f 'rpc/rpcfeeds.cpp' || echo '$(srcdir)/'`rpc/rpcfeeds.cpp

rpc/lib_ebzz_ebzz_server_a-rpcfeeds.obj: rpc/rpcfeeds.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcfeeds.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcfeeds.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcfeeds.obj `if test -f 'rpc/rpcfeeds.cpp'; then $(CYGPATH_W) 'rpc/rpcfeeds.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcfeeds.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcfeeds.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcfeeds.Po
#	$(AM_V_CXX)source='rpc/rpcfeeds.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcfeeds.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcfeeds.obj `if test -f 'rpc/rpcfeeds.cpp'; then $(CYGPATH_W) 'rpc/rpcfeeds.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcfeeds.cpp'; fi`

rpc/lib_ebzz_ebzz_server_a-rpcserver.o: rpc/rpcserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcserver.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcserver.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcserver.o `test -f 'rpc/rpcserver.cpp' || echo '$(srcdir)/'`rpc/rpcserver.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcserver.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcserver.Po
#	$(AM_V_CXX)source='rpc/rpcserver.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcserver.o `test -f 'rpc/rpcserver.cpp' || echo '$(srcdir)/'`rpc/rpcserver.cpp

rpc/lib_ebzz_ebzz_server_a-rpcserver.obj: rpc/rpcserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_server_a-rpcserver.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcserver.Tpo -c -o rpc/lib_ebzz_ebzz_server_a-rpcserver.obj `if test -f 'rpc/rpcserver.cpp'; then $(CYGPATH_W) 'rpc/rpcserver.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcserver.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcserver.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_server_a-rpcserver.Po
#	$(AM_V_CXX)source='rpc/rpcserver.cpp' object='rpc/lib_ebzz_ebzz_server_a-rpcserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_server_a-rpcserver.obj `if test -f 'rpc/rpcserver.cpp'; then $(CYGPATH_W) 'rpc/rpcserver.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcserver.cpp'; fi`

script/lib_ebzz_ebzz_server_a-sigcache.o: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_server_a-sigcache.o -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_server_a-sigcache.Tpo -c -o script/lib_ebzz_ebzz_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_server_a-sigcache.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_server_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/lib_ebzz_ebzz_server_a-sigcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp

script/lib_ebzz_ebzz_server_a-sigcache.obj: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzz_server_a-sigcache.obj -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzz_server_a-sigcache.Tpo -c -o script/lib_ebzz_ebzz_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzz_server_a-sigcache.Tpo script/$(DEPDIR)/lib_ebzz_ebzz_server_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/lib_ebzz_ebzz_server_a-sigcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzz_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`

utils/lib_ebzz_ebzz_server_a-timedata.o: utils/timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_server_a-timedata.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-timedata.Tpo -c -o utils/lib_ebzz_ebzz_server_a-timedata.o `test -f 'utils/timedata.cpp' || echo '$(srcdir)/'`utils/timedata.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-timedata.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-timedata.Po
#	$(AM_V_CXX)source='utils/timedata.cpp' object='utils/lib_ebzz_ebzz_server_a-timedata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_server_a-timedata.o `test -f 'utils/timedata.cpp' || echo '$(srcdir)/'`utils/timedata.cpp

utils/lib_ebzz_ebzz_server_a-timedata.obj: utils/timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_server_a-timedata.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-timedata.Tpo -c -o utils/lib_ebzz_ebzz_server_a-timedata.obj `if test -f 'utils/timedata.cpp'; then $(CYGPATH_W) 'utils/timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/timedata.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-timedata.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_server_a-timedata.Po
#	$(AM_V_CXX)source='utils/timedata.cpp' object='utils/lib_ebzz_ebzz_server_a-timedata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_server_a-timedata.obj `if test -f 'utils/timedata.cpp'; then $(CYGPATH_W) 'utils/timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/timedata.cpp'; fi`

storage/lib_ebzz_ebzz_server_a-txdb.o: storage/txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT storage/lib_ebzz_ebzz_server_a-txdb.o -MD -MP -MF storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-txdb.Tpo -c -o storage/lib_ebzz_ebzz_server_a-txdb.o `test -f 'storage/txdb.cpp' || echo '$(srcdir)/'`storage/txdb.cpp
	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-txdb.Tpo storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-txdb.Po
#	$(AM_V_CXX)source='storage/txdb.cpp' object='storage/lib_ebzz_ebzz_server_a-txdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o storage/lib_ebzz_ebzz_server_a-txdb.o `test -f 'storage/txdb.cpp' || echo '$(srcdir)/'`storage/txdb.cpp

storage/lib_ebzz_ebzz_server_a-txdb.obj: storage/txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT storage/lib_ebzz_ebzz_server_a-txdb.obj -MD -MP -MF storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-txdb.Tpo -c -o storage/lib_ebzz_ebzz_server_a-txdb.obj `if test -f 'storage/txdb.cpp'; then $(CYGPATH_W) 'storage/txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/storage/txdb.cpp'; fi`
	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-txdb.Tpo storage/$(DEPDIR)/lib_ebzz_ebzz_server_a-txdb.Po
#	$(AM_V_CXX)source='storage/txdb.cpp' object='storage/lib_ebzz_ebzz_server_a-txdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o storage/lib_ebzz_ebzz_server_a-txdb.obj `if test -f 'storage/txdb.cpp'; then $(CYGPATH_W) 'storage/txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/storage/txdb.cpp'; fi`

chain/lib_ebzz_ebzz_server_a-txmempool.o: chain/txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chain/lib_ebzz_ebzz_server_a-txmempool.o -MD -MP -MF chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-txmempool.Tpo -c -o chain/lib_ebzz_ebzz_server_a-txmempool.o `test -f 'chain/txmempool.cpp' || echo '$(srcdir)/'`chain/txmempool.cpp
	$(AM_V_at)$(am__mv) chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-txmempool.Tpo chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-txmempool.Po
#	$(AM_V_CXX)source='chain/txmempool.cpp' object='chain/lib_ebzz_ebzz_server_a-txmempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chain/lib_ebzz_ebzz_server_a-txmempool.o `test -f 'chain/txmempool.cpp' || echo '$(srcdir)/'`chain/txmempool.cpp

chain/lib_ebzz_ebzz_server_a-txmempool.obj: chain/txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chain/lib_ebzz_ebzz_server_a-txmempool.obj -MD -MP -MF chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-txmempool.Tpo -c -o chain/lib_ebzz_ebzz_server_a-txmempool.obj `if test -f 'chain/txmempool.cpp'; then $(CYGPATH_W) 'chain/txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/chain/txmempool.cpp'; fi`
	$(AM_V_at)$(am__mv) chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-txmempool.Tpo chain/$(DEPDIR)/lib_ebzz_ebzz_server_a-txmempool.Po
#	$(AM_V_CXX)source='chain/txmempool.cpp' object='chain/lib_ebzz_ebzz_server_a-txmempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chain/lib_ebzz_ebzz_server_a-txmempool.obj `if test -f 'chain/txmempool.cpp'; then $(CYGPATH_W) 'chain/txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/chain/txmempool.cpp'; fi`

compat/lib_ebzz_ebzz_util_a-strnlen.o: compat/strnlen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzz_util_a-strnlen.o -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-strnlen.Tpo -c -o compat/lib_ebzz_ebzz_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-strnlen.Tpo compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-strnlen.Po
#	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/lib_ebzz_ebzz_util_a-strnlen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzz_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp

compat/lib_ebzz_ebzz_util_a-strnlen.obj: compat/strnlen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzz_util_a-strnlen.obj -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-strnlen.Tpo -c -o compat/lib_ebzz_ebzz_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-strnlen.Tpo compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-strnlen.Po
#	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/lib_ebzz_ebzz_util_a-strnlen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzz_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`

compat/lib_ebzz_ebzz_util_a-glibc_sanity.o: compat/glibc_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzz_util_a-glibc_sanity.o -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_sanity.Tpo -c -o compat/lib_ebzz_ebzz_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_sanity.Po
#	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/lib_ebzz_ebzz_util_a-glibc_sanity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzz_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp

compat/lib_ebzz_ebzz_util_a-glibc_sanity.obj: compat/glibc_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzz_util_a-glibc_sanity.obj -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_sanity.Tpo -c -o compat/lib_ebzz_ebzz_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_sanity.Po
#	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/lib_ebzz_ebzz_util_a-glibc_sanity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzz_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`

compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.o: compat/glibcxx_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.o -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_sanity.Tpo -c -o compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_sanity.Po
#	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp

compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.obj: compat/glibcxx_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.obj -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_sanity.Tpo -c -o compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_sanity.Po
#	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzz_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`

chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.o: chainparams/chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.o -MD -MP -MF chainparams/$(DEPDIR)/lib_ebzz_ebzz_util_a-chainparamsbase.Tpo -c -o chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.o `test -f 'chainparams/chainparamsbase.cpp' || echo '$(srcdir)/'`chainparams/chainparamsbase.cpp
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/lib_ebzz_ebzz_util_a-chainparamsbase.Tpo chainparams/$(DEPDIR)/lib_ebzz_ebzz_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparams/chainparamsbase.cpp' object='chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.o `test -f 'chainparams/chainparamsbase.cpp' || echo '$(srcdir)/'`chainparams/chainparamsbase.cpp

chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.obj: chainparams/chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.obj -MD -MP -MF chainparams/$(DEPDIR)/lib_ebzz_ebzz_util_a-chainparamsbase.Tpo -c -o chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.obj `if test -f 'chainparams/chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparams/chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/chainparamsbase.cpp'; fi`
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/lib_ebzz_ebzz_util_a-chainparamsbase.Tpo chainparams/$(DEPDIR)/lib_ebzz_ebzz_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparams/chainparamsbase.cpp' object='chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/lib_ebzz_ebzz_util_a-chainparamsbase.obj `if test -f 'chainparams/chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparams/chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/chainparamsbase.cpp'; fi`

version/lib_ebzz_ebzz_util_a-clientversion.o: version/clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT version/lib_ebzz_ebzz_util_a-clientversion.o -MD -MP -MF version/$(DEPDIR)/lib_ebzz_ebzz_util_a-clientversion.Tpo -c -o version/lib_ebzz_ebzz_util_a-clientversion.o `test -f 'version/clientversion.cpp' || echo '$(srcdir)/'`version/clientversion.cpp
	$(AM_V_at)$(am__mv) version/$(DEPDIR)/lib_ebzz_ebzz_util_a-clientversion.Tpo version/$(DEPDIR)/lib_ebzz_ebzz_util_a-clientversion.Po
#	$(AM_V_CXX)source='version/clientversion.cpp' object='version/lib_ebzz_ebzz_util_a-clientversion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o version/lib_ebzz_ebzz_util_a-clientversion.o `test -f 'version/clientversion.cpp' || echo '$(srcdir)/'`version/clientversion.cpp

version/lib_ebzz_ebzz_util_a-clientversion.obj: version/clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT version/lib_ebzz_ebzz_util_a-clientversion.obj -MD -MP -MF version/$(DEPDIR)/lib_ebzz_ebzz_util_a-clientversion.Tpo -c -o version/lib_ebzz_ebzz_util_a-clientversion.obj `if test -f 'version/clientversion.cpp'; then $(CYGPATH_W) 'version/clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/version/clientversion.cpp'; fi`
	$(AM_V_at)$(am__mv) version/$(DEPDIR)/lib_ebzz_ebzz_util_a-clientversion.Tpo version/$(DEPDIR)/lib_ebzz_ebzz_util_a-clientversion.Po
#	$(AM_V_CXX)source='version/clientversion.cpp' object='version/lib_ebzz_ebzz_util_a-clientversion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o version/lib_ebzz_ebzz_util_a-clientversion.obj `if test -f 'version/clientversion.cpp'; then $(CYGPATH_W) 'version/clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/version/clientversion.cpp'; fi`

utils/lib_ebzz_ebzz_util_a-random.o: utils/random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-random.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-random.Tpo -c -o utils/lib_ebzz_ebzz_util_a-random.o `test -f 'utils/random.cpp' || echo '$(srcdir)/'`utils/random.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-random.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-random.Po
#	$(AM_V_CXX)source='utils/random.cpp' object='utils/lib_ebzz_ebzz_util_a-random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-random.o `test -f 'utils/random.cpp' || echo '$(srcdir)/'`utils/random.cpp

utils/lib_ebzz_ebzz_util_a-random.obj: utils/random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-random.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-random.Tpo -c -o utils/lib_ebzz_ebzz_util_a-random.obj `if test -f 'utils/random.cpp'; then $(CYGPATH_W) 'utils/random.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/random.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-random.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-random.Po
#	$(AM_V_CXX)source='utils/random.cpp' object='utils/lib_ebzz_ebzz_util_a-random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-random.obj `if test -f 'utils/random.cpp'; then $(CYGPATH_W) 'utils/random.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/random.cpp'; fi`

rpc/lib_ebzz_ebzz_util_a-rpcprotocol.o: rpc/rpcprotocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_util_a-rpcprotocol.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_util_a-rpcprotocol.Tpo -c -o rpc/lib_ebzz_ebzz_util_a-rpcprotocol.o `test -f 'rpc/rpcprotocol.cpp' || echo '$(srcdir)/'`rpc/rpcprotocol.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_util_a-rpcprotocol.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_util_a-rpcprotocol.Po
#	$(AM_V_CXX)source='rpc/rpcprotocol.cpp' object='rpc/lib_ebzz_ebzz_util_a-rpcprotocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_util_a-rpcprotocol.o `test -f 'rpc/rpcprotocol.cpp' || echo '$(srcdir)/'`rpc/rpcprotocol.cpp

rpc/lib_ebzz_ebzz_util_a-rpcprotocol.obj: rpc/rpcprotocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_util_a-rpcprotocol.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_util_a-rpcprotocol.Tpo -c -o rpc/lib_ebzz_ebzz_util_a-rpcprotocol.obj `if test -f 'rpc/rpcprotocol.cpp'; then $(CYGPATH_W) 'rpc/rpcprotocol.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcprotocol.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_util_a-rpcprotocol.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_util_a-rpcprotocol.Po
#	$(AM_V_CXX)source='rpc/rpcprotocol.cpp' object='rpc/lib_ebzz_ebzz_util_a-rpcprotocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_util_a-rpcprotocol.obj `if test -f 'rpc/rpcprotocol.cpp'; then $(CYGPATH_W) 'rpc/rpcprotocol.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcprotocol.cpp'; fi`

utils/lib_ebzz_ebzz_util_a-sync.o: utils/sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-sync.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-sync.Tpo -c -o utils/lib_ebzz_ebzz_util_a-sync.o `test -f 'utils/sync.cpp' || echo '$(srcdir)/'`utils/sync.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-sync.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-sync.Po
#	$(AM_V_CXX)source='utils/sync.cpp' object='utils/lib_ebzz_ebzz_util_a-sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-sync.o `test -f 'utils/sync.cpp' || echo '$(srcdir)/'`utils/sync.cpp

utils/lib_ebzz_ebzz_util_a-sync.obj: utils/sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-sync.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-sync.Tpo -c -o utils/lib_ebzz_ebzz_util_a-sync.obj `if test -f 'utils/sync.cpp'; then $(CYGPATH_W) 'utils/sync.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/sync.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-sync.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-sync.Po
#	$(AM_V_CXX)source='utils/sync.cpp' object='utils/lib_ebzz_ebzz_util_a-sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-sync.obj `if test -f 'utils/sync.cpp'; then $(CYGPATH_W) 'utils/sync.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/sync.cpp'; fi`

structs/lib_ebzz_ebzz_util_a-uint256.o: structs/uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_util_a-uint256.o -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_util_a-uint256.Tpo -c -o structs/lib_ebzz_ebzz_util_a-uint256.o `test -f 'structs/uint256.cpp' || echo '$(srcdir)/'`structs/uint256.cpp
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_util_a-uint256.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_util_a-uint256.Po
#	$(AM_V_CXX)source='structs/uint256.cpp' object='structs/lib_ebzz_ebzz_util_a-uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_util_a-uint256.o `test -f 'structs/uint256.cpp' || echo '$(srcdir)/'`structs/uint256.cpp

structs/lib_ebzz_ebzz_util_a-uint256.obj: structs/uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzz_util_a-uint256.obj -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzz_util_a-uint256.Tpo -c -o structs/lib_ebzz_ebzz_util_a-uint256.obj `if test -f 'structs/uint256.cpp'; then $(CYGPATH_W) 'structs/uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzz_util_a-uint256.Tpo structs/$(DEPDIR)/lib_ebzz_ebzz_util_a-uint256.Po
#	$(AM_V_CXX)source='structs/uint256.cpp' object='structs/lib_ebzz_ebzz_util_a-uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzz_util_a-uint256.obj `if test -f 'structs/uint256.cpp'; then $(CYGPATH_W) 'structs/uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/structs/uint256.cpp'; fi`

utils/lib_ebzz_ebzz_util_a-util.o: utils/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-util.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-util.Tpo -c -o utils/lib_ebzz_ebzz_util_a-util.o `test -f 'utils/util.cpp' || echo '$(srcdir)/'`utils/util.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-util.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-util.Po
#	$(AM_V_CXX)source='utils/util.cpp' object='utils/lib_ebzz_ebzz_util_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-util.o `test -f 'utils/util.cpp' || echo '$(srcdir)/'`utils/util.cpp

utils/lib_ebzz_ebzz_util_a-util.obj: utils/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-util.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-util.Tpo -c -o utils/lib_ebzz_ebzz_util_a-util.obj `if test -f 'utils/util.cpp'; then $(CYGPATH_W) 'utils/util.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/util.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-util.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-util.Po
#	$(AM_V_CXX)source='utils/util.cpp' object='utils/lib_ebzz_ebzz_util_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-util.obj `if test -f 'utils/util.cpp'; then $(CYGPATH_W) 'utils/util.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/util.cpp'; fi`

utils/lib_ebzz_ebzz_util_a-utilstrencodings.o: utils/utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-utilstrencodings.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilstrencodings.Tpo -c -o utils/lib_ebzz_ebzz_util_a-utilstrencodings.o `test -f 'utils/utilstrencodings.cpp' || echo '$(srcdir)/'`utils/utilstrencodings.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilstrencodings.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utils/utilstrencodings.cpp' object='utils/lib_ebzz_ebzz_util_a-utilstrencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-utilstrencodings.o `test -f 'utils/utilstrencodings.cpp' || echo '$(srcdir)/'`utils/utilstrencodings.cpp

utils/lib_ebzz_ebzz_util_a-utilstrencodings.obj: utils/utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-utilstrencodings.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilstrencodings.Tpo -c -o utils/lib_ebzz_ebzz_util_a-utilstrencodings.obj `if test -f 'utils/utilstrencodings.cpp'; then $(CYGPATH_W) 'utils/utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utilstrencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilstrencodings.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utils/utilstrencodings.cpp' object='utils/lib_ebzz_ebzz_util_a-utilstrencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-utilstrencodings.obj `if test -f 'utils/utilstrencodings.cpp'; then $(CYGPATH_W) 'utils/utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utilstrencodings.cpp'; fi`

utils/lib_ebzz_ebzz_util_a-utilmoneystr.o: utils/utilmoneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-utilmoneystr.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilmoneystr.Tpo -c -o utils/lib_ebzz_ebzz_util_a-utilmoneystr.o `test -f 'utils/utilmoneystr.cpp' || echo '$(srcdir)/'`utils/utilmoneystr.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilmoneystr.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilmoneystr.Po
#	$(AM_V_CXX)source='utils/utilmoneystr.cpp' object='utils/lib_ebzz_ebzz_util_a-utilmoneystr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-utilmoneystr.o `test -f 'utils/utilmoneystr.cpp' || echo '$(srcdir)/'`utils/utilmoneystr.cpp

utils/lib_ebzz_ebzz_util_a-utilmoneystr.obj: utils/utilmoneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-utilmoneystr.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilmoneystr.Tpo -c -o utils/lib_ebzz_ebzz_util_a-utilmoneystr.obj `if test -f 'utils/utilmoneystr.cpp'; then $(CYGPATH_W) 'utils/utilmoneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utilmoneystr.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilmoneystr.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utilmoneystr.Po
#	$(AM_V_CXX)source='utils/utilmoneystr.cpp' object='utils/lib_ebzz_ebzz_util_a-utilmoneystr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-utilmoneystr.obj `if test -f 'utils/utilmoneystr.cpp'; then $(CYGPATH_W) 'utils/utilmoneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utilmoneystr.cpp'; fi`

utils/lib_ebzz_ebzz_util_a-utiltime.o: utils/utiltime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-utiltime.o -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utiltime.Tpo -c -o utils/lib_ebzz_ebzz_util_a-utiltime.o `test -f 'utils/utiltime.cpp' || echo '$(srcdir)/'`utils/utiltime.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utiltime.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utiltime.Po
#	$(AM_V_CXX)source='utils/utiltime.cpp' object='utils/lib_ebzz_ebzz_util_a-utiltime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-utiltime.o `test -f 'utils/utiltime.cpp' || echo '$(srcdir)/'`utils/utiltime.cpp

utils/lib_ebzz_ebzz_util_a-utiltime.obj: utils/utiltime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzz_util_a-utiltime.obj -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utiltime.Tpo -c -o utils/lib_ebzz_ebzz_util_a-utiltime.obj `if test -f 'utils/utiltime.cpp'; then $(CYGPATH_W) 'utils/utiltime.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utiltime.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utiltime.Tpo utils/$(DEPDIR)/lib_ebzz_ebzz_util_a-utiltime.Po
#	$(AM_V_CXX)source='utils/utiltime.cpp' object='utils/lib_ebzz_ebzz_util_a-utiltime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzz_util_a-utiltime.obj `if test -f 'utils/utiltime.cpp'; then $(CYGPATH_W) 'utils/utiltime.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utiltime.cpp'; fi`

compat/lib_ebzz_ebzz_util_a-glibc_compat.o: compat/glibc_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzz_util_a-glibc_compat.o -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_compat.Tpo -c -o compat/lib_ebzz_ebzz_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_compat.Tpo compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_compat.Po
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/lib_ebzz_ebzz_util_a-glibc_compat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzz_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

compat/lib_ebzz_ebzz_util_a-glibc_compat.obj: compat/glibc_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzz_util_a-glibc_compat.obj -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_compat.Tpo -c -o compat/lib_ebzz_ebzz_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_compat.Tpo compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibc_compat.Po
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/lib_ebzz_ebzz_util_a-glibc_compat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzz_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`

compat/lib_ebzz_ebzz_util_a-glibcxx_compat.o: compat/glibcxx_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzz_util_a-glibcxx_compat.o -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_compat.Tpo -c -o compat/lib_ebzz_ebzz_util_a-glibcxx_compat.o `test -f 'compat/glibcxx_compat.cpp' || echo '$(srcdir)/'`compat/glibcxx_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_compat.Tpo compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_compat.Po
#	$(AM_V_CXX)source='compat/glibcxx_compat.cpp' object='compat/lib_ebzz_ebzz_util_a-glibcxx_compat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzz_util_a-glibcxx_compat.o `test -f 'compat/glibcxx_compat.cpp' || echo '$(srcdir)/'`compat/glibcxx_compat.cpp

compat/lib_ebzz_ebzz_util_a-glibcxx_compat.obj: compat/glibcxx_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzz_util_a-glibcxx_compat.obj -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_compat.Tpo -c -o compat/lib_ebzz_ebzz_util_a-glibcxx_compat.obj `if test -f 'compat/glibcxx_compat.cpp'; then $(CYGPATH_W) 'compat/glibcxx_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_compat.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_compat.Tpo compat/$(DEPDIR)/lib_ebzz_ebzz_util_a-glibcxx_compat.Po
#	$(AM_V_CXX)source='compat/glibcxx_compat.cpp' object='compat/lib_ebzz_ebzz_util_a-glibcxx_compat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzz_util_a-glibcxx_compat.obj `if test -f 'compat/glibcxx_compat.cpp'; then $(CYGPATH_W) 'compat/glibcxx_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_compat.cpp'; fi`

v8/lib_ebzz_ebzz_v8_a-v8engine.o: v8/v8engine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT v8/lib_ebzz_ebzz_v8_a-v8engine.o -MD -MP -MF v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8engine.Tpo -c -o v8/lib_ebzz_ebzz_v8_a-v8engine.o `test -f 'v8/v8engine.cpp' || echo '$(srcdir)/'`v8/v8engine.cpp
	$(AM_V_at)$(am__mv) v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8engine.Tpo v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8engine.Po
#	$(AM_V_CXX)source='v8/v8engine.cpp' object='v8/lib_ebzz_ebzz_v8_a-v8engine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o v8/lib_ebzz_ebzz_v8_a-v8engine.o `test -f 'v8/v8engine.cpp' || echo '$(srcdir)/'`v8/v8engine.cpp

v8/lib_ebzz_ebzz_v8_a-v8engine.obj: v8/v8engine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT v8/lib_ebzz_ebzz_v8_a-v8engine.obj -MD -MP -MF v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8engine.Tpo -c -o v8/lib_ebzz_ebzz_v8_a-v8engine.obj `if test -f 'v8/v8engine.cpp'; then $(CYGPATH_W) 'v8/v8engine.cpp'; else $(CYGPATH_W) '$(srcdir)/v8/v8engine.cpp'; fi`
	$(AM_V_at)$(am__mv) v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8engine.Tpo v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8engine.Po
#	$(AM_V_CXX)source='v8/v8engine.cpp' object='v8/lib_ebzz_ebzz_v8_a-v8engine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o v8/lib_ebzz_ebzz_v8_a-v8engine.obj `if test -f 'v8/v8engine.cpp'; then $(CYGPATH_W) 'v8/v8engine.cpp'; else $(CYGPATH_W) '$(srcdir)/v8/v8engine.cpp'; fi`

v8/lib_ebzz_ebzz_v8_a-v8filter.o: v8/v8filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT v8/lib_ebzz_ebzz_v8_a-v8filter.o -MD -MP -MF v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8filter.Tpo -c -o v8/lib_ebzz_ebzz_v8_a-v8filter.o `test -f 'v8/v8filter.cpp' || echo '$(srcdir)/'`v8/v8filter.cpp
	$(AM_V_at)$(am__mv) v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8filter.Tpo v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8filter.Po
#	$(AM_V_CXX)source='v8/v8filter.cpp' object='v8/lib_ebzz_ebzz_v8_a-v8filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o v8/lib_ebzz_ebzz_v8_a-v8filter.o `test -f 'v8/v8filter.cpp' || echo '$(srcdir)/'`v8/v8filter.cpp

v8/lib_ebzz_ebzz_v8_a-v8filter.obj: v8/v8filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT v8/lib_ebzz_ebzz_v8_a-v8filter.obj -MD -MP -MF v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8filter.Tpo -c -o v8/lib_ebzz_ebzz_v8_a-v8filter.obj `if test -f 'v8/v8filter.cpp'; then $(CYGPATH_W) 'v8/v8filter.cpp'; else $(CYGPATH_W) '$(srcdir)/v8/v8filter.cpp'; fi`
	$(AM_V_at)$(am__mv) v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8filter.Tpo v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8filter.Po
#	$(AM_V_CXX)source='v8/v8filter.cpp' object='v8/lib_ebzz_ebzz_v8_a-v8filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o v8/lib_ebzz_ebzz_v8_a-v8filter.obj `if test -f 'v8/v8filter.cpp'; then $(CYGPATH_W) 'v8/v8filter.cpp'; else $(CYGPATH_W) '$(srcdir)/v8/v8filter.cpp'; fi`

v8/lib_ebzz_ebzz_v8_a-callbacks.o: v8/callbacks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT v8/lib_ebzz_ebzz_v8_a-callbacks.o -MD -MP -MF v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-callbacks.Tpo -c -o v8/lib_ebzz_ebzz_v8_a-callbacks.o `test -f 'v8/callbacks.cpp' || echo '$(srcdir)/'`v8/callbacks.cpp
	$(AM_V_at)$(am__mv) v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-callbacks.Tpo v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-callbacks.Po
#	$(AM_V_CXX)source='v8/callbacks.cpp' object='v8/lib_ebzz_ebzz_v8_a-callbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o v8/lib_ebzz_ebzz_v8_a-callbacks.o `test -f 'v8/callbacks.cpp' || echo '$(srcdir)/'`v8/callbacks.cpp

v8/lib_ebzz_ebzz_v8_a-callbacks.obj: v8/callbacks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT v8/lib_ebzz_ebzz_v8_a-callbacks.obj -MD -MP -MF v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-callbacks.Tpo -c -o v8/lib_ebzz_ebzz_v8_a-callbacks.obj `if test -f 'v8/callbacks.cpp'; then $(CYGPATH_W) 'v8/callbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/v8/callbacks.cpp'; fi`
	$(AM_V_at)$(am__mv) v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-callbacks.Tpo v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-callbacks.Po
#	$(AM_V_CXX)source='v8/callbacks.cpp' object='v8/lib_ebzz_ebzz_v8_a-callbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o v8/lib_ebzz_ebzz_v8_a-callbacks.obj `if test -f 'v8/callbacks.cpp'; then $(CYGPATH_W) 'v8/callbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/v8/callbacks.cpp'; fi`

v8/lib_ebzz_ebzz_v8_a-v8json_spirit.o: v8/v8json_spirit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT v8/lib_ebzz_ebzz_v8_a-v8json_spirit.o -MD -MP -MF v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8json_spirit.Tpo -c -o v8/lib_ebzz_ebzz_v8_a-v8json_spirit.o `test -f 'v8/v8json_spirit.cpp' || echo '$(srcdir)/'`v8/v8json_spirit.cpp
	$(AM_V_at)$(am__mv) v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8json_spirit.Tpo v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8json_spirit.Po
#	$(AM_V_CXX)source='v8/v8json_spirit.cpp' object='v8/lib_ebzz_ebzz_v8_a-v8json_spirit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o v8/lib_ebzz_ebzz_v8_a-v8json_spirit.o `test -f 'v8/v8json_spirit.cpp' || echo '$(srcdir)/'`v8/v8json_spirit.cpp

v8/lib_ebzz_ebzz_v8_a-v8json_spirit.obj: v8/v8json_spirit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT v8/lib_ebzz_ebzz_v8_a-v8json_spirit.obj -MD -MP -MF v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8json_spirit.Tpo -c -o v8/lib_ebzz_ebzz_v8_a-v8json_spirit.obj `if test -f 'v8/v8json_spirit.cpp'; then $(CYGPATH_W) 'v8/v8json_spirit.cpp'; else $(CYGPATH_W) '$(srcdir)/v8/v8json_spirit.cpp'; fi`
	$(AM_V_at)$(am__mv) v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8json_spirit.Tpo v8/$(DEPDIR)/lib_ebzz_ebzz_v8_a-v8json_spirit.Po
#	$(AM_V_CXX)source='v8/v8json_spirit.cpp' object='v8/lib_ebzz_ebzz_v8_a-v8json_spirit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_v8_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o v8/lib_ebzz_ebzz_v8_a-v8json_spirit.obj `if test -f 'v8/v8json_spirit.cpp'; then $(CYGPATH_W) 'v8/v8json_spirit.cpp'; else $(CYGPATH_W) '$(srcdir)/v8/v8json_spirit.cpp'; fi`

wallet/lib_ebzz_ebzz_wallet_a-dbflat.o: wallet/dbflat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-dbflat.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-dbflat.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-dbflat.o `test -f 'wallet/dbflat.cpp' || echo '$(srcdir)/'`wallet/dbflat.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-dbflat.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-dbflat.Po
#	$(AM_V_CXX)source='wallet/dbflat.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-dbflat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-dbflat.o `test -f 'wallet/dbflat.cpp' || echo '$(srcdir)/'`wallet/dbflat.cpp

wallet/lib_ebzz_ebzz_wallet_a-dbflat.obj: wallet/dbflat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-dbflat.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-dbflat.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-dbflat.obj `if test -f 'wallet/dbflat.cpp'; then $(CYGPATH_W) 'wallet/dbflat.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/dbflat.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-dbflat.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-dbflat.Po
#	$(AM_V_CXX)source='wallet/dbflat.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-dbflat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-dbflat.obj `if test -f 'wallet/dbflat.cpp'; then $(CYGPATH_W) 'wallet/dbflat.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/dbflat.cpp'; fi`

wallet/lib_ebzz_ebzz_wallet_a-crypter.o: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-crypter.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-crypter.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-crypter.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-crypter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp

wallet/lib_ebzz_ebzz_wallet_a-crypter.obj: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-crypter.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-crypter.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-crypter.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-crypter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`

community/lib_ebzz_ebzz_wallet_a-license.o: community/license.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT community/lib_ebzz_ebzz_wallet_a-license.o -MD -MP -MF community/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-license.Tpo -c -o community/lib_ebzz_ebzz_wallet_a-license.o `test -f 'community/license.cpp' || echo '$(srcdir)/'`community/license.cpp
	$(AM_V_at)$(am__mv) community/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-license.Tpo community/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-license.Po
#	$(AM_V_CXX)source='community/license.cpp' object='community/lib_ebzz_ebzz_wallet_a-license.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o community/lib_ebzz_ebzz_wallet_a-license.o `test -f 'community/license.cpp' || echo '$(srcdir)/'`community/license.cpp

community/lib_ebzz_ebzz_wallet_a-license.obj: community/license.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT community/lib_ebzz_ebzz_wallet_a-license.obj -MD -MP -MF community/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-license.Tpo -c -o community/lib_ebzz_ebzz_wallet_a-license.obj `if test -f 'community/license.cpp'; then $(CYGPATH_W) 'community/license.cpp'; else $(CYGPATH_W) '$(srcdir)/community/license.cpp'; fi`
	$(AM_V_at)$(am__mv) community/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-license.Tpo community/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-license.Po
#	$(AM_V_CXX)source='community/license.cpp' object='community/lib_ebzz_ebzz_wallet_a-license.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o community/lib_ebzz_ebzz_wallet_a-license.obj `if test -f 'community/license.cpp'; then $(CYGPATH_W) 'community/license.cpp'; else $(CYGPATH_W) '$(srcdir)/community/license.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcdump.o: rpc/rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcdump.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcdump.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcdump.o `test -f 'rpc/rpcdump.cpp' || echo '$(srcdir)/'`rpc/rpcdump.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcdump.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='rpc/rpcdump.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcdump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcdump.o `test -f 'rpc/rpcdump.cpp' || echo '$(srcdir)/'`rpc/rpcdump.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcdump.obj: rpc/rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcdump.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcdump.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcdump.obj `if test -f 'rpc/rpcdump.cpp'; then $(CYGPATH_W) 'rpc/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcdump.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcdump.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='rpc/rpcdump.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcdump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcdump.obj `if test -f 'rpc/rpcdump.cpp'; then $(CYGPATH_W) 'rpc/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcdump.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.o: rpc/rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallet.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.o `test -f 'rpc/rpcwallet.cpp' || echo '$(srcdir)/'`rpc/rpcwallet.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallet.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='rpc/rpcwallet.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.o `test -f 'rpc/rpcwallet.cpp' || echo '$(srcdir)/'`rpc/rpcwallet.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.obj: rpc/rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallet.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.obj `if test -f 'rpc/rpcwallet.cpp'; then $(CYGPATH_W) 'rpc/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcwallet.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallet.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='rpc/rpcwallet.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwallet.obj `if test -f 'rpc/rpcwallet.cpp'; then $(CYGPATH_W) 'rpc/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcwallet.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.o: rpc/rpcwalletutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletutils.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.o `test -f 'rpc/rpcwalletutils.cpp' || echo '$(srcdir)/'`rpc/rpcwalletutils.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletutils.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletutils.Po
#	$(AM_V_CXX)source='rpc/rpcwalletutils.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.o `test -f 'rpc/rpcwalletutils.cpp' || echo '$(srcdir)/'`rpc/rpcwalletutils.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.obj: rpc/rpcwalletutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletutils.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.obj `if test -f 'rpc/rpcwalletutils.cpp'; then $(CYGPATH_W) 'rpc/rpcwalletutils.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcwalletutils.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletutils.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletutils.Po
#	$(AM_V_CXX)source='rpc/rpcwalletutils.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwalletutils.obj `if test -f 'rpc/rpcwalletutils.cpp'; then $(CYGPATH_W) 'rpc/rpcwalletutils.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcwalletutils.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.o: rpc/rpcwallettxs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallettxs.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.o `test -f 'rpc/rpcwallettxs.cpp' || echo '$(srcdir)/'`rpc/rpcwallettxs.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallettxs.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallettxs.Po
#	$(AM_V_CXX)source='rpc/rpcwallettxs.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.o `test -f 'rpc/rpcwallettxs.cpp' || echo '$(srcdir)/'`rpc/rpcwallettxs.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.obj: rpc/rpcwallettxs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallettxs.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.obj `if test -f 'rpc/rpcwallettxs.cpp'; then $(CYGPATH_W) 'rpc/rpcwallettxs.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcwallettxs.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallettxs.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwallettxs.Po
#	$(AM_V_CXX)source='rpc/rpcwallettxs.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwallettxs.obj `if test -f 'rpc/rpcwallettxs.cpp'; then $(CYGPATH_W) 'rpc/rpcwallettxs.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcwallettxs.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.o: rpc/rpcexchange.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexchange.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.o `test -f 'rpc/rpcexchange.cpp' || echo '$(srcdir)/'`rpc/rpcexchange.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexchange.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexchange.Po
#	$(AM_V_CXX)source='rpc/rpcexchange.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.o `test -f 'rpc/rpcexchange.cpp' || echo '$(srcdir)/'`rpc/rpcexchange.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.obj: rpc/rpcexchange.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexchange.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.obj `if test -f 'rpc/rpcexchange.cpp'; then $(CYGPATH_W) 'rpc/rpcexchange.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcexchange.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexchange.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexchange.Po
#	$(AM_V_CXX)source='rpc/rpcexchange.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcexchange.obj `if test -f 'rpc/rpcexchange.cpp'; then $(CYGPATH_W) 'rpc/rpcexchange.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcexchange.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.o: rpc/rpcwalletsend.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletsend.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.o `test -f 'rpc/rpcwalletsend.cpp' || echo '$(srcdir)/'`rpc/rpcwalletsend.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletsend.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletsend.Po
#	$(AM_V_CXX)source='rpc/rpcwalletsend.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.o `test -f 'rpc/rpcwalletsend.cpp' || echo '$(srcdir)/'`rpc/rpcwalletsend.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.obj: rpc/rpcwalletsend.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletsend.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.obj `if test -f 'rpc/rpcwalletsend.cpp'; then $(CYGPATH_W) 'rpc/rpcwalletsend.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcwalletsend.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletsend.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcwalletsend.Po
#	$(AM_V_CXX)source='rpc/rpcwalletsend.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcwalletsend.obj `if test -f 'rpc/rpcwalletsend.cpp'; then $(CYGPATH_W) 'rpc/rpcwalletsend.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcwalletsend.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.o: rpc/rpcpermissions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcpermissions.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.o `test -f 'rpc/rpcpermissions.cpp' || echo '$(srcdir)/'`rpc/rpcpermissions.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcpermissions.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcpermissions.Po
#	$(AM_V_CXX)source='rpc/rpcpermissions.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.o `test -f 'rpc/rpcpermissions.cpp' || echo '$(srcdir)/'`rpc/rpcpermissions.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.obj: rpc/rpcpermissions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcpermissions.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.obj `if test -f 'rpc/rpcpermissions.cpp'; then $(CYGPATH_W) 'rpc/rpcpermissions.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcpermissions.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcpermissions.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcpermissions.Po
#	$(AM_V_CXX)source='rpc/rpcpermissions.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcpermissions.obj `if test -f 'rpc/rpcpermissions.cpp'; then $(CYGPATH_W) 'rpc/rpcpermissions.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcpermissions.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcassets.o: rpc/rpcassets.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcassets.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcassets.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcassets.o `test -f 'rpc/rpcassets.cpp' || echo '$(srcdir)/'`rpc/rpcassets.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcassets.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcassets.Po
#	$(AM_V_CXX)source='rpc/rpcassets.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcassets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcassets.o `test -f 'rpc/rpcassets.cpp' || echo '$(srcdir)/'`rpc/rpcassets.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcassets.obj: rpc/rpcassets.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcassets.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcassets.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcassets.obj `if test -f 'rpc/rpcassets.cpp'; then $(CYGPATH_W) 'rpc/rpcassets.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcassets.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcassets.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcassets.Po
#	$(AM_V_CXX)source='rpc/rpcassets.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcassets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcassets.obj `if test -f 'rpc/rpcassets.cpp'; then $(CYGPATH_W) 'rpc/rpcassets.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcassets.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.o: rpc/rpcstreams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcstreams.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.o `test -f 'rpc/rpcstreams.cpp' || echo '$(srcdir)/'`rpc/rpcstreams.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcstreams.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcstreams.Po
#	$(AM_V_CXX)source='rpc/rpcstreams.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.o `test -f 'rpc/rpcstreams.cpp' || echo '$(srcdir)/'`rpc/rpcstreams.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.obj: rpc/rpcstreams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcstreams.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.obj `if test -f 'rpc/rpcstreams.cpp'; then $(CYGPATH_W) 'rpc/rpcstreams.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcstreams.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcstreams.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcstreams.Po
#	$(AM_V_CXX)source='rpc/rpcstreams.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcstreams.obj `if test -f 'rpc/rpcstreams.cpp'; then $(CYGPATH_W) 'rpc/rpcstreams.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcstreams.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.o: rpc/rpcupgrades.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcupgrades.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.o `test -f 'rpc/rpcupgrades.cpp' || echo '$(srcdir)/'`rpc/rpcupgrades.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcupgrades.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcupgrades.Po
#	$(AM_V_CXX)source='rpc/rpcupgrades.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.o `test -f 'rpc/rpcupgrades.cpp' || echo '$(srcdir)/'`rpc/rpcupgrades.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.obj: rpc/rpcupgrades.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcupgrades.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.obj `if test -f 'rpc/rpcupgrades.cpp'; then $(CYGPATH_W) 'rpc/rpcupgrades.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcupgrades.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcupgrades.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcupgrades.Po
#	$(AM_V_CXX)source='rpc/rpcupgrades.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcupgrades.obj `if test -f 'rpc/rpcupgrades.cpp'; then $(CYGPATH_W) 'rpc/rpcupgrades.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcupgrades.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.o: rpc/rpcfilters.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcfilters.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.o `test -f 'rpc/rpcfilters.cpp' || echo '$(srcdir)/'`rpc/rpcfilters.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcfilters.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcfilters.Po
#	$(AM_V_CXX)source='rpc/rpcfilters.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.o `test -f 'rpc/rpcfilters.cpp' || echo '$(srcdir)/'`rpc/rpcfilters.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.obj: rpc/rpcfilters.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcfilters.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.obj `if test -f 'rpc/rpcfilters.cpp'; then $(CYGPATH_W) 'rpc/rpcfilters.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcfilters.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcfilters.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcfilters.Po
#	$(AM_V_CXX)source='rpc/rpcfilters.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcfilters.obj `if test -f 'rpc/rpcfilters.cpp'; then $(CYGPATH_W) 'rpc/rpcfilters.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcfilters.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.o: rpc/rpcvariables.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcvariables.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.o `test -f 'rpc/rpcvariables.cpp' || echo '$(srcdir)/'`rpc/rpcvariables.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcvariables.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcvariables.Po
#	$(AM_V_CXX)source='rpc/rpcvariables.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.o `test -f 'rpc/rpcvariables.cpp' || echo '$(srcdir)/'`rpc/rpcvariables.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.obj: rpc/rpcvariables.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcvariables.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.obj `if test -f 'rpc/rpcvariables.cpp'; then $(CYGPATH_W) 'rpc/rpcvariables.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcvariables.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcvariables.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcvariables.Po
#	$(AM_V_CXX)source='rpc/rpcvariables.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcvariables.obj `if test -f 'rpc/rpcvariables.cpp'; then $(CYGPATH_W) 'rpc/rpcvariables.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcvariables.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.o: rpc/rpclibraries.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclibraries.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.o `test -f 'rpc/rpclibraries.cpp' || echo '$(srcdir)/'`rpc/rpclibraries.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclibraries.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclibraries.Po
#	$(AM_V_CXX)source='rpc/rpclibraries.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.o `test -f 'rpc/rpclibraries.cpp' || echo '$(srcdir)/'`rpc/rpclibraries.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.obj: rpc/rpclibraries.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclibraries.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.obj `if test -f 'rpc/rpclibraries.cpp'; then $(CYGPATH_W) 'rpc/rpclibraries.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpclibraries.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclibraries.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclibraries.Po
#	$(AM_V_CXX)source='rpc/rpclibraries.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpclibraries.obj `if test -f 'rpc/rpclibraries.cpp'; then $(CYGPATH_W) 'rpc/rpclibraries.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpclibraries.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpclicense.o: rpc/rpclicense.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpclicense.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclicense.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpclicense.o `test -f 'rpc/rpclicense.cpp' || echo '$(srcdir)/'`rpc/rpclicense.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclicense.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclicense.Po
#	$(AM_V_CXX)source='rpc/rpclicense.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpclicense.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpclicense.o `test -f 'rpc/rpclicense.cpp' || echo '$(srcdir)/'`rpc/rpclicense.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpclicense.obj: rpc/rpclicense.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpclicense.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclicense.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpclicense.obj `if test -f 'rpc/rpclicense.cpp'; then $(CYGPATH_W) 'rpc/rpclicense.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpclicense.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclicense.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpclicense.Po
#	$(AM_V_CXX)source='rpc/rpclicense.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpclicense.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpclicense.obj `if test -f 'rpc/rpclicense.cpp'; then $(CYGPATH_W) 'rpc/rpclicense.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpclicense.cpp'; fi`

rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.o: rpc/rpcexplorer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.o -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexplorer.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.o `test -f 'rpc/rpcexplorer.cpp' || echo '$(srcdir)/'`rpc/rpcexplorer.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexplorer.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexplorer.Po
#	$(AM_V_CXX)source='rpc/rpcexplorer.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.o `test -f 'rpc/rpcexplorer.cpp' || echo '$(srcdir)/'`rpc/rpcexplorer.cpp

rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.obj: rpc/rpcexplorer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.obj -MD -MP -MF rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexplorer.Tpo -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.obj `if test -f 'rpc/rpcexplorer.cpp'; then $(CYGPATH_W) 'rpc/rpcexplorer.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcexplorer.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexplorer.Tpo rpc/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-rpcexplorer.Po
#	$(AM_V_CXX)source='rpc/rpcexplorer.cpp' object='rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/lib_ebzz_ebzz_wallet_a-rpcexplorer.obj `if test -f 'rpc/rpcexplorer.cpp'; then $(CYGPATH_W) 'rpc/rpcexplorer.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpcexplorer.cpp'; fi`

wallet/lib_ebzz_ebzz_wallet_a-wallet.o: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-wallet.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp

wallet/lib_ebzz_ebzz_wallet_a-wallet.obj: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-wallet.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`

wallet/lib_ebzz_ebzz_wallet_a-walletcoins.o: wallet/walletcoins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-walletcoins.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletcoins.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-walletcoins.o `test -f 'wallet/walletcoins.cpp' || echo '$(srcdir)/'`wallet/walletcoins.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletcoins.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletcoins.Po
#	$(AM_V_CXX)source='wallet/walletcoins.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-walletcoins.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-walletcoins.o `test -f 'wallet/walletcoins.cpp' || echo '$(srcdir)/'`wallet/walletcoins.cpp

wallet/lib_ebzz_ebzz_wallet_a-walletcoins.obj: wallet/walletcoins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-walletcoins.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletcoins.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-walletcoins.obj `if test -f 'wallet/walletcoins.cpp'; then $(CYGPATH_W) 'wallet/walletcoins.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletcoins.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletcoins.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletcoins.Po
#	$(AM_V_CXX)source='wallet/walletcoins.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-walletcoins.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-walletcoins.obj `if test -f 'wallet/walletcoins.cpp'; then $(CYGPATH_W) 'wallet/walletcoins.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletcoins.cpp'; fi`

wallet/lib_ebzz_ebzz_wallet_a-wallettxs.o: wallet/wallettxs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-wallettxs.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallettxs.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-wallettxs.o `test -f 'wallet/wallettxs.cpp' || echo '$(srcdir)/'`wallet/wallettxs.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallettxs.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallettxs.Po
#	$(AM_V_CXX)source='wallet/wallettxs.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-wallettxs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-wallettxs.o `test -f 'wallet/wallettxs.cpp' || echo '$(srcdir)/'`wallet/wallettxs.cpp

wallet/lib_ebzz_ebzz_wallet_a-wallettxs.obj: wallet/wallettxs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-wallettxs.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallettxs.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-wallettxs.obj `if test -f 'wallet/wallettxs.cpp'; then $(CYGPATH_W) 'wallet/wallettxs.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallettxs.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallettxs.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallettxs.Po
#	$(AM_V_CXX)source='wallet/wallettxs.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-wallettxs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-wallettxs.obj `if test -f 'wallet/wallettxs.cpp'; then $(CYGPATH_W) 'wallet/wallettxs.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallettxs.cpp'; fi`

wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.o: wallet/wallet_ismine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet_ismine.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.o `test -f 'wallet/wallet_ismine.cpp' || echo '$(srcdir)/'`wallet/wallet_ismine.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet_ismine.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet_ismine.Po
#	$(AM_V_CXX)source='wallet/wallet_ismine.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.o `test -f 'wallet/wallet_ismine.cpp' || echo '$(srcdir)/'`wallet/wallet_ismine.cpp

wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.obj: wallet/wallet_ismine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet_ismine.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.obj `if test -f 'wallet/wallet_ismine.cpp'; then $(CYGPATH_W) 'wallet/wallet_ismine.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet_ismine.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet_ismine.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-wallet_ismine.Po
#	$(AM_V_CXX)source='wallet/wallet_ismine.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-wallet_ismine.obj `if test -f 'wallet/wallet_ismine.cpp'; then $(CYGPATH_W) 'wallet/wallet_ismine.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet_ismine.cpp'; fi`

wallet/lib_ebzz_ebzz_wallet_a-walletdb.o: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-walletdb.o -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletdb.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-walletdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp

wallet/lib_ebzz_ebzz_wallet_a-walletdb.obj: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzz_wallet_a-walletdb.obj -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletdb.Tpo -c -o wallet/lib_ebzz_ebzz_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzz_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/lib_ebzz_ebzz_wallet_a-walletdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzz_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzz_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`

utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.o: utils/utility.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.o -MD -MP -MF utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.Tpo -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.o `test -f 'utils/utility.cpp' || echo '$(srcdir)/'`utils/utility.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.Tpo utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.Po
#	$(AM_V_CXX)source='utils/utility.cpp' object='utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.o `test -f 'utils/utility.cpp' || echo '$(srcdir)/'`utils/utility.cpp

utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.obj: utils/utility.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.obj -MD -MP -MF utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.Tpo -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.obj `if test -f 'utils/utility.cpp'; then $(CYGPATH_W) 'utils/utility.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utility.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.Tpo utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.Po
#	$(AM_V_CXX)source='utils/utility.cpp' object='utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utility.obj `if test -f 'utils/utility.cpp'; then $(CYGPATH_W) 'utils/utility.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utility.cpp'; fi`

utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.o: utils/systemdependent.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.o -MD -MP -MF utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.Tpo -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.o `test -f 'utils/systemdependent.cpp' || echo '$(srcdir)/'`utils/systemdependent.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.Tpo utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.Po
#	$(AM_V_CXX)source='utils/systemdependent.cpp' object='utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.o `test -f 'utils/systemdependent.cpp' || echo '$(srcdir)/'`utils/systemdependent.cpp

utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.obj: utils/systemdependent.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.obj -MD -MP -MF utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.Tpo -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.obj `if test -f 'utils/systemdependent.cpp'; then $(CYGPATH_W) 'utils/systemdependent.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/systemdependent.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.Tpo utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.Po
#	$(AM_V_CXX)source='utils/systemdependent.cpp' object='utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-systemdependent.obj `if test -f 'utils/systemdependent.cpp'; then $(CYGPATH_W) 'utils/systemdependent.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/systemdependent.cpp'; fi`

utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.o: utils/tools.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.o -MD -MP -MF utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.Tpo -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.o `test -f 'utils/tools.cpp' || echo '$(srcdir)/'`utils/tools.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.Tpo utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.Po
#	$(AM_V_CXX)source='utils/tools.cpp' object='utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.o `test -f 'utils/tools.cpp' || echo '$(srcdir)/'`utils/tools.cpp

utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.obj: utils/tools.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.obj -MD -MP -MF utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.Tpo -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.obj `if test -f 'utils/tools.cpp'; then $(CYGPATH_W) 'utils/tools.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/tools.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.Tpo utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.Po
#	$(AM_V_CXX)source='utils/tools.cpp' object='utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-tools.obj `if test -f 'utils/tools.cpp'; then $(CYGPATH_W) 'utils/tools.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/tools.cpp'; fi`

utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.o: utils/utilwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.o -MD -MP -MF utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.Tpo -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.o `test -f 'utils/utilwrapper.cpp' || echo '$(srcdir)/'`utils/utilwrapper.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.Tpo utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.Po
#	$(AM_V_CXX)source='utils/utilwrapper.cpp' object='utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.o `test -f 'utils/utilwrapper.cpp' || echo '$(srcdir)/'`utils/utilwrapper.cpp

utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.obj: utils/utilwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.obj -MD -MP -MF utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.Tpo -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.obj `if test -f 'utils/utilwrapper.cpp'; then $(CYGPATH_W) 'utils/utilwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utilwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.Tpo utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.Po
#	$(AM_V_CXX)source='utils/utilwrapper.cpp' object='utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-utilwrapper.obj `if test -f 'utils/utilwrapper.cpp'; then $(CYGPATH_W) 'utils/utilwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/utilwrapper.cpp'; fi`

version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.o: version/version.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.o -MD -MP -MF version/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.Tpo -c -o version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.o `test -f 'version/version.cpp' || echo '$(srcdir)/'`version/version.cpp
	$(AM_V_at)$(am__mv) version/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.Tpo version/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.Po
#	$(AM_V_CXX)source='version/version.cpp' object='version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.o `test -f 'version/version.cpp' || echo '$(srcdir)/'`version/version.cpp

version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.obj: version/version.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.obj -MD -MP -MF version/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.Tpo -c -o version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.obj `if test -f 'version/version.cpp'; then $(CYGPATH_W) 'version/version.cpp'; else $(CYGPATH_W) '$(srcdir)/version/version.cpp'; fi`
	$(AM_V_at)$(am__mv) version/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.Tpo version/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.Po
#	$(AM_V_CXX)source='version/version.cpp' object='version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o version/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-version.obj `if test -f 'version/version.cpp'; then $(CYGPATH_W) 'version/version.cpp'; else $(CYGPATH_W) '$(srcdir)/version/version.cpp'; fi`

custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.o: custom/custom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.o -MD -MP -MF custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.Tpo -c -o custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.o `test -f 'custom/custom.cpp' || echo '$(srcdir)/'`custom/custom.cpp
	$(AM_V_at)$(am__mv) custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.Tpo custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.Po
#	$(AM_V_CXX)source='custom/custom.cpp' object='custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.o `test -f 'custom/custom.cpp' || echo '$(srcdir)/'`custom/custom.cpp

custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.obj: custom/custom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.obj -MD -MP -MF custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.Tpo -c -o custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.obj `if test -f 'custom/custom.cpp'; then $(CYGPATH_W) 'custom/custom.cpp'; else $(CYGPATH_W) '$(srcdir)/custom/custom.cpp'; fi`
	$(AM_V_at)$(am__mv) custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.Tpo custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.Po
#	$(AM_V_CXX)source='custom/custom.cpp' object='custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom.obj `if test -f 'custom/custom.cpp'; then $(CYGPATH_W) 'custom/custom.cpp'; else $(CYGPATH_W) '$(srcdir)/custom/custom.cpp'; fi`

custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.o: custom/custom__ebzz_ebzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.o -MD -MP -MF custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.Tpo -c -o custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.o `test -f 'custom/custom__ebzz_ebzz.cpp' || echo '$(srcdir)/'`custom/custom__ebzz_ebzz.cpp
	$(AM_V_at)$(am__mv) custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.Tpo custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.Po
#	$(AM_V_CXX)source='custom/custom__ebzz_ebzz.cpp' object='custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.o `test -f 'custom/custom__ebzz_ebzz.cpp' || echo '$(srcdir)/'`custom/custom__ebzz_ebzz.cpp

custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.obj: custom/custom__ebzz_ebzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.obj -MD -MP -MF custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.Tpo -c -o custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.obj `if test -f 'custom/custom__ebzz_ebzz.cpp'; then $(CYGPATH_W) 'custom/custom__ebzz_ebzz.cpp'; else $(CYGPATH_W) '$(srcdir)/custom/custom__ebzz_ebzz.cpp'; fi`
	$(AM_V_at)$(am__mv) custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.Tpo custom/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.Po
#	$(AM_V_CXX)source='custom/custom__ebzz_ebzz.cpp' object='custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o custom/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-custom__ebzz_ebzz.obj `if test -f 'custom/custom__ebzz_ebzz.cpp'; then $(CYGPATH_W) 'custom/custom__ebzz_ebzz.cpp'; else $(CYGPATH_W) '$(srcdir)/custom/custom__ebzz_ebzz.cpp'; fi`

chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.o: chainparams/params.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.o -MD -MP -MF chainparams/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.Tpo -c -o chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.o `test -f 'chainparams/params.cpp' || echo '$(srcdir)/'`chainparams/params.cpp
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.Tpo chainparams/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.Po
#	$(AM_V_CXX)source='chainparams/params.cpp' object='chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.o `test -f 'chainparams/params.cpp' || echo '$(srcdir)/'`chainparams/params.cpp

chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.obj: chainparams/params.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.obj -MD -MP -MF chainparams/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.Tpo -c -o chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.obj `if test -f 'chainparams/params.cpp'; then $(CYGPATH_W) 'chainparams/params.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/params.cpp'; fi`
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.Tpo chainparams/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.Po
#	$(AM_V_CXX)source='chainparams/params.cpp' object='chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-params.obj `if test -f 'chainparams/params.cpp'; then $(CYGPATH_W) 'chainparams/params.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/params.cpp'; fi`

protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.o: protocol/_ebzz_ebzzscript.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.o -MD -MP -MF protocol/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.Tpo -c -o protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.o `test -f 'protocol/_ebzz_ebzzscript.cpp' || echo '$(srcdir)/'`protocol/_ebzz_ebzzscript.cpp
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.Tpo protocol/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.Po
#	$(AM_V_CXX)source='protocol/_ebzz_ebzzscript.cpp' object='protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.o `test -f 'protocol/_ebzz_ebzzscript.cpp' || echo '$(srcdir)/'`protocol/_ebzz_ebzzscript.cpp

protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.obj: protocol/_ebzz_ebzzscript.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.obj -MD -MP -MF protocol/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.Tpo -c -o protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.obj `if test -f 'protocol/_ebzz_ebzzscript.cpp'; then $(CYGPATH_W) 'protocol/_ebzz_ebzzscript.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/_ebzz_ebzzscript.cpp'; fi`
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.Tpo protocol/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.Po
#	$(AM_V_CXX)source='protocol/_ebzz_ebzzscript.cpp' object='protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-_ebzz_ebzzscript.obj `if test -f 'protocol/_ebzz_ebzzscript.cpp'; then $(CYGPATH_W) 'protocol/_ebzz_ebzzscript.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/_ebzz_ebzzscript.cpp'; fi`

utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.o: utils/dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.o -MD -MP -MF utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.Tpo -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.o `test -f 'utils/dbwrapper.cpp' || echo '$(srcdir)/'`utils/dbwrapper.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.Tpo utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.Po
#	$(AM_V_CXX)source='utils/dbwrapper.cpp' object='utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.o `test -f 'utils/dbwrapper.cpp' || echo '$(srcdir)/'`utils/dbwrapper.cpp

utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.obj: utils/dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.obj -MD -MP -MF utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.Tpo -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.obj `if test -f 'utils/dbwrapper.cpp'; then $(CYGPATH_W) 'utils/dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/dbwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.Tpo utils/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.Po
#	$(AM_V_CXX)source='utils/dbwrapper.cpp' object='utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-dbwrapper.obj `if test -f 'utils/dbwrapper.cpp'; then $(CYGPATH_W) 'utils/dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/dbwrapper.cpp'; fi`

wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.o: wallet/wallettxdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.o -MD -MP -MF wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.Tpo -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.o `test -f 'wallet/wallettxdb.cpp' || echo '$(srcdir)/'`wallet/wallettxdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.Tpo wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.Po
#	$(AM_V_CXX)source='wallet/wallettxdb.cpp' object='wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.o `test -f 'wallet/wallettxdb.cpp' || echo '$(srcdir)/'`wallet/wallettxdb.cpp

wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.obj: wallet/wallettxdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.obj -MD -MP -MF wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.Tpo -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.obj `if test -f 'wallet/wallettxdb.cpp'; then $(CYGPATH_W) 'wallet/wallettxdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallettxdb.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.Tpo wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.Po
#	$(AM_V_CXX)source='wallet/wallettxdb.cpp' object='wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-wallettxdb.obj `if test -f 'wallet/wallettxdb.cpp'; then $(CYGPATH_W) 'wallet/wallettxdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallettxdb.cpp'; fi`

wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.o: wallet/chunkdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.o -MD -MP -MF wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.Tpo -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.o `test -f 'wallet/chunkdb.cpp' || echo '$(srcdir)/'`wallet/chunkdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.Tpo wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.Po
#	$(AM_V_CXX)source='wallet/chunkdb.cpp' object='wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.o `test -f 'wallet/chunkdb.cpp' || echo '$(srcdir)/'`wallet/chunkdb.cpp

wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.obj: wallet/chunkdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.obj -MD -MP -MF wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.Tpo -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.obj `if test -f 'wallet/chunkdb.cpp'; then $(CYGPATH_W) 'wallet/chunkdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/chunkdb.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.Tpo wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.Po
#	$(AM_V_CXX)source='wallet/chunkdb.cpp' object='wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkdb.obj `if test -f 'wallet/chunkdb.cpp'; then $(CYGPATH_W) 'wallet/chunkdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/chunkdb.cpp'; fi`

wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.o: wallet/chunkcollector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.o -MD -MP -MF wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.Tpo -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.o `test -f 'wallet/chunkcollector.cpp' || echo '$(srcdir)/'`wallet/chunkcollector.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.Tpo wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.Po
#	$(AM_V_CXX)source='wallet/chunkcollector.cpp' object='wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.o `test -f 'wallet/chunkcollector.cpp' || echo '$(srcdir)/'`wallet/chunkcollector.cpp

wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.obj: wallet/chunkcollector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.obj -MD -MP -MF wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.Tpo -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.obj `if test -f 'wallet/chunkcollector.cpp'; then $(CYGPATH_W) 'wallet/chunkcollector.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/chunkcollector.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.Tpo wallet/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.Po
#	$(AM_V_CXX)source='wallet/chunkcollector.cpp' object='wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-chunkcollector.obj `if test -f 'wallet/chunkcollector.cpp'; then $(CYGPATH_W) 'wallet/chunkcollector.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/chunkcollector.cpp'; fi`

permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.o: permissions/permission.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.o -MD -MP -MF permissions/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.Tpo -c -o permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.o `test -f 'permissions/permission.cpp' || echo '$(srcdir)/'`permissions/permission.cpp
	$(AM_V_at)$(am__mv) permissions/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.Tpo permissions/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.Po
#	$(AM_V_CXX)source='permissions/permission.cpp' object='permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.o `test -f 'permissions/permission.cpp' || echo '$(srcdir)/'`permissions/permission.cpp

permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.obj: permissions/permission.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.obj -MD -MP -MF permissions/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.Tpo -c -o permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.obj `if test -f 'permissions/permission.cpp'; then $(CYGPATH_W) 'permissions/permission.cpp'; else $(CYGPATH_W) '$(srcdir)/permissions/permission.cpp'; fi`
	$(AM_V_at)$(am__mv) permissions/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.Tpo permissions/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.Po
#	$(AM_V_CXX)source='permissions/permission.cpp' object='permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o permissions/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-permission.obj `if test -f 'permissions/permission.cpp'; then $(CYGPATH_W) 'permissions/permission.cpp'; else $(CYGPATH_W) '$(srcdir)/permissions/permission.cpp'; fi`

entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.o: entities/asset.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.o -MD -MP -MF entities/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.Tpo -c -o entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.o `test -f 'entities/asset.cpp' || echo '$(srcdir)/'`entities/asset.cpp
	$(AM_V_at)$(am__mv) entities/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.Tpo entities/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.Po
#	$(AM_V_CXX)source='entities/asset.cpp' object='entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.o `test -f 'entities/asset.cpp' || echo '$(srcdir)/'`entities/asset.cpp

entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.obj: entities/asset.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.obj -MD -MP -MF entities/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.Tpo -c -o entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.obj `if test -f 'entities/asset.cpp'; then $(CYGPATH_W) 'entities/asset.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/asset.cpp'; fi`
	$(AM_V_at)$(am__mv) entities/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.Tpo entities/$(DEPDIR)/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.Po
#	$(AM_V_CXX)source='entities/asset.cpp' object='entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entities/_ebzz_ebzz_lib_ebzz_ebzz__ebzz_ebzz_a-asset.obj `if test -f 'entities/asset.cpp'; then $(CYGPATH_W) 'entities/asset.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/asset.cpp'; fi`

primitives/lib_ebzz_ebzzconsensus_la-transaction.lo: primitives/transaction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT primitives/lib_ebzz_ebzzconsensus_la-transaction.lo -MD -MP -MF primitives/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-transaction.Tpo -c -o primitives/lib_ebzz_ebzzconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-transaction.Tpo primitives/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-transaction.Plo
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/lib_ebzz_ebzzconsensus_la-transaction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o primitives/lib_ebzz_ebzzconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

crypto/lib_ebzz_ebzzconsensus_la-hmac_sha512.lo: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/lib_ebzz_ebzzconsensus_la-hmac_sha512.lo -MD -MP -MF crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-hmac_sha512.Tpo -c -o crypto/lib_ebzz_ebzzconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-hmac_sha512.Tpo crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-hmac_sha512.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/lib_ebzz_ebzzconsensus_la-hmac_sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/lib_ebzz_ebzzconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/lib_ebzz_ebzzconsensus_la-sha1.lo: crypto/sha1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/lib_ebzz_ebzzconsensus_la-sha1.lo -MD -MP -MF crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha1.Tpo -c -o crypto/lib_ebzz_ebzzconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha1.Tpo crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha1.Plo
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/lib_ebzz_ebzzconsensus_la-sha1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/lib_ebzz_ebzzconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/lib_ebzz_ebzzconsensus_la-sha256.lo: crypto/sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/lib_ebzz_ebzzconsensus_la-sha256.lo -MD -MP -MF crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha256.Tpo -c -o crypto/lib_ebzz_ebzzconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha256.Tpo crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha256.Plo
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/lib_ebzz_ebzzconsensus_la-sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/lib_ebzz_ebzzconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/lib_ebzz_ebzzconsensus_la-sha512.lo: crypto/sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/lib_ebzz_ebzzconsensus_la-sha512.lo -MD -MP -MF crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha512.Tpo -c -o crypto/lib_ebzz_ebzzconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha512.Tpo crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-sha512.Plo
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/lib_ebzz_ebzzconsensus_la-sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/lib_ebzz_ebzzconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/lib_ebzz_ebzzconsensus_la-ripemd160.lo: crypto/ripemd160.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/lib_ebzz_ebzzconsensus_la-ripemd160.lo -MD -MP -MF crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-ripemd160.Tpo -c -o crypto/lib_ebzz_ebzzconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-ripemd160.Tpo crypto/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-ripemd160.Plo
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/lib_ebzz_ebzzconsensus_la-ripemd160.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/lib_ebzz_ebzzconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

utils/lib_ebzz_ebzzconsensus_la-utility.lo: utils/utility.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzzconsensus_la-utility.lo -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utility.Tpo -c -o utils/lib_ebzz_ebzzconsensus_la-utility.lo `test -f 'utils/utility.cpp' || echo '$(srcdir)/'`utils/utility.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utility.Tpo utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utility.Plo
#	$(AM_V_CXX)source='utils/utility.cpp' object='utils/lib_ebzz_ebzzconsensus_la-utility.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzzconsensus_la-utility.lo `test -f 'utils/utility.cpp' || echo '$(srcdir)/'`utils/utility.cpp

utils/lib_ebzz_ebzzconsensus_la-systemdependent.lo: utils/systemdependent.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzzconsensus_la-systemdependent.lo -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-systemdependent.Tpo -c -o utils/lib_ebzz_ebzzconsensus_la-systemdependent.lo `test -f 'utils/systemdependent.cpp' || echo '$(srcdir)/'`utils/systemdependent.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-systemdependent.Tpo utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-systemdependent.Plo
#	$(AM_V_CXX)source='utils/systemdependent.cpp' object='utils/lib_ebzz_ebzzconsensus_la-systemdependent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzzconsensus_la-systemdependent.lo `test -f 'utils/systemdependent.cpp' || echo '$(srcdir)/'`utils/systemdependent.cpp

utils/lib_ebzz_ebzzconsensus_la-tools.lo: utils/tools.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzzconsensus_la-tools.lo -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-tools.Tpo -c -o utils/lib_ebzz_ebzzconsensus_la-tools.lo `test -f 'utils/tools.cpp' || echo '$(srcdir)/'`utils/tools.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-tools.Tpo utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-tools.Plo
#	$(AM_V_CXX)source='utils/tools.cpp' object='utils/lib_ebzz_ebzzconsensus_la-tools.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzzconsensus_la-tools.lo `test -f 'utils/tools.cpp' || echo '$(srcdir)/'`utils/tools.cpp

utils/lib_ebzz_ebzzconsensus_la-utilwrapper.lo: utils/utilwrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzzconsensus_la-utilwrapper.lo -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utilwrapper.Tpo -c -o utils/lib_ebzz_ebzzconsensus_la-utilwrapper.lo `test -f 'utils/utilwrapper.cpp' || echo '$(srcdir)/'`utils/utilwrapper.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utilwrapper.Tpo utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utilwrapper.Plo
#	$(AM_V_CXX)source='utils/utilwrapper.cpp' object='utils/lib_ebzz_ebzzconsensus_la-utilwrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzzconsensus_la-utilwrapper.lo `test -f 'utils/utilwrapper.cpp' || echo '$(srcdir)/'`utils/utilwrapper.cpp

chainparams/lib_ebzz_ebzzconsensus_la-buildgenesis.lo: chainparams/buildgenesis.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/lib_ebzz_ebzzconsensus_la-buildgenesis.lo -MD -MP -MF chainparams/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-buildgenesis.Tpo -c -o chainparams/lib_ebzz_ebzzconsensus_la-buildgenesis.lo `test -f 'chainparams/buildgenesis.cpp' || echo '$(srcdir)/'`chainparams/buildgenesis.cpp
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-buildgenesis.Tpo chainparams/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-buildgenesis.Plo
#	$(AM_V_CXX)source='chainparams/buildgenesis.cpp' object='chainparams/lib_ebzz_ebzzconsensus_la-buildgenesis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/lib_ebzz_ebzzconsensus_la-buildgenesis.lo `test -f 'chainparams/buildgenesis.cpp' || echo '$(srcdir)/'`chainparams/buildgenesis.cpp

version/lib_ebzz_ebzzconsensus_la-version.lo: version/version.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT version/lib_ebzz_ebzzconsensus_la-version.lo -MD -MP -MF version/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-version.Tpo -c -o version/lib_ebzz_ebzzconsensus_la-version.lo `test -f 'version/version.cpp' || echo '$(srcdir)/'`version/version.cpp
	$(AM_V_at)$(am__mv) version/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-version.Tpo version/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-version.Plo
#	$(AM_V_CXX)source='version/version.cpp' object='version/lib_ebzz_ebzzconsensus_la-version.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o version/lib_ebzz_ebzzconsensus_la-version.lo `test -f 'version/version.cpp' || echo '$(srcdir)/'`version/version.cpp

custom/lib_ebzz_ebzzconsensus_la-custom.lo: custom/custom.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT custom/lib_ebzz_ebzzconsensus_la-custom.lo -MD -MP -MF custom/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-custom.Tpo -c -o custom/lib_ebzz_ebzzconsensus_la-custom.lo `test -f 'custom/custom.cpp' || echo '$(srcdir)/'`custom/custom.cpp
	$(AM_V_at)$(am__mv) custom/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-custom.Tpo custom/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-custom.Plo
#	$(AM_V_CXX)source='custom/custom.cpp' object='custom/lib_ebzz_ebzzconsensus_la-custom.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o custom/lib_ebzz_ebzzconsensus_la-custom.lo `test -f 'custom/custom.cpp' || echo '$(srcdir)/'`custom/custom.cpp

custom/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.lo: custom/custom__ebzz_ebzz.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT custom/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.lo -MD -MP -MF custom/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.Tpo -c -o custom/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.lo `test -f 'custom/custom__ebzz_ebzz.cpp' || echo '$(srcdir)/'`custom/custom__ebzz_ebzz.cpp
	$(AM_V_at)$(am__mv) custom/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.Tpo custom/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.Plo
#	$(AM_V_CXX)source='custom/custom__ebzz_ebzz.cpp' object='custom/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o custom/lib_ebzz_ebzzconsensus_la-custom__ebzz_ebzz.lo `test -f 'custom/custom__ebzz_ebzz.cpp' || echo '$(srcdir)/'`custom/custom__ebzz_ebzz.cpp

chainparams/lib_ebzz_ebzzconsensus_la-chainparams.lo: chainparams/chainparams.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/lib_ebzz_ebzzconsensus_la-chainparams.lo -MD -MP -MF chainparams/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chainparams.Tpo -c -o chainparams/lib_ebzz_ebzzconsensus_la-chainparams.lo `test -f 'chainparams/chainparams.cpp' || echo '$(srcdir)/'`chainparams/chainparams.cpp
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chainparams.Tpo chainparams/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chainparams.Plo
#	$(AM_V_CXX)source='chainparams/chainparams.cpp' object='chainparams/lib_ebzz_ebzzconsensus_la-chainparams.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/lib_ebzz_ebzzconsensus_la-chainparams.lo `test -f 'chainparams/chainparams.cpp' || echo '$(srcdir)/'`chainparams/chainparams.cpp

protocol/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.lo: protocol/_ebzz_ebzzscript.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protocol/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.lo -MD -MP -MF protocol/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.Tpo -c -o protocol/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.lo `test -f 'protocol/_ebzz_ebzzscript.cpp' || echo '$(srcdir)/'`protocol/_ebzz_ebzzscript.cpp
	$(AM_V_at)$(am__mv) protocol/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.Tpo protocol/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.Plo
#	$(AM_V_CXX)source='protocol/_ebzz_ebzzscript.cpp' object='protocol/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protocol/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzscript.lo `test -f 'protocol/_ebzz_ebzzscript.cpp' || echo '$(srcdir)/'`protocol/_ebzz_ebzzscript.cpp

utils/lib_ebzz_ebzzconsensus_la-dbwrapper.lo: utils/dbwrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzzconsensus_la-dbwrapper.lo -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-dbwrapper.Tpo -c -o utils/lib_ebzz_ebzzconsensus_la-dbwrapper.lo `test -f 'utils/dbwrapper.cpp' || echo '$(srcdir)/'`utils/dbwrapper.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-dbwrapper.Tpo utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-dbwrapper.Plo
#	$(AM_V_CXX)source='utils/dbwrapper.cpp' object='utils/lib_ebzz_ebzzconsensus_la-dbwrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzzconsensus_la-dbwrapper.lo `test -f 'utils/dbwrapper.cpp' || echo '$(srcdir)/'`utils/dbwrapper.cpp

wallet/lib_ebzz_ebzzconsensus_la-wallettxdb.lo: wallet/wallettxdb.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzzconsensus_la-wallettxdb.lo -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-wallettxdb.Tpo -c -o wallet/lib_ebzz_ebzzconsensus_la-wallettxdb.lo `test -f 'wallet/wallettxdb.cpp' || echo '$(srcdir)/'`wallet/wallettxdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-wallettxdb.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-wallettxdb.Plo
#	$(AM_V_CXX)source='wallet/wallettxdb.cpp' object='wallet/lib_ebzz_ebzzconsensus_la-wallettxdb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzzconsensus_la-wallettxdb.lo `test -f 'wallet/wallettxdb.cpp' || echo '$(srcdir)/'`wallet/wallettxdb.cpp

wallet/lib_ebzz_ebzzconsensus_la-chunkdb.lo: wallet/chunkdb.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzzconsensus_la-chunkdb.lo -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chunkdb.Tpo -c -o wallet/lib_ebzz_ebzzconsensus_la-chunkdb.lo `test -f 'wallet/chunkdb.cpp' || echo '$(srcdir)/'`wallet/chunkdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chunkdb.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chunkdb.Plo
#	$(AM_V_CXX)source='wallet/chunkdb.cpp' object='wallet/lib_ebzz_ebzzconsensus_la-chunkdb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzzconsensus_la-chunkdb.lo `test -f 'wallet/chunkdb.cpp' || echo '$(srcdir)/'`wallet/chunkdb.cpp

wallet/lib_ebzz_ebzzconsensus_la-chunkcollector.lo: wallet/chunkcollector.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/lib_ebzz_ebzzconsensus_la-chunkcollector.lo -MD -MP -MF wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chunkcollector.Tpo -c -o wallet/lib_ebzz_ebzzconsensus_la-chunkcollector.lo `test -f 'wallet/chunkcollector.cpp' || echo '$(srcdir)/'`wallet/chunkcollector.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chunkcollector.Tpo wallet/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-chunkcollector.Plo
#	$(AM_V_CXX)source='wallet/chunkcollector.cpp' object='wallet/lib_ebzz_ebzzconsensus_la-chunkcollector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/lib_ebzz_ebzzconsensus_la-chunkcollector.lo `test -f 'wallet/chunkcollector.cpp' || echo '$(srcdir)/'`wallet/chunkcollector.cpp

permissions/lib_ebzz_ebzzconsensus_la-permission.lo: permissions/permission.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT permissions/lib_ebzz_ebzzconsensus_la-permission.lo -MD -MP -MF permissions/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-permission.Tpo -c -o permissions/lib_ebzz_ebzzconsensus_la-permission.lo `test -f 'permissions/permission.cpp' || echo '$(srcdir)/'`permissions/permission.cpp
	$(AM_V_at)$(am__mv) permissions/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-permission.Tpo permissions/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-permission.Plo
#	$(AM_V_CXX)source='permissions/permission.cpp' object='permissions/lib_ebzz_ebzzconsensus_la-permission.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o permissions/lib_ebzz_ebzzconsensus_la-permission.lo `test -f 'permissions/permission.cpp' || echo '$(srcdir)/'`permissions/permission.cpp

entities/lib_ebzz_ebzzconsensus_la-asset.lo: entities/asset.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entities/lib_ebzz_ebzzconsensus_la-asset.lo -MD -MP -MF entities/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-asset.Tpo -c -o entities/lib_ebzz_ebzzconsensus_la-asset.lo `test -f 'entities/asset.cpp' || echo '$(srcdir)/'`entities/asset.cpp
	$(AM_V_at)$(am__mv) entities/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-asset.Tpo entities/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-asset.Plo
#	$(AM_V_CXX)source='entities/asset.cpp' object='entities/lib_ebzz_ebzzconsensus_la-asset.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entities/lib_ebzz_ebzzconsensus_la-asset.lo `test -f 'entities/asset.cpp' || echo '$(srcdir)/'`entities/asset.cpp

structs/lib_ebzz_ebzzconsensus_la-hash.lo: structs/hash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzzconsensus_la-hash.lo -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-hash.Tpo -c -o structs/lib_ebzz_ebzzconsensus_la-hash.lo `test -f 'structs/hash.cpp' || echo '$(srcdir)/'`structs/hash.cpp
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-hash.Tpo structs/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-hash.Plo
#	$(AM_V_CXX)source='structs/hash.cpp' object='structs/lib_ebzz_ebzzconsensus_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzzconsensus_la-hash.lo `test -f 'structs/hash.cpp' || echo '$(srcdir)/'`structs/hash.cpp

keys/lib_ebzz_ebzzconsensus_la-pubkey.lo: keys/pubkey.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keys/lib_ebzz_ebzzconsensus_la-pubkey.lo -MD -MP -MF keys/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-pubkey.Tpo -c -o keys/lib_ebzz_ebzzconsensus_la-pubkey.lo `test -f 'keys/pubkey.cpp' || echo '$(srcdir)/'`keys/pubkey.cpp
	$(AM_V_at)$(am__mv) keys/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-pubkey.Tpo keys/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-pubkey.Plo
#	$(AM_V_CXX)source='keys/pubkey.cpp' object='keys/lib_ebzz_ebzzconsensus_la-pubkey.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keys/lib_ebzz_ebzzconsensus_la-pubkey.lo `test -f 'keys/pubkey.cpp' || echo '$(srcdir)/'`keys/pubkey.cpp

script/lib_ebzz_ebzzconsensus_la-script.lo: script/script.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzzconsensus_la-script.lo -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-script.Tpo -c -o script/lib_ebzz_ebzzconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-script.Tpo script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-script.Plo
#	$(AM_V_CXX)source='script/script.cpp' object='script/lib_ebzz_ebzzconsensus_la-script.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzzconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/lib_ebzz_ebzzconsensus_la-interpreter.lo: script/interpreter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzzconsensus_la-interpreter.lo -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-interpreter.Tpo -c -o script/lib_ebzz_ebzzconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-interpreter.Tpo script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-interpreter.Plo
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/lib_ebzz_ebzzconsensus_la-interpreter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzzconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.lo: script/_ebzz_ebzzconsensus.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.lo -MD -MP -MF script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.Tpo -c -o script/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.lo `test -f 'script/_ebzz_ebzzconsensus.cpp' || echo '$(srcdir)/'`script/_ebzz_ebzzconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.Tpo script/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.Plo
#	$(AM_V_CXX)source='script/_ebzz_ebzzconsensus.cpp' object='script/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/lib_ebzz_ebzzconsensus_la-_ebzz_ebzzconsensus.lo `test -f 'script/_ebzz_ebzzconsensus.cpp' || echo '$(srcdir)/'`script/_ebzz_ebzzconsensus.cpp

structs/lib_ebzz_ebzzconsensus_la-uint256.lo: structs/uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT structs/lib_ebzz_ebzzconsensus_la-uint256.lo -MD -MP -MF structs/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-uint256.Tpo -c -o structs/lib_ebzz_ebzzconsensus_la-uint256.lo `test -f 'structs/uint256.cpp' || echo '$(srcdir)/'`structs/uint256.cpp
	$(AM_V_at)$(am__mv) structs/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-uint256.Tpo structs/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-uint256.Plo
#	$(AM_V_CXX)source='structs/uint256.cpp' object='structs/lib_ebzz_ebzzconsensus_la-uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o structs/lib_ebzz_ebzzconsensus_la-uint256.lo `test -f 'structs/uint256.cpp' || echo '$(srcdir)/'`structs/uint256.cpp

utils/lib_ebzz_ebzzconsensus_la-utilstrencodings.lo: utils/utilstrencodings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils/lib_ebzz_ebzzconsensus_la-utilstrencodings.lo -MD -MP -MF utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utilstrencodings.Tpo -c -o utils/lib_ebzz_ebzzconsensus_la-utilstrencodings.lo `test -f 'utils/utilstrencodings.cpp' || echo '$(srcdir)/'`utils/utilstrencodings.cpp
	$(AM_V_at)$(am__mv) utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utilstrencodings.Tpo utils/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-utilstrencodings.Plo
#	$(AM_V_CXX)source='utils/utilstrencodings.cpp' object='utils/lib_ebzz_ebzzconsensus_la-utilstrencodings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils/lib_ebzz_ebzzconsensus_la-utilstrencodings.lo `test -f 'utils/utilstrencodings.cpp' || echo '$(srcdir)/'`utils/utilstrencodings.cpp

compat/lib_ebzz_ebzzconsensus_la-glibc_compat.lo: compat/glibc_compat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzzconsensus_la-glibc_compat.lo -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-glibc_compat.Tpo -c -o compat/lib_ebzz_ebzzconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-glibc_compat.Tpo compat/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-glibc_compat.Plo
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/lib_ebzz_ebzzconsensus_la-glibc_compat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzzconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

compat/lib_ebzz_ebzzconsensus_la-glibcxx_compat.lo: compat/glibcxx_compat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/lib_ebzz_ebzzconsensus_la-glibcxx_compat.lo -MD -MP -MF compat/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-glibcxx_compat.Tpo -c -o compat/lib_ebzz_ebzzconsensus_la-glibcxx_compat.lo `test -f 'compat/glibcxx_compat.cpp' || echo '$(srcdir)/'`compat/glibcxx_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-glibcxx_compat.Tpo compat/$(DEPDIR)/lib_ebzz_ebzzconsensus_la-glibcxx_compat.Plo
#	$(AM_V_CXX)source='compat/glibcxx_compat.cpp' object='compat/lib_ebzz_ebzzconsensus_la-glibcxx_compat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_ebzz_ebzzconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/lib_ebzz_ebzzconsensus_la-glibcxx_compat.lo `test -f 'compat/glibcxx_compat.cpp' || echo '$(srcdir)/'`compat/glibcxx_compat.cpp

_ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.o: _ebzz_ebzz/_ebzz_ebzz-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_cli_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.o -MD -MP -MF _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_cli-_ebzz_ebzz-cli.Tpo -c -o _ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.o `test -f '_ebzz_ebzz/_ebzz_ebzz-cli.cpp' || echo '$(srcdir)/'`_ebzz_ebzz/_ebzz_ebzz-cli.cpp
	$(AM_V_at)$(am__mv) _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_cli-_ebzz_ebzz-cli.Tpo _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_cli-_ebzz_ebzz-cli.Po
#	$(AM_V_CXX)source='_ebzz_ebzz/_ebzz_ebzz-cli.cpp' object='_ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_cli_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.o `test -f '_ebzz_ebzz/_ebzz_ebzz-cli.cpp' || echo '$(srcdir)/'`_ebzz_ebzz/_ebzz_ebzz-cli.cpp

_ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.obj: _ebzz_ebzz/_ebzz_ebzz-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_cli_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.obj -MD -MP -MF _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_cli-_ebzz_ebzz-cli.Tpo -c -o _ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.obj `if test -f '_ebzz_ebzz/_ebzz_ebzz-cli.cpp'; then $(CYGPATH_W) '_ebzz_ebzz/_ebzz_ebzz-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/_ebzz_ebzz/_ebzz_ebzz-cli.cpp'; fi`
	$(AM_V_at)$(am__mv) _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_cli-_ebzz_ebzz-cli.Tpo _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_cli-_ebzz_ebzz-cli.Po
#	$(AM_V_CXX)source='_ebzz_ebzz/_ebzz_ebzz-cli.cpp' object='_ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_cli_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _ebzz_ebzz/_ebzz_ebzz_cli-_ebzz_ebzz-cli.obj `if test -f '_ebzz_ebzz/_ebzz_ebzz-cli.cpp'; then $(CYGPATH_W) '_ebzz_ebzz/_ebzz_ebzz-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/_ebzz_ebzz/_ebzz_ebzz-cli.cpp'; fi`

_ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.o: _ebzz_ebzz/_ebzz_ebzz-util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_util_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.o -MD -MP -MF _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_util-_ebzz_ebzz-util.Tpo -c -o _ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.o `test -f '_ebzz_ebzz/_ebzz_ebzz-util.cpp' || echo '$(srcdir)/'`_ebzz_ebzz/_ebzz_ebzz-util.cpp
	$(AM_V_at)$(am__mv) _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_util-_ebzz_ebzz-util.Tpo _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_util-_ebzz_ebzz-util.Po
#	$(AM_V_CXX)source='_ebzz_ebzz/_ebzz_ebzz-util.cpp' object='_ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_util_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.o `test -f '_ebzz_ebzz/_ebzz_ebzz-util.cpp' || echo '$(srcdir)/'`_ebzz_ebzz/_ebzz_ebzz-util.cpp

_ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.obj: _ebzz_ebzz/_ebzz_ebzz-util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_util_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.obj -MD -MP -MF _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_util-_ebzz_ebzz-util.Tpo -c -o _ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.obj `if test -f '_ebzz_ebzz/_ebzz_ebzz-util.cpp'; then $(CYGPATH_W) '_ebzz_ebzz/_ebzz_ebzz-util.cpp'; else $(CYGPATH_W) '$(srcdir)/_ebzz_ebzz/_ebzz_ebzz-util.cpp'; fi`
	$(AM_V_at)$(am__mv) _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_util-_ebzz_ebzz-util.Tpo _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzz_util-_ebzz_ebzz-util.Po
#	$(AM_V_CXX)source='_ebzz_ebzz/_ebzz_ebzz-util.cpp' object='_ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_util_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _ebzz_ebzz/_ebzz_ebzz_util-_ebzz_ebzz-util.obj `if test -f '_ebzz_ebzz/_ebzz_ebzz-util.cpp'; then $(CYGPATH_W) '_ebzz_ebzz/_ebzz_ebzz-util.cpp'; else $(CYGPATH_W) '$(srcdir)/_ebzz_ebzz/_ebzz_ebzz-util.cpp'; fi`

chainparams/_ebzz_ebzz_util-buildgenesis.o: chainparams/buildgenesis.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_util_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/_ebzz_ebzz_util-buildgenesis.o -MD -MP -MF chainparams/$(DEPDIR)/_ebzz_ebzz_util-buildgenesis.Tpo -c -o chainparams/_ebzz_ebzz_util-buildgenesis.o `test -f 'chainparams/buildgenesis.cpp' || echo '$(srcdir)/'`chainparams/buildgenesis.cpp
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/_ebzz_ebzz_util-buildgenesis.Tpo chainparams/$(DEPDIR)/_ebzz_ebzz_util-buildgenesis.Po
#	$(AM_V_CXX)source='chainparams/buildgenesis.cpp' object='chainparams/_ebzz_ebzz_util-buildgenesis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_util_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/_ebzz_ebzz_util-buildgenesis.o `test -f 'chainparams/buildgenesis.cpp' || echo '$(srcdir)/'`chainparams/buildgenesis.cpp

chainparams/_ebzz_ebzz_util-buildgenesis.obj: chainparams/buildgenesis.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_util_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/_ebzz_ebzz_util-buildgenesis.obj -MD -MP -MF chainparams/$(DEPDIR)/_ebzz_ebzz_util-buildgenesis.Tpo -c -o chainparams/_ebzz_ebzz_util-buildgenesis.obj `if test -f 'chainparams/buildgenesis.cpp'; then $(CYGPATH_W) 'chainparams/buildgenesis.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/buildgenesis.cpp'; fi`
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/_ebzz_ebzz_util-buildgenesis.Tpo chainparams/$(DEPDIR)/_ebzz_ebzz_util-buildgenesis.Po
#	$(AM_V_CXX)source='chainparams/buildgenesis.cpp' object='chainparams/_ebzz_ebzz_util-buildgenesis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzz_util_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/_ebzz_ebzz_util-buildgenesis.obj `if test -f 'chainparams/buildgenesis.cpp'; then $(CYGPATH_W) 'chainparams/buildgenesis.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/buildgenesis.cpp'; fi`

_ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.o: _ebzz_ebzz/_ebzz_ebzzd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.o -MD -MP -MF _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd-_ebzz_ebzzd.Tpo -c -o _ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.o `test -f '_ebzz_ebzz/_ebzz_ebzzd.cpp' || echo '$(srcdir)/'`_ebzz_ebzz/_ebzz_ebzzd.cpp
	$(AM_V_at)$(am__mv) _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd-_ebzz_ebzzd.Tpo _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd-_ebzz_ebzzd.Po
#	$(AM_V_CXX)source='_ebzz_ebzz/_ebzz_ebzzd.cpp' object='_ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.o `test -f '_ebzz_ebzz/_ebzz_ebzzd.cpp' || echo '$(srcdir)/'`_ebzz_ebzz/_ebzz_ebzzd.cpp

_ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.obj: _ebzz_ebzz/_ebzz_ebzzd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.obj -MD -MP -MF _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd-_ebzz_ebzzd.Tpo -c -o _ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.obj `if test -f '_ebzz_ebzz/_ebzz_ebzzd.cpp'; then $(CYGPATH_W) '_ebzz_ebzz/_ebzz_ebzzd.cpp'; else $(CYGPATH_W) '$(srcdir)/_ebzz_ebzz/_ebzz_ebzzd.cpp'; fi`
	$(AM_V_at)$(am__mv) _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd-_ebzz_ebzzd.Tpo _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd-_ebzz_ebzzd.Po
#	$(AM_V_CXX)source='_ebzz_ebzz/_ebzz_ebzzd.cpp' object='_ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _ebzz_ebzz/_ebzz_ebzzd-_ebzz_ebzzd.obj `if test -f '_ebzz_ebzz/_ebzz_ebzzd.cpp'; then $(CYGPATH_W) '_ebzz_ebzz/_ebzz_ebzzd.cpp'; else $(CYGPATH_W) '$(srcdir)/_ebzz_ebzz/_ebzz_ebzzd.cpp'; fi`

rpc/_ebzz_ebzzd-rpclist.o: rpc/rpclist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/_ebzz_ebzzd-rpclist.o -MD -MP -MF rpc/$(DEPDIR)/_ebzz_ebzzd-rpclist.Tpo -c -o rpc/_ebzz_ebzzd-rpclist.o `test -f 'rpc/rpclist.cpp' || echo '$(srcdir)/'`rpc/rpclist.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/_ebzz_ebzzd-rpclist.Tpo rpc/$(DEPDIR)/_ebzz_ebzzd-rpclist.Po
#	$(AM_V_CXX)source='rpc/rpclist.cpp' object='rpc/_ebzz_ebzzd-rpclist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/_ebzz_ebzzd-rpclist.o `test -f 'rpc/rpclist.cpp' || echo '$(srcdir)/'`rpc/rpclist.cpp

rpc/_ebzz_ebzzd-rpclist.obj: rpc/rpclist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/_ebzz_ebzzd-rpclist.obj -MD -MP -MF rpc/$(DEPDIR)/_ebzz_ebzzd-rpclist.Tpo -c -o rpc/_ebzz_ebzzd-rpclist.obj `if test -f 'rpc/rpclist.cpp'; then $(CYGPATH_W) 'rpc/rpclist.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpclist.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/_ebzz_ebzzd-rpclist.Tpo rpc/$(DEPDIR)/_ebzz_ebzzd-rpclist.Po
#	$(AM_V_CXX)source='rpc/rpclist.cpp' object='rpc/_ebzz_ebzzd-rpclist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/_ebzz_ebzzd-rpclist.obj `if test -f 'rpc/rpclist.cpp'; then $(CYGPATH_W) 'rpc/rpclist.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpclist.cpp'; fi`

chainparams/_ebzz_ebzzd-buildgenesis.o: chainparams/buildgenesis.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/_ebzz_ebzzd-buildgenesis.o -MD -MP -MF chainparams/$(DEPDIR)/_ebzz_ebzzd-buildgenesis.Tpo -c -o chainparams/_ebzz_ebzzd-buildgenesis.o `test -f 'chainparams/buildgenesis.cpp' || echo '$(srcdir)/'`chainparams/buildgenesis.cpp
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/_ebzz_ebzzd-buildgenesis.Tpo chainparams/$(DEPDIR)/_ebzz_ebzzd-buildgenesis.Po
#	$(AM_V_CXX)source='chainparams/buildgenesis.cpp' object='chainparams/_ebzz_ebzzd-buildgenesis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/_ebzz_ebzzd-buildgenesis.o `test -f 'chainparams/buildgenesis.cpp' || echo '$(srcdir)/'`chainparams/buildgenesis.cpp

chainparams/_ebzz_ebzzd-buildgenesis.obj: chainparams/buildgenesis.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/_ebzz_ebzzd-buildgenesis.obj -MD -MP -MF chainparams/$(DEPDIR)/_ebzz_ebzzd-buildgenesis.Tpo -c -o chainparams/_ebzz_ebzzd-buildgenesis.obj `if test -f 'chainparams/buildgenesis.cpp'; then $(CYGPATH_W) 'chainparams/buildgenesis.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/buildgenesis.cpp'; fi`
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/_ebzz_ebzzd-buildgenesis.Tpo chainparams/$(DEPDIR)/_ebzz_ebzzd-buildgenesis.Po
#	$(AM_V_CXX)source='chainparams/buildgenesis.cpp' object='chainparams/_ebzz_ebzzd-buildgenesis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/_ebzz_ebzzd-buildgenesis.obj `if test -f 'chainparams/buildgenesis.cpp'; then $(CYGPATH_W) 'chainparams/buildgenesis.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/buildgenesis.cpp'; fi`

filters/_ebzz_ebzzd-filtercallback.o: filters/filtercallback.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd-filtercallback.o -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd-filtercallback.Tpo -c -o filters/_ebzz_ebzzd-filtercallback.o `test -f 'filters/filtercallback.cpp' || echo '$(srcdir)/'`filters/filtercallback.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd-filtercallback.Tpo filters/$(DEPDIR)/_ebzz_ebzzd-filtercallback.Po
#	$(AM_V_CXX)source='filters/filtercallback.cpp' object='filters/_ebzz_ebzzd-filtercallback.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd-filtercallback.o `test -f 'filters/filtercallback.cpp' || echo '$(srcdir)/'`filters/filtercallback.cpp

filters/_ebzz_ebzzd-filtercallback.obj: filters/filtercallback.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd-filtercallback.obj -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd-filtercallback.Tpo -c -o filters/_ebzz_ebzzd-filtercallback.obj `if test -f 'filters/filtercallback.cpp'; then $(CYGPATH_W) 'filters/filtercallback.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/filtercallback.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd-filtercallback.Tpo filters/$(DEPDIR)/_ebzz_ebzzd-filtercallback.Po
#	$(AM_V_CXX)source='filters/filtercallback.cpp' object='filters/_ebzz_ebzzd-filtercallback.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd-filtercallback.obj `if test -f 'filters/filtercallback.cpp'; then $(CYGPATH_W) 'filters/filtercallback.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/filtercallback.cpp'; fi`

filters/_ebzz_ebzzd-watchdog.o: filters/watchdog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd-watchdog.o -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd-watchdog.Tpo -c -o filters/_ebzz_ebzzd-watchdog.o `test -f 'filters/watchdog.cpp' || echo '$(srcdir)/'`filters/watchdog.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd-watchdog.Tpo filters/$(DEPDIR)/_ebzz_ebzzd-watchdog.Po
#	$(AM_V_CXX)source='filters/watchdog.cpp' object='filters/_ebzz_ebzzd-watchdog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd-watchdog.o `test -f 'filters/watchdog.cpp' || echo '$(srcdir)/'`filters/watchdog.cpp

filters/_ebzz_ebzzd-watchdog.obj: filters/watchdog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd-watchdog.obj -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd-watchdog.Tpo -c -o filters/_ebzz_ebzzd-watchdog.obj `if test -f 'filters/watchdog.cpp'; then $(CYGPATH_W) 'filters/watchdog.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/watchdog.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd-watchdog.Tpo filters/$(DEPDIR)/_ebzz_ebzzd-watchdog.Po
#	$(AM_V_CXX)source='filters/watchdog.cpp' object='filters/_ebzz_ebzzd-watchdog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd-watchdog.obj `if test -f 'filters/watchdog.cpp'; then $(CYGPATH_W) 'filters/watchdog.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/watchdog.cpp'; fi`

json/_ebzz_ebzzd-json_spirit_writer.o: json/json_spirit_writer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT json/_ebzz_ebzzd-json_spirit_writer.o -MD -MP -MF json/$(DEPDIR)/_ebzz_ebzzd-json_spirit_writer.Tpo -c -o json/_ebzz_ebzzd-json_spirit_writer.o `test -f 'json/json_spirit_writer.cpp' || echo '$(srcdir)/'`json/json_spirit_writer.cpp
	$(AM_V_at)$(am__mv) json/$(DEPDIR)/_ebzz_ebzzd-json_spirit_writer.Tpo json/$(DEPDIR)/_ebzz_ebzzd-json_spirit_writer.Po
#	$(AM_V_CXX)source='json/json_spirit_writer.cpp' object='json/_ebzz_ebzzd-json_spirit_writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o json/_ebzz_ebzzd-json_spirit_writer.o `test -f 'json/json_spirit_writer.cpp' || echo '$(srcdir)/'`json/json_spirit_writer.cpp

json/_ebzz_ebzzd-json_spirit_writer.obj: json/json_spirit_writer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT json/_ebzz_ebzzd-json_spirit_writer.obj -MD -MP -MF json/$(DEPDIR)/_ebzz_ebzzd-json_spirit_writer.Tpo -c -o json/_ebzz_ebzzd-json_spirit_writer.obj `if test -f 'json/json_spirit_writer.cpp'; then $(CYGPATH_W) 'json/json_spirit_writer.cpp'; else $(CYGPATH_W) '$(srcdir)/json/json_spirit_writer.cpp'; fi`
	$(AM_V_at)$(am__mv) json/$(DEPDIR)/_ebzz_ebzzd-json_spirit_writer.Tpo json/$(DEPDIR)/_ebzz_ebzzd-json_spirit_writer.Po
#	$(AM_V_CXX)source='json/json_spirit_writer.cpp' object='json/_ebzz_ebzzd-json_spirit_writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o json/_ebzz_ebzzd-json_spirit_writer.obj `if test -f 'json/json_spirit_writer.cpp'; then $(CYGPATH_W) 'json/json_spirit_writer.cpp'; else $(CYGPATH_W) '$(srcdir)/json/json_spirit_writer.cpp'; fi`

filters/_ebzz_ebzzd-filter_win.o: filters/filter_win.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd-filter_win.o -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd-filter_win.Tpo -c -o filters/_ebzz_ebzzd-filter_win.o `test -f 'filters/filter_win.cpp' || echo '$(srcdir)/'`filters/filter_win.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd-filter_win.Tpo filters/$(DEPDIR)/_ebzz_ebzzd-filter_win.Po
#	$(AM_V_CXX)source='filters/filter_win.cpp' object='filters/_ebzz_ebzzd-filter_win.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd-filter_win.o `test -f 'filters/filter_win.cpp' || echo '$(srcdir)/'`filters/filter_win.cpp

filters/_ebzz_ebzzd-filter_win.obj: filters/filter_win.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd-filter_win.obj -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd-filter_win.Tpo -c -o filters/_ebzz_ebzzd-filter_win.obj `if test -f 'filters/filter_win.cpp'; then $(CYGPATH_W) 'filters/filter_win.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/filter_win.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd-filter_win.Tpo filters/$(DEPDIR)/_ebzz_ebzzd-filter_win.Po
#	$(AM_V_CXX)source='filters/filter_win.cpp' object='filters/_ebzz_ebzzd-filter_win.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd-filter_win.obj `if test -f 'filters/filter_win.cpp'; then $(CYGPATH_W) 'filters/filter_win.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/filter_win.cpp'; fi`

filters/_ebzz_ebzzd-filter.o: filters/filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd-filter.o -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd-filter.Tpo -c -o filters/_ebzz_ebzzd-filter.o `test -f 'filters/filter.cpp' || echo '$(srcdir)/'`filters/filter.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd-filter.Tpo filters/$(DEPDIR)/_ebzz_ebzzd-filter.Po
#	$(AM_V_CXX)source='filters/filter.cpp' object='filters/_ebzz_ebzzd-filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd-filter.o `test -f 'filters/filter.cpp' || echo '$(srcdir)/'`filters/filter.cpp

filters/_ebzz_ebzzd-filter.obj: filters/filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd-filter.obj -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd-filter.Tpo -c -o filters/_ebzz_ebzzd-filter.obj `if test -f 'filters/filter.cpp'; then $(CYGPATH_W) 'filters/filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/filter.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd-filter.Tpo filters/$(DEPDIR)/_ebzz_ebzzd-filter.Po
#	$(AM_V_CXX)source='filters/filter.cpp' object='filters/_ebzz_ebzzd-filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd-filter.obj `if test -f 'filters/filter.cpp'; then $(CYGPATH_W) 'filters/filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/filter.cpp'; fi`

_ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.o: _ebzz_ebzz/_ebzz_ebzzd-cold.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.o -MD -MP -MF _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.Tpo -c -o _ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.o `test -f '_ebzz_ebzz/_ebzz_ebzzd-cold.cpp' || echo '$(srcdir)/'`_ebzz_ebzz/_ebzz_ebzzd-cold.cpp
	$(AM_V_at)$(am__mv) _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.Tpo _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.Po
#	$(AM_V_CXX)source='_ebzz_ebzz/_ebzz_ebzzd-cold.cpp' object='_ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.o `test -f '_ebzz_ebzz/_ebzz_ebzzd-cold.cpp' || echo '$(srcdir)/'`_ebzz_ebzz/_ebzz_ebzzd-cold.cpp

_ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.obj: _ebzz_ebzz/_ebzz_ebzzd-cold.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.obj -MD -MP -MF _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.Tpo -c -o _ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.obj `if test -f '_ebzz_ebzz/_ebzz_ebzzd-cold.cpp'; then $(CYGPATH_W) '_ebzz_ebzz/_ebzz_ebzzd-cold.cpp'; else $(CYGPATH_W) '$(srcdir)/_ebzz_ebzz/_ebzz_ebzzd-cold.cpp'; fi`
	$(AM_V_at)$(am__mv) _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.Tpo _ebzz_ebzz/$(DEPDIR)/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.Po
#	$(AM_V_CXX)source='_ebzz_ebzz/_ebzz_ebzzd-cold.cpp' object='_ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _ebzz_ebzz/_ebzz_ebzzd_cold-_ebzz_ebzzd-cold.obj `if test -f '_ebzz_ebzz/_ebzz_ebzzd-cold.cpp'; then $(CYGPATH_W) '_ebzz_ebzz/_ebzz_ebzzd-cold.cpp'; else $(CYGPATH_W) '$(srcdir)/_ebzz_ebzz/_ebzz_ebzzd-cold.cpp'; fi`

core/_ebzz_ebzzd_cold-init-cold.o: core/init-cold.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/_ebzz_ebzzd_cold-init-cold.o -MD -MP -MF core/$(DEPDIR)/_ebzz_ebzzd_cold-init-cold.Tpo -c -o core/_ebzz_ebzzd_cold-init-cold.o `test -f 'core/init-cold.cpp' || echo '$(srcdir)/'`core/init-cold.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/_ebzz_ebzzd_cold-init-cold.Tpo core/$(DEPDIR)/_ebzz_ebzzd_cold-init-cold.Po
#	$(AM_V_CXX)source='core/init-cold.cpp' object='core/_ebzz_ebzzd_cold-init-cold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/_ebzz_ebzzd_cold-init-cold.o `test -f 'core/init-cold.cpp' || echo '$(srcdir)/'`core/init-cold.cpp

core/_ebzz_ebzzd_cold-init-cold.obj: core/init-cold.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/_ebzz_ebzzd_cold-init-cold.obj -MD -MP -MF core/$(DEPDIR)/_ebzz_ebzzd_cold-init-cold.Tpo -c -o core/_ebzz_ebzzd_cold-init-cold.obj `if test -f 'core/init-cold.cpp'; then $(CYGPATH_W) 'core/init-cold.cpp'; else $(CYGPATH_W) '$(srcdir)/core/init-cold.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/_ebzz_ebzzd_cold-init-cold.Tpo core/$(DEPDIR)/_ebzz_ebzzd_cold-init-cold.Po
#	$(AM_V_CXX)source='core/init-cold.cpp' object='core/_ebzz_ebzzd_cold-init-cold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/_ebzz_ebzzd_cold-init-cold.obj `if test -f 'core/init-cold.cpp'; then $(CYGPATH_W) 'core/init-cold.cpp'; else $(CYGPATH_W) '$(srcdir)/core/init-cold.cpp'; fi`

rpc/_ebzz_ebzzd_cold-rpclist-cold.o: rpc/rpclist-cold.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/_ebzz_ebzzd_cold-rpclist-cold.o -MD -MP -MF rpc/$(DEPDIR)/_ebzz_ebzzd_cold-rpclist-cold.Tpo -c -o rpc/_ebzz_ebzzd_cold-rpclist-cold.o `test -f 'rpc/rpclist-cold.cpp' || echo '$(srcdir)/'`rpc/rpclist-cold.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/_ebzz_ebzzd_cold-rpclist-cold.Tpo rpc/$(DEPDIR)/_ebzz_ebzzd_cold-rpclist-cold.Po
#	$(AM_V_CXX)source='rpc/rpclist-cold.cpp' object='rpc/_ebzz_ebzzd_cold-rpclist-cold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/_ebzz_ebzzd_cold-rpclist-cold.o `test -f 'rpc/rpclist-cold.cpp' || echo '$(srcdir)/'`rpc/rpclist-cold.cpp

rpc/_ebzz_ebzzd_cold-rpclist-cold.obj: rpc/rpclist-cold.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/_ebzz_ebzzd_cold-rpclist-cold.obj -MD -MP -MF rpc/$(DEPDIR)/_ebzz_ebzzd_cold-rpclist-cold.Tpo -c -o rpc/_ebzz_ebzzd_cold-rpclist-cold.obj `if test -f 'rpc/rpclist-cold.cpp'; then $(CYGPATH_W) 'rpc/rpclist-cold.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpclist-cold.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/_ebzz_ebzzd_cold-rpclist-cold.Tpo rpc/$(DEPDIR)/_ebzz_ebzzd_cold-rpclist-cold.Po
#	$(AM_V_CXX)source='rpc/rpclist-cold.cpp' object='rpc/_ebzz_ebzzd_cold-rpclist-cold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/_ebzz_ebzzd_cold-rpclist-cold.obj `if test -f 'rpc/rpclist-cold.cpp'; then $(CYGPATH_W) 'rpc/rpclist-cold.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rpclist-cold.cpp'; fi`

chainparams/_ebzz_ebzzd_cold-buildgenesis.o: chainparams/buildgenesis.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/_ebzz_ebzzd_cold-buildgenesis.o -MD -MP -MF chainparams/$(DEPDIR)/_ebzz_ebzzd_cold-buildgenesis.Tpo -c -o chainparams/_ebzz_ebzzd_cold-buildgenesis.o `test -f 'chainparams/buildgenesis.cpp' || echo '$(srcdir)/'`chainparams/buildgenesis.cpp
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/_ebzz_ebzzd_cold-buildgenesis.Tpo chainparams/$(DEPDIR)/_ebzz_ebzzd_cold-buildgenesis.Po
#	$(AM_V_CXX)source='chainparams/buildgenesis.cpp' object='chainparams/_ebzz_ebzzd_cold-buildgenesis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/_ebzz_ebzzd_cold-buildgenesis.o `test -f 'chainparams/buildgenesis.cpp' || echo '$(srcdir)/'`chainparams/buildgenesis.cpp

chainparams/_ebzz_ebzzd_cold-buildgenesis.obj: chainparams/buildgenesis.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chainparams/_ebzz_ebzzd_cold-buildgenesis.obj -MD -MP -MF chainparams/$(DEPDIR)/_ebzz_ebzzd_cold-buildgenesis.Tpo -c -o chainparams/_ebzz_ebzzd_cold-buildgenesis.obj `if test -f 'chainparams/buildgenesis.cpp'; then $(CYGPATH_W) 'chainparams/buildgenesis.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/buildgenesis.cpp'; fi`
	$(AM_V_at)$(am__mv) chainparams/$(DEPDIR)/_ebzz_ebzzd_cold-buildgenesis.Tpo chainparams/$(DEPDIR)/_ebzz_ebzzd_cold-buildgenesis.Po
#	$(AM_V_CXX)source='chainparams/buildgenesis.cpp' object='chainparams/_ebzz_ebzzd_cold-buildgenesis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chainparams/_ebzz_ebzzd_cold-buildgenesis.obj `if test -f 'chainparams/buildgenesis.cpp'; then $(CYGPATH_W) 'chainparams/buildgenesis.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams/buildgenesis.cpp'; fi`

filters/_ebzz_ebzzd_cold-filter_cold.o: filters/filter_cold.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd_cold-filter_cold.o -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd_cold-filter_cold.Tpo -c -o filters/_ebzz_ebzzd_cold-filter_cold.o `test -f 'filters/filter_cold.cpp' || echo '$(srcdir)/'`filters/filter_cold.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd_cold-filter_cold.Tpo filters/$(DEPDIR)/_ebzz_ebzzd_cold-filter_cold.Po
#	$(AM_V_CXX)source='filters/filter_cold.cpp' object='filters/_ebzz_ebzzd_cold-filter_cold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd_cold-filter_cold.o `test -f 'filters/filter_cold.cpp' || echo '$(srcdir)/'`filters/filter_cold.cpp

filters/_ebzz_ebzzd_cold-filter_cold.obj: filters/filter_cold.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd_cold-filter_cold.obj -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd_cold-filter_cold.Tpo -c -o filters/_ebzz_ebzzd_cold-filter_cold.obj `if test -f 'filters/filter_cold.cpp'; then $(CYGPATH_W) 'filters/filter_cold.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/filter_cold.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd_cold-filter_cold.Tpo filters/$(DEPDIR)/_ebzz_ebzzd_cold-filter_cold.Po
#	$(AM_V_CXX)source='filters/filter_cold.cpp' object='filters/_ebzz_ebzzd_cold-filter_cold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd_cold-filter_cold.obj `if test -f 'filters/filter_cold.cpp'; then $(CYGPATH_W) 'filters/filter_cold.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/filter_cold.cpp'; fi`

filters/_ebzz_ebzzd_cold-filtercallback_cold.o: filters/filtercallback_cold.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd_cold-filtercallback_cold.o -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd_cold-filtercallback_cold.Tpo -c -o filters/_ebzz_ebzzd_cold-filtercallback_cold.o `test -f 'filters/filtercallback_cold.cpp' || echo '$(srcdir)/'`filters/filtercallback_cold.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd_cold-filtercallback_cold.Tpo filters/$(DEPDIR)/_ebzz_ebzzd_cold-filtercallback_cold.Po
#	$(AM_V_CXX)source='filters/filtercallback_cold.cpp' object='filters/_ebzz_ebzzd_cold-filtercallback_cold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd_cold-filtercallback_cold.o `test -f 'filters/filtercallback_cold.cpp' || echo '$(srcdir)/'`filters/filtercallback_cold.cpp

filters/_ebzz_ebzzd_cold-filtercallback_cold.obj: filters/filtercallback_cold.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd_cold-filtercallback_cold.obj -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd_cold-filtercallback_cold.Tpo -c -o filters/_ebzz_ebzzd_cold-filtercallback_cold.obj `if test -f 'filters/filtercallback_cold.cpp'; then $(CYGPATH_W) 'filters/filtercallback_cold.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/filtercallback_cold.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd_cold-filtercallback_cold.Tpo filters/$(DEPDIR)/_ebzz_ebzzd_cold-filtercallback_cold.Po
#	$(AM_V_CXX)source='filters/filtercallback_cold.cpp' object='filters/_ebzz_ebzzd_cold-filtercallback_cold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd_cold-filtercallback_cold.obj `if test -f 'filters/filtercallback_cold.cpp'; then $(CYGPATH_W) 'filters/filtercallback_cold.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/filtercallback_cold.cpp'; fi`

filters/_ebzz_ebzzd_cold-watchdog.o: filters/watchdog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd_cold-watchdog.o -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd_cold-watchdog.Tpo -c -o filters/_ebzz_ebzzd_cold-watchdog.o `test -f 'filters/watchdog.cpp' || echo '$(srcdir)/'`filters/watchdog.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd_cold-watchdog.Tpo filters/$(DEPDIR)/_ebzz_ebzzd_cold-watchdog.Po
#	$(AM_V_CXX)source='filters/watchdog.cpp' object='filters/_ebzz_ebzzd_cold-watchdog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd_cold-watchdog.o `test -f 'filters/watchdog.cpp' || echo '$(srcdir)/'`filters/watchdog.cpp

filters/_ebzz_ebzzd_cold-watchdog.obj: filters/watchdog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/_ebzz_ebzzd_cold-watchdog.obj -MD -MP -MF filters/$(DEPDIR)/_ebzz_ebzzd_cold-watchdog.Tpo -c -o filters/_ebzz_ebzzd_cold-watchdog.obj `if test -f 'filters/watchdog.cpp'; then $(CYGPATH_W) 'filters/watchdog.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/watchdog.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/_ebzz_ebzzd_cold-watchdog.Tpo filters/$(DEPDIR)/_ebzz_ebzzd_cold-watchdog.Po
#	$(AM_V_CXX)source='filters/watchdog.cpp' object='filters/_ebzz_ebzzd_cold-watchdog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/_ebzz_ebzzd_cold-watchdog.obj `if test -f 'filters/watchdog.cpp'; then $(CYGPATH_W) 'filters/watchdog.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/watchdog.cpp'; fi`

json/_ebzz_ebzzd_cold-json_spirit_writer.o: json/json_spirit_writer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT json/_ebzz_ebzzd_cold-json_spirit_writer.o -MD -MP -MF json/$(DEPDIR)/_ebzz_ebzzd_cold-json_spirit_writer.Tpo -c -o json/_ebzz_ebzzd_cold-json_spirit_writer.o `test -f 'json/json_spirit_writer.cpp' || echo '$(srcdir)/'`json/json_spirit_writer.cpp
	$(AM_V_at)$(am__mv) json/$(DEPDIR)/_ebzz_ebzzd_cold-json_spirit_writer.Tpo json/$(DEPDIR)/_ebzz_ebzzd_cold-json_spirit_writer.Po
#	$(AM_V_CXX)source='json/json_spirit_writer.cpp' object='json/_ebzz_ebzzd_cold-json_spirit_writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o json/_ebzz_ebzzd_cold-json_spirit_writer.o `test -f 'json/json_spirit_writer.cpp' || echo '$(srcdir)/'`json/json_spirit_writer.cpp

json/_ebzz_ebzzd_cold-json_spirit_writer.obj: json/json_spirit_writer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT json/_ebzz_ebzzd_cold-json_spirit_writer.obj -MD -MP -MF json/$(DEPDIR)/_ebzz_ebzzd_cold-json_spirit_writer.Tpo -c -o json/_ebzz_ebzzd_cold-json_spirit_writer.obj `if test -f 'json/json_spirit_writer.cpp'; then $(CYGPATH_W) 'json/json_spirit_writer.cpp'; else $(CYGPATH_W) '$(srcdir)/json/json_spirit_writer.cpp'; fi`
	$(AM_V_at)$(am__mv) json/$(DEPDIR)/_ebzz_ebzzd_cold-json_spirit_writer.Tpo json/$(DEPDIR)/_ebzz_ebzzd_cold-json_spirit_writer.Po
#	$(AM_V_CXX)source='json/json_spirit_writer.cpp' object='json/_ebzz_ebzzd_cold-json_spirit_writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_ebzz_ebzzd_cold_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o json/_ebzz_ebzzd_cold-json_spirit_writer.obj `if test -f 'json/json_spirit_writer.cpp'; then $(CYGPATH_W) 'json/json_spirit_writer.cpp'; else $(CYGPATH_W) '$(srcdir)/json/json_spirit_writer.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf chainparams/.libs chainparams/_libs
	-rm -rf compat/.libs compat/_libs
	-rm -rf crypto/.libs crypto/_libs
	-rm -rf custom/.libs custom/_libs
	-rm -rf entities/.libs entities/_libs
	-rm -rf keys/.libs keys/_libs
	-rm -rf permissions/.libs permissions/_libs
	-rm -rf primitives/.libs primitives/_libs
	-rm -rf protocol/.libs protocol/_libs
	-rm -rf script/.libs script/_libs
	-rm -rf structs/.libs structs/_libs
	-rm -rf utils/.libs utils/_libs
	-rm -rf version/.libs version/_libs
	-rm -rf wallet/.libs wallet/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f chain/$(DEPDIR)/$(am__dirstamp)
	-rm -f chain/$(am__dirstamp)
	-rm -f chainparams/$(DEPDIR)/$(am__dirstamp)
	-rm -f chainparams/$(am__dirstamp)
	-rm -f community/$(DEPDIR)/$(am__dirstamp)
	-rm -f community/$(am__dirstamp)
	-rm -f compat/$(DEPDIR)/$(am__dirstamp)
	-rm -f compat/$(am__dirstamp)
	-rm -f core/$(DEPDIR)/$(am__dirstamp)
	-rm -f core/$(am__dirstamp)
	-rm -f crypto/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto/$(am__dirstamp)
	-rm -f custom/$(DEPDIR)/$(am__dirstamp)
	-rm -f custom/$(am__dirstamp)
	-rm -f entities/$(DEPDIR)/$(am__dirstamp)
	-rm -f entities/$(am__dirstamp)
	-rm -f filters/$(DEPDIR)/$(am__dirstamp)
	-rm -f filters/$(am__dirstamp)
	-rm -f json/$(DEPDIR)/$(am__dirstamp)
	-rm -f json/$(am__dirstamp)
	-rm -f keys/$(DEPDIR)/$(am__dirstamp)
	-rm -f keys/$(am__dirstamp)
	-rm -f miner/$(DEPDIR)/$(am__dirstamp)
	-rm -f miner/$(am__dirstamp)
	-rm -f _ebzz_ebzz/$(DEPDIR)/$(am__dirstamp)
	-rm -f _ebzz_ebzz/$(am__dirstamp)
	-rm -f net/$(DEPDIR)/$(am__dirstamp)
	-rm -f net/$(am__dirstamp)
	-rm -f permissions/$(DEPDIR)/$(am__dirstamp)
	-rm -f permissions/$(am__dirstamp)
	-rm -f primitives/$(DEPDIR)/$(am__dirstamp)
	-rm -f primitives/$(am__dirstamp)
	-rm -f protocol/$(DEPDIR)/$(am__dirstamp)
	-rm -f protocol/$(am__dirstamp)
	-rm -f rpc/$(DEPDIR)/$(am__dirstamp)
	-rm -f rpc/$(am__dirstamp)
	-rm -f script/$(DEPDIR)/$(am__dirstamp)
	-rm -f script/$(am__dirstamp)
	-rm -f storage/$(DEPDIR)/$(am__dirstamp)
	-rm -f storage/$(am__dirstamp)
	-rm -f structs/$(DEPDIR)/$(am__dirstamp)
	-rm -f structs/$(am__dirstamp)
	-rm -f ui/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/$(am__dirstamp)
	-rm -f univalue/$(DEPDIR)/$(am__dirstamp)
	-rm -f univalue/$(am__dirstamp)
	-rm -f utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f utils/$(am__dirstamp)
	-rm -f v8/$(DEPDIR)/$(am__dirstamp)
	-rm -f v8/$(am__dirstamp)
	-rm -f version/$(DEPDIR)/$(am__dirstamp)
	-rm -f version/$(am__dirstamp)
	-rm -f wallet/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf chain/$(DEPDIR) chainparams/$(DEPDIR) community/$(DEPDIR) compat/$(DEPDIR) core/$(DEPDIR) crypto/$(DEPDIR) custom/$(DEPDIR) entities/$(DEPDIR) filters/$(DEPDIR) json/$(DEPDIR) keys/$(DEPDIR) miner/$(DEPDIR) _ebzz_ebzz/$(DEPDIR) net/$(DEPDIR) permissions/$(DEPDIR) primitives/$(DEPDIR) protocol/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) storage/$(DEPDIR) structs/$(DEPDIR) ui/$(DEPDIR) univalue/$(DEPDIR) utils/$(DEPDIR) v8/$(DEPDIR) version/$(DEPDIR) wallet/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf chain/$(DEPDIR) chainparams/$(DEPDIR) community/$(DEPDIR) compat/$(DEPDIR) core/$(DEPDIR) crypto/$(DEPDIR) custom/$(DEPDIR) entities/$(DEPDIR) filters/$(DEPDIR) json/$(DEPDIR) keys/$(DEPDIR) miner/$(DEPDIR) _ebzz_ebzz/$(DEPDIR) net/$(DEPDIR) permissions/$(DEPDIR) primitives/$(DEPDIR) protocol/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) storage/$(DEPDIR) structs/$(DEPDIR) ui/$(DEPDIR) univalue/$(DEPDIR) utils/$(DEPDIR) v8/$(DEPDIR) version/$(DEPDIR) wallet/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race
$(LIBLEVELDB): $(LIBMEMENV)

$(LIBLEVELDB) $(LIBMEMENV):
	@echo "Building LevelDB ..." && $(MAKE) -C $(@D) $(@F) CXX="$(CXX)" \
	  CC="$(CC)" PLATFORM=$(TARGET_OS) AR="$(AR)" $(LEVELDB_TARGET_FLAGS) \
          OPT="$(CXXFLAGS) $(CPPFLAGS)"

$(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)

.PHONY: FORCE

obj/build.h: FORCE
	@$(MKDIR_P) $(builddir)/obj
	@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \
	  $(abs_top_srcdir)
lib_ebzz_ebzz_util_a-clientversion.$(OBJEXT): obj/build.h

clean-local:
	-$(MAKE) -C leveldb clean
	-$(MAKE) -C secp256k1 clean
	rm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno
	-rm -f config.h

.rc.o:
	@test -f $(WINDRES)
	$(AM_V_GEN) $(WINDRES) -DWINDRES_PREPROC -i $< -o $@

.mm.o:
	$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<

%.pb.cc %.pb.h: %.proto
	@test -f $(PROTOC)
	$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)

#if ENABLE_TESTS
#include Makefile.test.include
#endif

#if ENABLE_QT
#include Makefile.qt.include
#endif

#if ENABLE_QT_TESTS
#include Makefile.qttest.include
#endif

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
